var searchIndex={};
searchIndex["goblin"] = {"doc":"libgoblin","i":[[3,"HintData","goblin","Information obtained from a peek `Hint`",null,null],[12,"is_lsb","","",0,null],[12,"is_64","","",0,null],[4,"Hint","","A hint at the underlying binary format for 16 bytes of…",null,null],[13,"Elf","","",1,null],[13,"Mach","","",1,null],[13,"MachFat","","",1,null],[13,"PE","","",1,null],[13,"Archive","","",1,null],[13,"Unknown","","",1,null],[4,"Object","","A parseable object that goblin understands",null,null],[13,"Elf","","An ELF32/ELF64!",2,null],[13,"PE","","A PE32/PE32+!",2,null],[13,"Mach","","A 32/64-bit Mach-o binary OR it is a multi-architecture…",2,null],[13,"Archive","","A Unix archive",2,null],[13,"Unknown","","None of the above, with the given magic value",2,null],[5,"peek_bytes","","Peeks at `bytes`, and returns a `Hint`",null,[[],[["result",["hint"]],["hint"]]]],[5,"peek","","Peeks at the underlying Read object. Requires the…",null,[[["r"]],[["result",["hint"]],["hint"]]]],[0,"error","","A custom Goblin error",null,null],[4,"Error","goblin::error","A custom Goblin error",null,null],[13,"Malformed","","The binary is malformed somehow",3,null],[13,"BadMagic","","The binary's magic is unknown or bad",3,null],[13,"Scroll","","An error emanating from reading and interpreting bytes",3,null],[13,"IO","","An IO based error",3,null],[6,"Result","","An impish result",null,null],[0,"strtab","goblin","A byte-offset based string table. Commonly used in ELF…",null,null],[3,"Strtab","goblin::strtab","A common string table format which is indexed by byte…",null,null],[11,"new","","Construct a new strtab with `bytes` as the backing string…",4,[[["u8"]],["self"]]],[11,"from_raw","","Construct a strtab from a `ptr`, and a `size`, using…",4,[[["u8"],["usize"]],["strtab"]]],[11,"parse","","Parses a strtab from `bytes` at `offset` with `len` size…",4,[[["u8"],["usize"]],[["result",["strtab"]],["strtab"]]]],[11,"to_vec","","Converts the string table to a vector, with the original…",4,[[["self"]],[["result",["vec"]],["vec",["str"]]]]],[11,"get","","Safely parses and gets a str reference from the backing…",4,[[["self"],["usize"]],[["option",["result"]],["result",["str"]]]]],[11,"get_unsafe","","Gets a str reference from the backing bytes starting at…",4,[[["self"],["usize"]],[["str"],["option",["str"]]]]],[0,"container","goblin","Binary container size information and byte-order context",null,null],[4,"Endian","goblin::container","The endianness (byte order) of a stream of bytes",null,null],[13,"Little","","",5,null],[13,"Big","","",5,null],[3,"Ctx","","A binary parsing context, including the container size and…",null,null],[12,"container","","",6,null],[12,"le","","",6,null],[4,"Container","","The size of a binary container",null,null],[13,"Little","","",7,null],[13,"Big","","",7,null],[17,"CONTAINER","","The default binary container size - either `Big` or…",null,null],[11,"is_big","","Is this a 64-bit container or not?",7,[[],["bool"]]],[11,"is_big","","Whether this binary container context is \"big\" or not",6,[[],["bool"]]],[11,"is_little_endian","","Whether this binary container context is little endian or…",6,[[],["bool"]]],[11,"new","","Create a new binary container context",6,[[["container"],["endian"]],["self"]]],[11,"size","","Return a dubious pointer/address byte size for the container",6,[[],["usize"]]],[0,"elf","goblin","The generic ELF module, which gives access to ELF…",null,null],[3,"Elf","goblin::elf","An ELF binary. The underlying data structures are read…",null,null],[12,"header","","The ELF header, which provides a rudimentary index into…",8,null],[12,"program_headers","","The program headers; they primarily tell the kernel and…",8,null],[12,"section_headers","","The sections headers. These are strippable, never count on…",8,null],[12,"shdr_strtab","","The section header string table",8,null],[12,"dynstrtab","","The string table for the dynamically accessible symbols",8,null],[12,"dynsyms","","The dynamically accessible symbols, i.e., exports,…",8,null],[12,"syms","","The debugging symbol table",8,null],[12,"strtab","","The string table for the symbol table",8,null],[12,"dynamic","","Contains dynamic linking information, with the _DYNAMIC…",8,null],[12,"dynrelas","","The dynamic relocation entries (strings, copy-data, etc.)…",8,null],[12,"dynrels","","The dynamic relocation entries without an addend",8,null],[12,"pltrelocs","","The plt relocation entries (procedure linkage table). For…",8,null],[12,"shdr_relocs","","Section relocations by section index (only present if this…",8,null],[12,"soname","","The binary's soname, if it has one",8,null],[12,"interpreter","","The binary's program interpreter (e.g., dynamic linker),…",8,null],[12,"libraries","","A list of this binary's dynamic libraries it uses, if…",8,null],[12,"is_64","","",8,null],[12,"is_lib","","Whether this is a shared object or not",8,null],[12,"entry","","The binaries entry point address, if it has one",8,null],[12,"little_endian","","Whether the binary is little endian or not",8,null],[0,"compression_header","","",null,null],[3,"CompressionHeader","goblin::elf::compression_header","A unified CompressionHeader - convertable to and from…",null,null],[12,"ch_type","","Compression format",9,null],[12,"ch_size","","Uncompressed data size",9,null],[12,"ch_addralign","","Uncompressed data alignment",9,null],[0,"compression_header32","","",null,null],[3,"CompressionHeader","goblin::elf::compression_header::compression_header32","The compression header is used at the start of…",null,null],[12,"ch_type","","Compression format",10,null],[12,"ch_size","","Uncompressed data size",10,null],[12,"ch_addralign","","Uncompressed data alignment",10,null],[17,"SIZEOF_CHDR","","",null,null],[11,"from_bytes","","",10,[[],["compressionheader"]]],[11,"from_fd","","",10,[[["file"],["u64"]],[["result",["compressionheader"]],["compressionheader"]]]],[0,"compression_header64","goblin::elf::compression_header","",null,null],[3,"CompressionHeader","goblin::elf::compression_header::compression_header64","The compression header is used at the start of…",null,null],[12,"ch_type","","Compression format",11,null],[12,"ch_reserved","","",11,null],[12,"ch_size","","Uncompressed data size",11,null],[12,"ch_addralign","","Uncompressed data alignment",11,null],[17,"SIZEOF_CHDR","","",null,null],[11,"from_bytes","","",11,[[],["compressionheader"]]],[11,"from_fd","","",11,[[["file"],["u64"]],[["compressionheader"],["result",["compressionheader"]]]]],[17,"ELFCOMPRESS_ZLIB","goblin::elf::compression_header","ZLIB/DEFLATE algorithm.",null,null],[17,"ELFCOMPRESS_LOOS","","Start of OS-specific.",null,null],[17,"ELFCOMPRESS_HIOS","","End of OS-specific.",null,null],[17,"ELFCOMPRESS_LOPROC","","Start of processor-specific.",null,null],[17,"ELFCOMPRESS_HIPROC","","End of processor-specific.",null,null],[11,"size","","Return the size of the underlying compression header,…",9,[[["ctx"]],["usize"]]],[11,"new","","",9,[[],["self"]]],[11,"parse","","Parse a compression header from `bytes` at `offset`, using…",9,[[["usize"],["ctx"]],[["compressionheader"],["result",["compressionheader"]]]]],[0,"header","goblin::elf","",null,null],[3,"Header","goblin::elf::header","An ELF header",null,null],[12,"e_ident","","",12,null],[12,"e_type","","",12,null],[12,"e_machine","","",12,null],[12,"e_version","","",12,null],[12,"e_entry","","",12,null],[12,"e_phoff","","",12,null],[12,"e_shoff","","",12,null],[12,"e_flags","","",12,null],[12,"e_ehsize","","",12,null],[12,"e_phentsize","","",12,null],[12,"e_phnum","","",12,null],[12,"e_shentsize","","",12,null],[12,"e_shnum","","",12,null],[12,"e_shstrndx","","",12,null],[5,"machine_to_str","","Convert machine to str representation",null,[[["u16"]],["str"]]],[5,"class_to_str","","Convert a ELF class byte to the associated string.",null,[[["u8"]],["str"]]],[5,"et_to_str","","Convert an ET value to their associated string.",null,[[["u16"]],["str"]]],[0,"header32","","",null,null],[3,"Header","goblin::elf::header::header32","",null,null],[12,"e_ident","","Magic number and other info",13,null],[12,"e_type","","Object file type",13,null],[12,"e_machine","","Architecture",13,null],[12,"e_version","","Object file version",13,null],[12,"e_entry","","Entry point virtual address",13,null],[12,"e_phoff","","Program header table file offset",13,null],[12,"e_shoff","","Section header table file offset",13,null],[12,"e_flags","","Processor-specific flags",13,null],[12,"e_ehsize","","ELF header size in bytes",13,null],[12,"e_phentsize","","Program header table entry size",13,null],[12,"e_phnum","","Program header table entry count",13,null],[12,"e_shentsize","","Section header table entry size",13,null],[12,"e_shnum","","Section header table entry count",13,null],[12,"e_shstrndx","","Section header string table index",13,null],[17,"SIZEOF_EHDR","","",null,null],[17,"ELFCLASS","","",null,null],[11,"from_bytes","","Returns the corresponding ELF header from the given byte…",13,[[],["header"]]],[11,"from_fd","","Load a header from a file. You must ensure the seek is at…",13,[[["file"]],[["result",["header"]],["header"]]]],[11,"parse","","Parses an ELF header from the given bytes",13,[[],[["result",["header"]],["header"]]]],[0,"header64","goblin::elf::header","",null,null],[3,"Header","goblin::elf::header::header64","",null,null],[12,"e_ident","","Magic number and other info",14,null],[12,"e_type","","Object file type",14,null],[12,"e_machine","","Architecture",14,null],[12,"e_version","","Object file version",14,null],[12,"e_entry","","Entry point virtual address",14,null],[12,"e_phoff","","Program header table file offset",14,null],[12,"e_shoff","","Section header table file offset",14,null],[12,"e_flags","","Processor-specific flags",14,null],[12,"e_ehsize","","ELF header size in bytes",14,null],[12,"e_phentsize","","Program header table entry size",14,null],[12,"e_phnum","","Program header table entry count",14,null],[12,"e_shentsize","","Section header table entry size",14,null],[12,"e_shnum","","Section header table entry count",14,null],[12,"e_shstrndx","","Section header string table index",14,null],[17,"SIZEOF_EHDR","","",null,null],[17,"ELFCLASS","","",null,null],[11,"from_bytes","","Returns the corresponding ELF header from the given byte…",14,[[],["header"]]],[11,"from_fd","","Load a header from a file. You must ensure the seek is at…",14,[[["file"]],[["header"],["result",["header"]]]]],[11,"parse","","Parses an ELF header from the given bytes",14,[[],[["header"],["result",["header"]]]]],[17,"EM_NONE","goblin::elf::header","TODO: use Enum with explicit discriminant and get debug…",null,null],[17,"EM_M32","","AT&T WE 32100",null,null],[17,"EM_SPARC","","SUN SPARC",null,null],[17,"EM_386","","Intel 80386",null,null],[17,"EM_68K","","Motorola m68k family",null,null],[17,"EM_88K","","Motorola m88k family",null,null],[17,"EM_IAMCU","","Intel MCU",null,null],[17,"EM_860","","Intel 80860",null,null],[17,"EM_MIPS","","MIPS R3000 big-endian",null,null],[17,"EM_S370","","IBM System/370",null,null],[17,"EM_MIPS_RS3_LE","","MIPS R3000 little-endian",null,null],[17,"EM_PARISC","","HPPA",null,null],[17,"EM_VPP500","","Fujitsu VPP500",null,null],[17,"EM_SPARC32PLUS","","Sun's \"v8plus\"",null,null],[17,"EM_960","","Intel 80960",null,null],[17,"EM_PPC","","PowerPC",null,null],[17,"EM_PPC64","","PowerPC 64-bit",null,null],[17,"EM_S390","","IBM S390",null,null],[17,"EM_SPU","","IBM SPU/SPC",null,null],[17,"EM_V800","","NEC V800 series",null,null],[17,"EM_FR20","","Fujitsu FR20",null,null],[17,"EM_RH32","","TRW RH-32",null,null],[17,"EM_RCE","","Motorola RCE",null,null],[17,"EM_ARM","","ARM",null,null],[17,"EM_FAKE_ALPHA","","Digital Alpha",null,null],[17,"EM_SH","","Hitachi SH",null,null],[17,"EM_SPARCV9","","SPARC v9 64-bit",null,null],[17,"EM_TRICORE","","Siemens Tricore",null,null],[17,"EM_ARC","","Argonaut RISC Core",null,null],[17,"EM_H8_300","","Hitachi H8/300",null,null],[17,"EM_H8_300H","","Hitachi H8/300H",null,null],[17,"EM_H8S","","Hitachi H8S",null,null],[17,"EM_H8_500","","Hitachi H8/500",null,null],[17,"EM_IA_64","","Intel Merced",null,null],[17,"EM_MIPS_X","","Stanford MIPS-X",null,null],[17,"EM_COLDFIRE","","Motorola Coldfire",null,null],[17,"EM_68HC12","","Motorola M68HC12",null,null],[17,"EM_MMA","","Fujitsu MMA Multimedia Accelerator",null,null],[17,"EM_PCP","","Siemens PCP",null,null],[17,"EM_NCPU","","Sony nCPU embeeded RISC",null,null],[17,"EM_NDR1","","Denso NDR1 microprocessor",null,null],[17,"EM_STARCORE","","Motorola Start*Core processor",null,null],[17,"EM_ME16","","Toyota ME16 processor",null,null],[17,"EM_ST100","","STMicroelectronic ST100 processor",null,null],[17,"EM_TINYJ","","Advanced Logic Corp. Tinyj emb.fam",null,null],[17,"EM_X86_64","","AMD x86-64 architecture",null,null],[17,"EM_PDSP","","Sony DSP Processor",null,null],[17,"EM_PDP10","","Digital PDP-10",null,null],[17,"EM_PDP11","","Digital PDP-11",null,null],[17,"EM_FX66","","Siemens FX66 microcontroller",null,null],[17,"EM_ST9PLUS","","STMicroelectronics ST9+ 8/16 mc",null,null],[17,"EM_ST7","","STmicroelectronics ST7 8 bit mc",null,null],[17,"EM_68HC16","","Motorola MC68HC16 microcontroller",null,null],[17,"EM_68HC11","","Motorola MC68HC11 microcontroller",null,null],[17,"EM_68HC08","","Motorola MC68HC08 microcontroller",null,null],[17,"EM_68HC05","","Motorola MC68HC05 microcontroller",null,null],[17,"EM_SVX","","Silicon Graphics SVx",null,null],[17,"EM_ST19","","STMicroelectronics ST19 8 bit mc",null,null],[17,"EM_VAX","","Digital VAX",null,null],[17,"EM_CRIS","","Axis Communications 32-bit emb.proc",null,null],[17,"EM_JAVELIN","","Infineon Technologies 32-bit emb.proc",null,null],[17,"EM_FIREPATH","","Element 14 64-bit DSP Processor",null,null],[17,"EM_ZSP","","LSI Logic 16-bit DSP Processor",null,null],[17,"EM_MMIX","","Donald Knuth's educational 64-bit proc",null,null],[17,"EM_HUANY","","Harvard University machine-independent object files",null,null],[17,"EM_PRISM","","SiTera Prism",null,null],[17,"EM_AVR","","Atmel AVR 8-bit microcontroller",null,null],[17,"EM_FR30","","Fujitsu FR30",null,null],[17,"EM_D10V","","Mitsubishi D10V",null,null],[17,"EM_D30V","","Mitsubishi D30V",null,null],[17,"EM_V850","","NEC v850",null,null],[17,"EM_M32R","","Mitsubishi M32R",null,null],[17,"EM_MN10300","","Matsushita MN10300",null,null],[17,"EM_MN10200","","Matsushita MN10200",null,null],[17,"EM_PJ","","picoJava",null,null],[17,"EM_OPENRISC","","OpenRISC 32-bit embedded processor",null,null],[17,"EM_ARC_COMPACT","","ARC International ARCompact",null,null],[17,"EM_XTENSA","","Tensilica Xtensa Architecture",null,null],[17,"EM_VIDEOCORE","","Alphamosaic VideoCore",null,null],[17,"EM_TMM_GPP","","Thompson Multimedia General Purpose Proc",null,null],[17,"EM_NS32K","","National Semi. 32000",null,null],[17,"EM_TPC","","Tenor Network TPC",null,null],[17,"EM_SNP1K","","Trebia SNP 1000",null,null],[17,"EM_ST200","","STMicroelectronics ST200",null,null],[17,"EM_IP2K","","Ubicom IP2xxx",null,null],[17,"EM_MAX","","MAX processor",null,null],[17,"EM_CR","","National Semi. CompactRISC",null,null],[17,"EM_F2MC16","","Fujitsu F2MC16",null,null],[17,"EM_MSP430","","Texas Instruments msp430",null,null],[17,"EM_BLACKFIN","","Analog Devices Blackfin DSP",null,null],[17,"EM_SE_C33","","Seiko Epson S1C33 family",null,null],[17,"EM_SEP","","Sharp embedded microprocessor",null,null],[17,"EM_ARCA","","Arca RISC",null,null],[17,"EM_UNICORE","","PKU-Unity & MPRC Peking Uni. mc series",null,null],[17,"EM_EXCESS","","eXcess configurable cpu",null,null],[17,"EM_DXP","","Icera Semi. Deep Execution Processor",null,null],[17,"EM_ALTERA_NIOS2","","Altera Nios II",null,null],[17,"EM_CRX","","National Semi. CompactRISC CRX",null,null],[17,"EM_XGATE","","Motorola XGATE",null,null],[17,"EM_C166","","Infineon C16x/XC16x",null,null],[17,"EM_M16C","","Renesas M16C",null,null],[17,"EM_DSPIC30F","","Microchip Technology dsPIC30F",null,null],[17,"EM_CE","","Freescale Communication Engine RISC",null,null],[17,"EM_M32C","","Renesas M32C",null,null],[17,"EM_TSK3000","","Altium TSK3000",null,null],[17,"EM_RS08","","Freescale RS08",null,null],[17,"EM_SHARC","","Analog Devices SHARC family",null,null],[17,"EM_ECOG2","","Cyan Technology eCOG2",null,null],[17,"EM_SCORE7","","Sunplus S+core7 RISC",null,null],[17,"EM_DSP24","","New Japan Radio (NJR) 24-bit DSP",null,null],[17,"EM_VIDEOCORE3","","Broadcom VideoCore III",null,null],[17,"EM_LATTICEMICO32","","RISC for Lattice FPGA",null,null],[17,"EM_SE_C17","","Seiko Epson C17",null,null],[17,"EM_TI_C6000","","Texas Instruments TMS320C6000 DSP",null,null],[17,"EM_TI_C2000","","Texas Instruments TMS320C2000 DSP",null,null],[17,"EM_TI_C5500","","Texas Instruments TMS320C55x DSP",null,null],[17,"EM_TI_ARP32","","Texas Instruments App. Specific RISC",null,null],[17,"EM_TI_PRU","","Texas Instruments Prog. Realtime Unit",null,null],[17,"EM_MMDSP_PLUS","","STMicroelectronics 64bit VLIW DSP",null,null],[17,"EM_CYPRESS_M8C","","Cypress M8C",null,null],[17,"EM_R32C","","Renesas R32C",null,null],[17,"EM_TRIMEDIA","","NXP Semi. TriMedia",null,null],[17,"EM_QDSP6","","QUALCOMM DSP6",null,null],[17,"EM_8051","","Intel 8051 and variants",null,null],[17,"EM_STXP7X","","STMicroelectronics STxP7x",null,null],[17,"EM_NDS32","","Andes Tech. compact code emb. RISC",null,null],[17,"EM_ECOG1X","","Cyan Technology eCOG1X",null,null],[17,"EM_MAXQ30","","Dallas Semi. MAXQ30 mc",null,null],[17,"EM_XIMO16","","New Japan Radio (NJR) 16-bit DSP",null,null],[17,"EM_MANIK","","M2000 Reconfigurable RISC",null,null],[17,"EM_CRAYNV2","","Cray NV2 vector architecture",null,null],[17,"EM_RX","","Renesas RX",null,null],[17,"EM_METAG","","Imagination Tech. META",null,null],[17,"EM_MCST_ELBRUS","","MCST Elbrus",null,null],[17,"EM_ECOG16","","Cyan Technology eCOG16",null,null],[17,"EM_CR16","","National Semi. CompactRISC CR16",null,null],[17,"EM_ETPU","","Freescale Extended Time Processing Unit",null,null],[17,"EM_SLE9X","","Infineon Tech. SLE9X",null,null],[17,"EM_L10M","","Intel L10M",null,null],[17,"EM_K10M","","Intel K10M",null,null],[17,"EM_AARCH64","","ARM AARCH64",null,null],[17,"EM_AVR32","","Amtel 32-bit microprocessor",null,null],[17,"EM_STM8","","STMicroelectronics STM8",null,null],[17,"EM_TILE64","","Tileta TILE64",null,null],[17,"EM_TILEPRO","","Tilera TILEPro",null,null],[17,"EM_MICROBLAZE","","Xilinx MicroBlaze",null,null],[17,"EM_CUDA","","NVIDIA CUDA",null,null],[17,"EM_TILEGX","","Tilera TILE-Gx",null,null],[17,"EM_CLOUDSHIELD","","CloudShield",null,null],[17,"EM_COREA_1ST","","KIPO-KAIST Core-A 1st gen.",null,null],[17,"EM_COREA_2ND","","KIPO-KAIST Core-A 2nd gen.",null,null],[17,"EM_ARC_COMPACT2","","Synopsys ARCompact V2",null,null],[17,"EM_OPEN8","","Open8 RISC",null,null],[17,"EM_RL78","","Renesas RL78",null,null],[17,"EM_VIDEOCORE5","","Broadcom VideoCore V",null,null],[17,"EM_78KOR","","Renesas 78KOR",null,null],[17,"EM_56800EX","","Freescale 56800EX DSC",null,null],[17,"EM_BA1","","Beyond BA1",null,null],[17,"EM_BA2","","Beyond BA2",null,null],[17,"EM_XCORE","","XMOS xCORE",null,null],[17,"EM_MCHP_PIC","","Microchip 8-bit PIC(r)",null,null],[17,"EM_KM32","","KM211 KM32",null,null],[17,"EM_KMX32","","KM211 KMX32",null,null],[17,"EM_EMX16","","KM211 KMX16",null,null],[17,"EM_EMX8","","KM211 KMX8",null,null],[17,"EM_KVARC","","KM211 KVARC",null,null],[17,"EM_CDP","","Paneve CDP",null,null],[17,"EM_COGE","","Cognitive Smart Memory Processor",null,null],[17,"EM_COOL","","Bluechip CoolEngine",null,null],[17,"EM_NORC","","Nanoradio Optimized RISC",null,null],[17,"EM_CSR_KALIMBA","","CSR Kalimba",null,null],[17,"EM_Z80","","Zilog Z80",null,null],[17,"EM_VISIUM","","Controls and Data Services VISIUMcore",null,null],[17,"EM_FT32","","FTDI Chip FT32",null,null],[17,"EM_MOXIE","","Moxie processor",null,null],[17,"EM_AMDGPU","","AMD GPU",null,null],[17,"EM_RISCV","","RISC-V",null,null],[17,"EM_BPF","","Linux BPF -- in-kernel virtual machine",null,null],[17,"EM_NUM","","",null,null],[17,"ET_NONE","","No file type.",null,null],[17,"ET_REL","","Relocatable file.",null,null],[17,"ET_EXEC","","Executable file.",null,null],[17,"ET_DYN","","Shared object file.",null,null],[17,"ET_CORE","","Core file.",null,null],[17,"ET_NUM","","Number of defined types.",null,null],[17,"ELFMAG","","The ELF magic number.",null,null],[17,"SELFMAG","","Sizeof ELF magic number.",null,null],[17,"EI_CLASS","","File class byte index.",null,null],[17,"ELFCLASSNONE","","Invalid class.",null,null],[17,"ELFCLASS32","","32-bit objects.",null,null],[17,"ELFCLASS64","","64-bit objects.",null,null],[17,"ELFCLASSNUM","","ELF class number.",null,null],[17,"EI_DATA","","Data encoding byte index.",null,null],[17,"ELFDATANONE","","Invalid data encoding.",null,null],[17,"ELFDATA2LSB","","2's complement, little endian.",null,null],[17,"ELFDATA2MSB","","2's complement, big endian.",null,null],[17,"EI_VERSION","","File version byte index.",null,null],[17,"EV_CURRENT","","Current ELF version.",null,null],[17,"EI_OSABI","","OS ABI byte index.",null,null],[17,"ELFOSABI_NONE","","UNIX System V ABI.",null,null],[17,"EI_ABIVERSION","","ABI version byte index.",null,null],[17,"SIZEOF_IDENT","","Number of bytes in an identifier.",null,null],[11,"size","","Return the size of the underlying program header, given a…",12,[[["ctx"]],["usize"]]],[11,"container","","Returns the container type this header specifies",12,[[["self"]],[["result",["container"]],["container"]]]],[11,"endianness","","Returns the byte order this header specifies",12,[[["self"]],[["result",["endian"]],["endian"]]]],[11,"new","","",12,[[["ctx"]],["self"]]],[0,"program_header","goblin::elf","",null,null],[3,"ProgramHeader","goblin::elf::program_header","A unified ProgramHeader - convertable to and from 32-bit…",null,null],[12,"p_type","","",15,null],[12,"p_flags","","",15,null],[12,"p_offset","","",15,null],[12,"p_vaddr","","",15,null],[12,"p_paddr","","",15,null],[12,"p_filesz","","",15,null],[12,"p_memsz","","",15,null],[12,"p_align","","",15,null],[5,"pt_to_str","","",null,[[["u32"]],["str"]]],[0,"program_header32","","",null,null],[3,"ProgramHeader","goblin::elf::program_header::program_header32","A 64-bit ProgramHeader typically specifies how to map…",null,null],[12,"p_type","","Segment type",16,null],[12,"p_offset","","Segment file offset",16,null],[12,"p_vaddr","","Segment virtual address",16,null],[12,"p_paddr","","Segment physical address",16,null],[12,"p_filesz","","Segment size in file",16,null],[12,"p_memsz","","Segment size in memory",16,null],[12,"p_flags","","Segment flags",16,null],[12,"p_align","","Segment alignment",16,null],[17,"SIZEOF_PHDR","","",null,null],[11,"parse","","",16,[[["usize"],["endian"]],[["result",["vec"]],["vec",["programheader"]]]]],[11,"from_bytes","","",16,[[["usize"]],[["programheader"],["vec",["programheader"]]]]],[11,"from_raw_parts","","",16,[[["usize"]]]],[11,"from_fd","","",16,[[["usize"],["file"],["u64"]],[["result",["vec"]],["vec",["programheader"]]]]],[0,"program_header64","goblin::elf::program_header","",null,null],[3,"ProgramHeader","goblin::elf::program_header::program_header64","A 32-bit ProgramHeader typically specifies how to map…",null,null],[12,"p_type","","Segment type",17,null],[12,"p_flags","","Segment flags",17,null],[12,"p_offset","","Segment file offset",17,null],[12,"p_vaddr","","Segment virtual address",17,null],[12,"p_paddr","","Segment physical address",17,null],[12,"p_filesz","","Segment size in file",17,null],[12,"p_memsz","","Segment size in memory",17,null],[12,"p_align","","Segment alignment",17,null],[17,"SIZEOF_PHDR","","",null,null],[11,"parse","","",17,[[["usize"],["endian"]],[["vec",["programheader"]],["result",["vec"]]]]],[11,"from_bytes","","",17,[[["usize"]],[["vec",["programheader"]],["programheader"]]]],[11,"from_raw_parts","","",17,[[["usize"]]]],[11,"from_fd","","",17,[[["usize"],["file"],["u64"]],[["vec",["programheader"]],["result",["vec"]]]]],[17,"PT_NULL","goblin::elf::program_header","Program header table entry unused",null,null],[17,"PT_LOAD","","Loadable program segment",null,null],[17,"PT_DYNAMIC","","Dynamic linking information",null,null],[17,"PT_INTERP","","Program interpreter",null,null],[17,"PT_NOTE","","Auxiliary information",null,null],[17,"PT_SHLIB","","Reserved",null,null],[17,"PT_PHDR","","Entry for header table itself",null,null],[17,"PT_TLS","","Thread-local storage segment",null,null],[17,"PT_NUM","","Number of defined types",null,null],[17,"PT_LOOS","","Start of OS-specific",null,null],[17,"PT_GNU_EH_FRAME","","GCC .eh_frame_hdr segment",null,null],[17,"PT_GNU_STACK","","Indicates stack executability",null,null],[17,"PT_GNU_RELRO","","Read-only after relocation",null,null],[17,"PT_LOSUNW","","Sun Specific segment",null,null],[17,"PT_SUNWBSS","","Sun Specific segment",null,null],[17,"PT_SUNWSTACK","","Stack segment",null,null],[17,"PT_HISUNW","","End of OS-specific",null,null],[17,"PT_HIOS","","End of OS-specific",null,null],[17,"PT_LOPROC","","Start of processor-specific",null,null],[17,"PT_ARM_EXIDX","","ARM unwind segment",null,null],[17,"PT_HIPROC","","End of processor-specific",null,null],[17,"PF_X","","Segment is executable",null,null],[17,"PF_W","","Segment is writable",null,null],[17,"PF_R","","Segment is readable",null,null],[11,"size","","Return the size of the underlying program header, given a…",15,[[["ctx"]],["usize"]]],[11,"new","","Create a new `PT_LOAD` ELF program header",15,[[],["self"]]],[11,"file_range","","Returns this program header's file offset range",15,[[["self"]],[["range",["usize"]],["usize"]]]],[11,"vm_range","","Returns this program header's virtual memory range",15,[[["self"]],[["range",["usize"]],["usize"]]]],[11,"executable","","Sets the executable flag",15,[[["self"]]]],[11,"write","","Sets the write flag",15,[[["self"]]]],[11,"read","","Sets the read flag",15,[[["self"]]]],[11,"is_executable","","Whether this program header is executable",15,[[["self"]],["bool"]]],[11,"is_read","","Whether this program header is readable",15,[[["self"]],["bool"]]],[11,"is_write","","Whether this program header is writable",15,[[["self"]],["bool"]]],[11,"parse","","",15,[[["usize"],["ctx"]],[["vec",["programheader"]],["result",["vec"]]]]],[0,"section_header","goblin::elf","",null,null],[3,"SectionHeader","goblin::elf::section_header","A unified SectionHeader - convertable to and from 32-bit…",null,null],[12,"sh_name","","Section name (string tbl index)",18,null],[12,"sh_type","","Section type",18,null],[12,"sh_flags","","Section flags",18,null],[12,"sh_addr","","Section virtual addr at execution",18,null],[12,"sh_offset","","Section file offset",18,null],[12,"sh_size","","Section size in bytes",18,null],[12,"sh_link","","Link to another section",18,null],[12,"sh_info","","Additional section information",18,null],[12,"sh_addralign","","Section alignment",18,null],[12,"sh_entsize","","Entry size if section holds table",18,null],[5,"sht_to_str","","",null,[[["u32"]],["str"]]],[5,"shf_to_str","","",null,[[["u32"]],["str"]]],[0,"section_header32","","",null,null],[3,"SectionHeader","goblin::elf::section_header::section_header32","Section Headers are typically used by humans and static…",null,null],[12,"sh_name","","Section name (string tbl index)",19,null],[12,"sh_type","","Section type",19,null],[12,"sh_flags","","Section flags",19,null],[12,"sh_addr","","Section virtual addr at execution",19,null],[12,"sh_offset","","Section file offset",19,null],[12,"sh_size","","Section size in bytes",19,null],[12,"sh_link","","Link to another section",19,null],[12,"sh_info","","Additional section information",19,null],[12,"sh_addralign","","Section alignment",19,null],[12,"sh_entsize","","Entry size if section holds table",19,null],[17,"SIZEOF_SHDR","","",null,null],[11,"from_bytes","","",19,[[["usize"]],[["sectionheader"],["vec",["sectionheader"]]]]],[11,"from_fd","","",19,[[["usize"],["file"],["u64"]],[["result",["vec"]],["vec",["sectionheader"]]]]],[0,"section_header64","goblin::elf::section_header","",null,null],[3,"SectionHeader","goblin::elf::section_header::section_header64","Section Headers are typically used by humans and static…",null,null],[12,"sh_name","","Section name (string tbl index)",20,null],[12,"sh_type","","Section type",20,null],[12,"sh_flags","","Section flags",20,null],[12,"sh_addr","","Section virtual addr at execution",20,null],[12,"sh_offset","","Section file offset",20,null],[12,"sh_size","","Section size in bytes",20,null],[12,"sh_link","","Link to another section",20,null],[12,"sh_info","","Additional section information",20,null],[12,"sh_addralign","","Section alignment",20,null],[12,"sh_entsize","","Entry size if section holds table",20,null],[17,"SIZEOF_SHDR","","",null,null],[11,"from_bytes","","",20,[[["usize"]],[["sectionheader"],["vec",["sectionheader"]]]]],[11,"from_fd","","",20,[[["usize"],["file"],["u64"]],[["result",["vec"]],["vec",["sectionheader"]]]]],[17,"SHN_UNDEF","goblin::elf::section_header","Undefined section.",null,null],[17,"SHN_LORESERVE","","Start of reserved indices.",null,null],[17,"SHN_LOPROC","","Start of processor-specific.",null,null],[17,"SHN_BEFORE","","Order section before all others (Solaris).",null,null],[17,"SHN_AFTER","","Order section after all others (Solaris).",null,null],[17,"SHN_HIPROC","","End of processor-specific.",null,null],[17,"SHN_LOOS","","Start of OS-specific.",null,null],[17,"SHN_HIOS","","End of OS-specific.",null,null],[17,"SHN_ABS","","Associated symbol is absolute.",null,null],[17,"SHN_COMMON","","Associated symbol is common.",null,null],[17,"SHN_XINDEX","","Index is in extra table.",null,null],[17,"SHN_HIRESERVE","","End of reserved indices.",null,null],[17,"SHT_NULL","","Section header table entry unused.",null,null],[17,"SHT_PROGBITS","","Program data.",null,null],[17,"SHT_SYMTAB","","Symbol table.",null,null],[17,"SHT_STRTAB","","String table.",null,null],[17,"SHT_RELA","","Relocation entries with addends.",null,null],[17,"SHT_HASH","","Symbol hash table.",null,null],[17,"SHT_DYNAMIC","","Dynamic linking information.",null,null],[17,"SHT_NOTE","","Notes.",null,null],[17,"SHT_NOBITS","","Program space with no data (bss).",null,null],[17,"SHT_REL","","Relocation entries, no addends.",null,null],[17,"SHT_SHLIB","","Reserved.",null,null],[17,"SHT_DYNSYM","","Dynamic linker symbol table.",null,null],[17,"SHT_INIT_ARRAY","","Array of constructors.",null,null],[17,"SHT_FINI_ARRAY","","Array of destructors.",null,null],[17,"SHT_PREINIT_ARRAY","","Array of pre-constructors.",null,null],[17,"SHT_GROUP","","Section group.",null,null],[17,"SHT_SYMTAB_SHNDX","","Extended section indeces.",null,null],[17,"SHT_NUM","","Number of defined types.",null,null],[17,"SHT_LOOS","","Start OS-specific.",null,null],[17,"SHT_GNU_ATTRIBUTES","","Object attributes.",null,null],[17,"SHT_GNU_HASH","","GNU-style hash table.",null,null],[17,"SHT_GNU_LIBLIST","","Prelink library list.",null,null],[17,"SHT_CHECKSUM","","Checksum for DSO content.",null,null],[17,"SHT_LOSUNW","","Sun-specific low bound.",null,null],[17,"SHT_SUNW_MOVE","","",null,null],[17,"SHT_SUNW_COMDAT","","",null,null],[17,"SHT_SUNW_SYMINFO","","",null,null],[17,"SHT_GNU_VERDEF","","Version definition section.",null,null],[17,"SHT_GNU_VERNEED","","Version needs section.",null,null],[17,"SHT_GNU_VERSYM","","Version symbol table.",null,null],[17,"SHT_HISUNW","","Sun-specific high bound.",null,null],[17,"SHT_HIOS","","End OS-specific type.",null,null],[17,"SHT_LOPROC","","Start of processor-specific.",null,null],[17,"SHT_HIPROC","","End of processor-specific.",null,null],[17,"SHT_LOUSER","","Start of application-specific.",null,null],[17,"SHT_HIUSER","","End of application-specific.",null,null],[17,"SHF_WRITE","","Writable.",null,null],[17,"SHF_ALLOC","","Occupies memory during execution.",null,null],[17,"SHF_EXECINSTR","","Executable.",null,null],[17,"SHF_MERGE","","Might be merged.",null,null],[17,"SHF_STRINGS","","Contains nul-terminated strings.",null,null],[17,"SHF_INFO_LINK","","`sh_info' contains SHT index.",null,null],[17,"SHF_LINK_ORDER","","Preserve order after combining.",null,null],[17,"SHF_OS_NONCONFORMING","","Non-standard OS specific handling required.",null,null],[17,"SHF_GROUP","","Section is member of a group.",null,null],[17,"SHF_TLS","","Section hold thread-local data.",null,null],[17,"SHF_COMPRESSED","","Section with compressed data.",null,null],[17,"SHF_MASKOS","","OS-specific..",null,null],[17,"SHF_MASKPROC","","Processor-specific.",null,null],[17,"SHF_ORDERED","","Special ordering requirement (Solaris).",null,null],[17,"SHF_NUM_REGULAR_FLAGS","","Number of \"regular\" section header flags",null,null],[17,"SHF_FLAGS","","",null,null],[11,"size","","Return the size of the underlying program header, given a…",18,[[["ctx"]],["usize"]]],[11,"new","","",18,[[],["self"]]],[11,"file_range","","Returns this section header's file offset range",18,[[["self"]],[["range",["usize"]],["usize"]]]],[11,"vm_range","","Returns this section header's virtual memory range",18,[[["self"]],[["range",["usize"]],["usize"]]]],[11,"parse","","Parse `count` section headers from `bytes` at `offset`,…",18,[[["usize"],["ctx"]],[["vec",["sectionheader"]],["result",["vec"]]]]],[11,"check_size","","",18,[[["self"],["usize"]],["result"]]],[11,"is_relocation","","",18,[[["self"]],["bool"]]],[11,"is_executable","","",18,[[["self"]],["bool"]]],[11,"is_writable","","",18,[[["self"]],["bool"]]],[11,"is_alloc","","",18,[[["self"]],["bool"]]],[0,"sym","goblin::elf","",null,null],[3,"Sym","goblin::elf::sym","A unified Sym definition - convertible to and from 32-bit…",null,null],[12,"st_name","","",21,null],[12,"st_info","","",21,null],[12,"st_other","","",21,null],[12,"st_shndx","","",21,null],[12,"st_value","","",21,null],[12,"st_size","","",21,null],[3,"Symtab","","An ELF symbol table, allowing lazy iteration over symbols",null,null],[3,"SymIterator","","An iterator over symbols in an ELF symbol table",null,null],[5,"st_bind","","Get the ST bind.",null,[[["u8"]],["u8"]]],[5,"st_type","","Get the ST type.",null,[[["u8"]],["u8"]]],[5,"st_visibility","","Get the ST visibility.",null,[[["u8"]],["u8"]]],[5,"is_import","","Is this information defining an import?",null,[[["u64"],["u8"]],["bool"]]],[5,"get_type","","Convenience function to get the &'static str type from the…",null,[[["u8"]],["str"]]],[5,"bind_to_str","","Get the string for some bind.",null,[[["u8"]],["str"]]],[5,"type_to_str","","Get the string for some type.",null,[[["u8"]],["str"]]],[5,"visibility_to_str","","Get the string for some visibility",null,[[["u8"]],["str"]]],[0,"sym32","","",null,null],[3,"Sym","goblin::elf::sym::sym32","32-bit Sym - used for both static and dynamic symbol…",null,null],[12,"st_name","","Symbol name (string tbl index)",22,null],[12,"st_value","","Symbol value",22,null],[12,"st_size","","Symbol size",22,null],[12,"st_info","","Symbol type and binding",22,null],[12,"st_other","","Symbol visibility",22,null],[12,"st_shndx","","Section index",22,null],[5,"from_raw","","",null,[[["usize"]]]],[5,"from_fd","","",null,[[["file"],["usize"]],[["vec",["sym"]],["result",["vec"]]]]],[17,"SIZEOF_SYM","","",null,null],[11,"is_import","","Checks whether this `Sym` has `STB_GLOBAL`/`STB_WEAK` bind…",22,[[["self"]],["bool"]]],[11,"is_function","","Checks whether this `Sym` has type `STT_FUNC`",22,[[["self"]],["bool"]]],[0,"sym64","goblin::elf::sym","",null,null],[3,"Sym","goblin::elf::sym::sym64","64-bit Sym - used for both static and dynamic symbol…",null,null],[12,"st_name","","Symbol name (string tbl index)",23,null],[12,"st_info","","Symbol type and binding",23,null],[12,"st_other","","Symbol visibility",23,null],[12,"st_shndx","","Section index",23,null],[12,"st_value","","Symbol value",23,null],[12,"st_size","","Symbol size",23,null],[5,"from_raw","","",null,[[["usize"]]]],[5,"from_fd","","",null,[[["file"],["usize"]],[["result",["vec"]],["vec",["sym"]]]]],[17,"SIZEOF_SYM","","",null,null],[11,"is_import","","Checks whether this `Sym` has `STB_GLOBAL`/`STB_WEAK` bind…",23,[[["self"]],["bool"]]],[11,"is_function","","Checks whether this `Sym` has type `STT_FUNC`",23,[[["self"]],["bool"]]],[17,"STB_LOCAL","goblin::elf::sym","=== Sym bindings === Local symbol.",null,null],[17,"STB_GLOBAL","","Global symbol.",null,null],[17,"STB_WEAK","","Weak symbol.",null,null],[17,"STB_NUM","","Number of defined types..",null,null],[17,"STB_LOOS","","Start of OS-specific.",null,null],[17,"STB_GNU_UNIQUE","","Unique symbol..",null,null],[17,"STB_HIOS","","End of OS-specific.",null,null],[17,"STB_LOPROC","","Start of processor-specific.",null,null],[17,"STB_HIPROC","","End of processor-specific.",null,null],[17,"STT_NOTYPE","","=== Sym types === Symbol type is unspecified.",null,null],[17,"STT_OBJECT","","Symbol is a data object.",null,null],[17,"STT_FUNC","","Symbol is a code object.",null,null],[17,"STT_SECTION","","Symbol associated with a section.",null,null],[17,"STT_FILE","","Symbol's name is file name.",null,null],[17,"STT_COMMON","","Symbol is a common data object.",null,null],[17,"STT_TLS","","Symbol is thread-local data object.",null,null],[17,"STT_NUM","","Number of defined types.",null,null],[17,"STT_LOOS","","Start of OS-specific.",null,null],[17,"STT_GNU_IFUNC","","Symbol is indirect code object.",null,null],[17,"STT_HIOS","","End of OS-specific.",null,null],[17,"STT_LOPROC","","Start of processor-specific.",null,null],[17,"STT_HIPROC","","End of processor-specific.",null,null],[17,"STV_DEFAULT","","=== Sym visibility === Default: Visibility is specified by…",null,null],[17,"STV_INTERNAL","","Internal: use of this attribute is currently reserved.",null,null],[17,"STV_HIDDEN","","Hidden: Not visible to other components, necessarily…",null,null],[17,"STV_PROTECTED","","Protected: Symbol defined in current component is visible…",null,null],[17,"STV_EXPORTED","","Exported: ensures a symbol remains global, cannot be…",null,null],[17,"STV_SINGLETON","","Singleton: ensures a symbol remains global, and that a…",null,null],[17,"STV_ELIMINATE","","Eliminate: extends the hidden attribute. Not written in…",null,null],[11,"size","","",21,[[["container"]],["usize"]]],[11,"is_import","","Checks whether this `Sym` has `STB_GLOBAL`/`STB_WEAK` bind…",21,[[["self"]],["bool"]]],[11,"is_function","","Checks whether this `Sym` has type `STT_FUNC`",21,[[["self"]],["bool"]]],[11,"st_bind","","Get the ST bind.",21,[[["self"]],["u8"]]],[11,"st_type","","Get the ST type.",21,[[["self"]],["u8"]]],[11,"st_visibility","","Get the ST visibility.",21,[[["self"]],["u8"]]],[11,"parse","","Parse `count` vector of ELF symbols from `offset`",21,[[["usize"],["ctx"]],[["vec",["sym"]],["result",["vec"]]]]],[11,"parse","","Parse a table of `count` ELF symbols from `offset`.",24,[[["ctx"],["usize"]],[["symtab"],["result",["symtab"]]]]],[11,"get","","Try to parse a single symbol from the binary, at `index`.",24,[[["self"],["usize"]],[["sym"],["option",["sym"]]]]],[11,"len","","The number of symbols in the table.",24,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if table has no symbols.",24,[[["self"]],["bool"]]],[11,"iter","","Iterate over all symbols.",24,[[["self"]],["symiterator"]]],[11,"to_vec","","Parse all symbols into a vector.",24,[[["self"]],[["vec",["sym"]],["sym"]]]],[0,"dynamic","goblin::elf","",null,null],[3,"Dyn","goblin::elf::dynamic","",null,null],[12,"d_tag","","",25,null],[12,"d_val","","",25,null],[3,"Dynamic","","",null,null],[12,"dyns","","",26,null],[12,"info","","",26,null],[3,"DynamicInfo","","Important dynamic linking info generated via a single pass…",null,null],[12,"rela","","",27,null],[12,"relasz","","",27,null],[12,"relaent","","",27,null],[12,"relacount","","",27,null],[12,"rel","","",27,null],[12,"relsz","","",27,null],[12,"relent","","",27,null],[12,"relcount","","",27,null],[12,"gnu_hash","","",27,null],[12,"hash","","",27,null],[12,"strtab","","",27,null],[12,"strsz","","",27,null],[12,"symtab","","",27,null],[12,"syment","","",27,null],[12,"pltgot","","",27,null],[12,"pltrelsz","","",27,null],[12,"pltrel","","",27,null],[12,"jmprel","","",27,null],[12,"verneed","","",27,null],[12,"verneednum","","",27,null],[12,"versym","","",27,null],[12,"init","","",27,null],[12,"fini","","",27,null],[12,"init_array","","",27,null],[12,"init_arraysz","","",27,null],[12,"fini_array","","",27,null],[12,"fini_arraysz","","",27,null],[12,"needed_count","","",27,null],[12,"flags","","",27,null],[12,"flags_1","","",27,null],[12,"soname","","",27,null],[12,"textrel","","",27,null],[5,"tag_to_str","","Converts a tag to its string representation.",null,[[["u64"]],["str"]]],[5,"df_tag_to_str","","",null,[[["u64"]],["str"]]],[5,"df_1_tag_to_str","","",null,[[["u64"]],["str"]]],[0,"dyn32","","",null,null],[3,"Dyn","goblin::elf::dynamic::dyn32","An entry in the dynamic array",null,null],[12,"d_tag","","Dynamic entry type",28,null],[12,"d_val","","Integer value",28,null],[3,"DynamicInfo","","Important dynamic linking info generated via a single pass…",null,null],[12,"rela","","",29,null],[12,"relasz","","",29,null],[12,"relaent","","",29,null],[12,"relacount","","",29,null],[12,"rel","","",29,null],[12,"relsz","","",29,null],[12,"relent","","",29,null],[12,"relcount","","",29,null],[12,"gnu_hash","","",29,null],[12,"hash","","",29,null],[12,"strtab","","",29,null],[12,"strsz","","",29,null],[12,"symtab","","",29,null],[12,"syment","","",29,null],[12,"pltgot","","",29,null],[12,"pltrelsz","","",29,null],[12,"pltrel","","",29,null],[12,"jmprel","","",29,null],[12,"verneed","","",29,null],[12,"verneednum","","",29,null],[12,"versym","","",29,null],[12,"init","","",29,null],[12,"fini","","",29,null],[12,"init_array","","",29,null],[12,"init_arraysz","","",29,null],[12,"fini_array","","",29,null],[12,"fini_arraysz","","",29,null],[12,"needed_count","","",29,null],[12,"flags","","",29,null],[12,"flags_1","","",29,null],[12,"soname","","",29,null],[12,"textrel","","",29,null],[5,"from_fd","","Returns a vector of dynamic entries from the given fd and…",null,[[["file"]],[["result",["option"]],["option",["vec"]]]]],[5,"from_raw","","Given a bias and a memory address (typically for a…",null,[[["usize"]]]],[5,"from_phdrs","","Maybe gets and returns the dynamic array with the same…",null,[[["usize"]],["option"]]],[5,"get_needed","","Gets the needed libraries from the `_DYNAMIC` array, with…",null,[[["usize"]],[["str"],["vec",["str"]]]]],[17,"SIZEOF_DYN","","",null,null],[11,"update","","",29,[[["self"],["dyn"]]]],[11,"new","","",29,[[],["dynamicinfo"]]],[0,"dyn64","goblin::elf::dynamic","",null,null],[3,"Dyn","goblin::elf::dynamic::dyn64","An entry in the dynamic array",null,null],[12,"d_tag","","Dynamic entry type",30,null],[12,"d_val","","Integer value",30,null],[3,"DynamicInfo","","Important dynamic linking info generated via a single pass…",null,null],[12,"rela","","",31,null],[12,"relasz","","",31,null],[12,"relaent","","",31,null],[12,"relacount","","",31,null],[12,"rel","","",31,null],[12,"relsz","","",31,null],[12,"relent","","",31,null],[12,"relcount","","",31,null],[12,"gnu_hash","","",31,null],[12,"hash","","",31,null],[12,"strtab","","",31,null],[12,"strsz","","",31,null],[12,"symtab","","",31,null],[12,"syment","","",31,null],[12,"pltgot","","",31,null],[12,"pltrelsz","","",31,null],[12,"pltrel","","",31,null],[12,"jmprel","","",31,null],[12,"verneed","","",31,null],[12,"verneednum","","",31,null],[12,"versym","","",31,null],[12,"init","","",31,null],[12,"fini","","",31,null],[12,"init_array","","",31,null],[12,"init_arraysz","","",31,null],[12,"fini_array","","",31,null],[12,"fini_arraysz","","",31,null],[12,"needed_count","","",31,null],[12,"flags","","",31,null],[12,"flags_1","","",31,null],[12,"soname","","",31,null],[12,"textrel","","",31,null],[5,"from_fd","","Returns a vector of dynamic entries from the given fd and…",null,[[["file"]],[["result",["option"]],["option",["vec"]]]]],[5,"from_raw","","Given a bias and a memory address (typically for a…",null,[[["usize"]]]],[5,"from_phdrs","","Maybe gets and returns the dynamic array with the same…",null,[[["usize"]],["option"]]],[5,"get_needed","","Gets the needed libraries from the `_DYNAMIC` array, with…",null,[[["usize"]],[["str"],["vec",["str"]]]]],[17,"SIZEOF_DYN","","",null,null],[11,"update","","",31,[[["self"],["dyn"]]]],[11,"new","","",31,[[],["dynamicinfo"]]],[17,"DT_NULL","goblin::elf::dynamic","Marks end of dynamic section",null,null],[17,"DT_NEEDED","","Name of needed library",null,null],[17,"DT_PLTRELSZ","","Size in bytes of PLT relocs",null,null],[17,"DT_PLTGOT","","Processor defined value",null,null],[17,"DT_HASH","","Address of symbol hash table",null,null],[17,"DT_STRTAB","","Address of string table",null,null],[17,"DT_SYMTAB","","Address of symbol table",null,null],[17,"DT_RELA","","Address of Rela relocs",null,null],[17,"DT_RELASZ","","Total size of Rela relocs",null,null],[17,"DT_RELAENT","","Size of one Rela reloc",null,null],[17,"DT_STRSZ","","Size of string table",null,null],[17,"DT_SYMENT","","Size of one symbol table entry",null,null],[17,"DT_INIT","","Address of init function",null,null],[17,"DT_FINI","","Address of termination function",null,null],[17,"DT_SONAME","","Name of shared object",null,null],[17,"DT_RPATH","","Library search path (deprecated)",null,null],[17,"DT_SYMBOLIC","","Start symbol search here",null,null],[17,"DT_REL","","Address of Rel relocs",null,null],[17,"DT_RELSZ","","Total size of Rel relocs",null,null],[17,"DT_RELENT","","Size of one Rel reloc",null,null],[17,"DT_PLTREL","","Type of reloc in PLT",null,null],[17,"DT_DEBUG","","For debugging; unspecified",null,null],[17,"DT_TEXTREL","","Reloc might modify .text",null,null],[17,"DT_JMPREL","","Address of PLT relocs",null,null],[17,"DT_BIND_NOW","","Process relocations of object",null,null],[17,"DT_INIT_ARRAY","","Array with addresses of init fct",null,null],[17,"DT_FINI_ARRAY","","Array with addresses of fini fct",null,null],[17,"DT_INIT_ARRAYSZ","","Size in bytes of DT_INIT_ARRAY",null,null],[17,"DT_FINI_ARRAYSZ","","Size in bytes of DT_FINI_ARRAY",null,null],[17,"DT_RUNPATH","","Library search path",null,null],[17,"DT_FLAGS","","Flags for the object being loaded",null,null],[17,"DT_ENCODING","","Start of encoded range",null,null],[17,"DT_PREINIT_ARRAY","","Array with addresses of preinit fct",null,null],[17,"DT_PREINIT_ARRAYSZ","","size in bytes of DT_PREINIT_ARRAY",null,null],[17,"DT_NUM","","Number used",null,null],[17,"DT_LOOS","","Start of OS-specific",null,null],[17,"DT_HIOS","","End of OS-specific",null,null],[17,"DT_LOPROC","","Start of processor-specific",null,null],[17,"DT_HIPROC","","End of processor-specific",null,null],[17,"DT_ADDRRNGLO","","DT_* entries which fall between DT_ADDRRNGHI &…",null,null],[17,"DT_GNU_HASH","","GNU-style hash table",null,null],[17,"DT_TLSDESC_PLT","","",null,null],[17,"DT_TLSDESC_GOT","","",null,null],[17,"DT_GNU_CONFLICT","","Start of conflict section",null,null],[17,"DT_GNU_LIBLIST","","Library list",null,null],[17,"DT_CONFIG","","Configuration information",null,null],[17,"DT_DEPAUDIT","","Dependency auditing",null,null],[17,"DT_AUDIT","","Object auditing",null,null],[17,"DT_PLTPAD","","PLT padding",null,null],[17,"DT_MOVETAB","","Move table",null,null],[17,"DT_SYMINFO","","Syminfo table",null,null],[17,"DT_ADDRRNGHI","","",null,null],[17,"DT_ADDRNUM","","",null,null],[17,"DT_VERSYM","","The versioning entry types. The next are defined as part…",null,null],[17,"DT_RELACOUNT","","",null,null],[17,"DT_RELCOUNT","","",null,null],[17,"DT_FLAGS_1","","State flags, see DF_1_* below",null,null],[17,"DT_VERDEF","","Address of version definition table",null,null],[17,"DT_VERDEFNUM","","Number of version definitions",null,null],[17,"DT_VERNEED","","Address of table with needed versions",null,null],[17,"DT_VERNEEDNUM","","Number of needed versions",null,null],[17,"DF_ORIGIN","","Object may use DF_ORIGIN.",null,null],[17,"DF_SYMBOLIC","","Symbol resolutions starts here.",null,null],[17,"DF_TEXTREL","","Object contains text relocations.",null,null],[17,"DF_BIND_NOW","","No lazy binding for this object.",null,null],[17,"DF_STATIC_TLS","","Module uses the static TLS model.",null,null],[17,"DF_1_NOW","","=== State flags === selectable in the `d_un.d_val` element…",null,null],[17,"DF_1_GLOBAL","","Set RTLD_GLOBAL for this object.",null,null],[17,"DF_1_GROUP","","Set RTLD_GROUP for this object.",null,null],[17,"DF_1_NODELETE","","Set RTLD_NODELETE for this object.",null,null],[17,"DF_1_LOADFLTR","","Trigger filtee loading at runtime.",null,null],[17,"DF_1_INITFIRST","","Set RTLD_INITFIRST for this object.",null,null],[17,"DF_1_NOOPEN","","Set RTLD_NOOPEN for this object.",null,null],[17,"DF_1_ORIGIN","","$ORIGIN must be handled.",null,null],[17,"DF_1_DIRECT","","Direct binding enabled.",null,null],[17,"DF_1_TRANS","","",null,null],[17,"DF_1_INTERPOSE","","Object is used to interpose.",null,null],[17,"DF_1_NODEFLIB","","Ignore default lib search path.",null,null],[17,"DF_1_NODUMP","","Object can't be dldump'ed.",null,null],[17,"DF_1_CONFALT","","Configuration alternative created.",null,null],[17,"DF_1_ENDFILTEE","","Filtee terminates filters search.",null,null],[17,"DF_1_DISPRELDNE","","Disp reloc applied at build time.",null,null],[17,"DF_1_DISPRELPND","","Disp reloc applied at run-time.",null,null],[17,"DF_1_NODIRECT","","Object has no-direct binding.",null,null],[17,"DF_1_IGNMULDEF","","",null,null],[17,"DF_1_NOKSYMS","","",null,null],[17,"DF_1_NOHDR","","",null,null],[17,"DF_1_EDITED","","Object is modified after built.",null,null],[17,"DF_1_NORELOC","","",null,null],[17,"DF_1_SYMINTPOSE","","Object has individual interposers.",null,null],[17,"DF_1_GLOBAUDIT","","Global auditing required.",null,null],[17,"DF_1_SINGLETON","","Singleton dyn are used.",null,null],[17,"DF_1_PIE","","Object is a Position Independent Executable (PIE).",null,null],[11,"size","","",25,[[["container"]],["usize"]]],[11,"parse","","Returns a vector of dynamic entries from the underlying…",26,[[["ctx"]],[["option"],["result",["option"]]]]],[11,"get_libraries","","",26,[[["strtab"],["self"]],[["str"],["vec",["str"]]]]],[11,"update","","",27,[[["dyn"],["self"]]]],[11,"new","","",27,[[],["dynamicinfo"]]],[0,"reloc","goblin::elf","Relocation computations",null,null],[3,"Reloc","goblin::elf::reloc","A unified ELF relocation structure",null,null],[12,"r_offset","","Address",32,null],[12,"r_addend","","Addend",32,null],[12,"r_sym","","The index into the corresponding symbol table - either…",32,null],[12,"r_type","","The relocation type",32,null],[3,"RelocSection","","An ELF section containing relocations, allowing lazy…",null,null],[3,"RelocIterator","","",null,null],[5,"r_to_str","","",null,[[["u16"],["u32"]],["str"]]],[0,"reloc32","","",null,null],[3,"Rela","goblin::elf::reloc::reloc32","Relocation with an explicit addend",null,null],[12,"r_offset","","Address",33,null],[12,"r_info","","Relocation type and symbol index",33,null],[12,"r_addend","","Addend",33,null],[3,"Rel","","Relocation without an addend",null,null],[12,"r_offset","","address",34,null],[12,"r_info","","relocation type and symbol address",34,null],[5,"r_sym","","",null,[[["u32"]],["u32"]]],[5,"r_type","","",null,[[["u32"]],["u32"]]],[5,"r_info","","",null,[[["u32"]],["u32"]]],[5,"from_raw_rela","","Gets the rela entries given a rela pointer and the size of…",null,[[["usize"]]]],[5,"from_raw_rel","","Gets the rel entries given a rel pointer and the size of…",null,[[["usize"]]]],[5,"from_fd","","",null,[[["file"],["usize"]],[["vec",["rela"]],["result",["vec"]]]]],[17,"SIZEOF_RELA","","",null,null],[17,"SIZEOF_REL","","",null,null],[0,"reloc64","goblin::elf::reloc","",null,null],[3,"Rela","goblin::elf::reloc::reloc64","Relocation with an explicit addend",null,null],[12,"r_offset","","Address",35,null],[12,"r_info","","Relocation type and symbol index",35,null],[12,"r_addend","","Addend",35,null],[3,"Rel","","Relocation without an addend",null,null],[12,"r_offset","","address",36,null],[12,"r_info","","relocation type and symbol address",36,null],[5,"r_sym","","",null,[[["u64"]],["u32"]]],[5,"r_type","","",null,[[["u64"]],["u32"]]],[5,"r_info","","",null,[[["u64"]],["u64"]]],[5,"from_raw_rela","","Gets the rela entries given a rela pointer and the size of…",null,[[["usize"]]]],[5,"from_raw_rel","","Gets the rel entries given a rel pointer and the size of…",null,[[["usize"]]]],[5,"from_fd","","",null,[[["file"],["usize"]],[["result",["vec"]],["vec",["rela"]]]]],[17,"SIZEOF_RELA","","",null,null],[17,"SIZEOF_REL","","",null,null],[17,"R_X86_64_NONE","goblin::elf::reloc","No reloc.",null,null],[17,"R_X86_64_64","","Direct 64 bit.",null,null],[17,"R_X86_64_PC32","","PC relative 32 bit signed.",null,null],[17,"R_X86_64_GOT32","","32 bit GOT entry.",null,null],[17,"R_X86_64_PLT32","","32 bit PLT address.",null,null],[17,"R_X86_64_COPY","","Copy symbol at runtime.",null,null],[17,"R_X86_64_GLOB_DAT","","Create GOT entry.",null,null],[17,"R_X86_64_JUMP_SLOT","","Create PLT entry.",null,null],[17,"R_X86_64_RELATIVE","","Adjust by program base.",null,null],[17,"R_X86_64_GOTPCREL","","32 bit signed PC relative offset to GOT.",null,null],[17,"R_X86_64_32","","Direct 32 bit zero extended.",null,null],[17,"R_X86_64_32S","","Direct 32 bit sign extended.",null,null],[17,"R_X86_64_16","","Direct 16 bit zero extended.",null,null],[17,"R_X86_64_PC16","","16 bit sign extended pc relative.",null,null],[17,"R_X86_64_8","","Direct 8 bit sign extended.",null,null],[17,"R_X86_64_PC8","","8 bit sign extended pc relative.",null,null],[17,"R_X86_64_DTPMOD64","","ID of module containing symbol.",null,null],[17,"R_X86_64_DTPOFF64","","Offset in module's TLS block.",null,null],[17,"R_X86_64_TPOFF64","","Offset in initial TLS block.",null,null],[17,"R_X86_64_TLSGD","","32 bit signed PC relative offset to two GOT entries for GD…",null,null],[17,"R_X86_64_TLSLD","","32 bit signed PC relative offset to two GOT entries for LD…",null,null],[17,"R_X86_64_DTPOFF32","","Offset in TLS block.",null,null],[17,"R_X86_64_GOTTPOFF","","32 bit signed PC relative offset to GOT entry for IE symbol.",null,null],[17,"R_X86_64_TPOFF32","","Offset in initial TLS block.",null,null],[17,"R_X86_64_PC64","","PC relative 64 bit.",null,null],[17,"R_X86_64_GOTOFF64","","64 bit offset to GOT.",null,null],[17,"R_X86_64_GOTPC32","","32 bit signed pc relative offset to GOT.",null,null],[17,"R_X86_64_GOT64","","64-bit GOT entry offset.",null,null],[17,"R_X86_64_GOTPCREL64","","64-bit PC relative offset to GOT entry.",null,null],[17,"R_X86_64_GOTPC64","","64-bit PC relative offset to GOT.",null,null],[17,"R_X86_64_GOTPLT64","","like GOT64, says PLT entry needed.",null,null],[17,"R_X86_64_PLTOFF64","","64-bit GOT relative offset to PLT entry.",null,null],[17,"R_X86_64_SIZE32","","Size of symbol plus 32-bit addend.",null,null],[17,"R_X86_64_SIZE64","","Size of symbol plus 64-bit addend.",null,null],[17,"R_X86_64_GOTPC32_TLSDESC","","GOT offset for TLS descriptor..",null,null],[17,"R_X86_64_TLSDESC_CALL","","Marker for call through TLS descriptor..",null,null],[17,"R_X86_64_TLSDESC","","TLS descriptor..",null,null],[17,"R_X86_64_IRELATIVE","","Adjust indirectly by program base.",null,null],[17,"R_X86_64_RELATIVE64","","64-bit adjust by program base.",null,null],[17,"R_X86_64_GOTPCRELX","","Load from 32 bit signed pc relative offset to GOT entry…",null,null],[17,"R_X86_64_REX_GOTPCRELX","","Load from 32 bit signed pc relative offset to GOT entry…",null,null],[17,"R_X86_64_NUM","","",null,null],[17,"R_386_NONE","","No reloc",null,null],[17,"R_386_32","","Direct 32 bit",null,null],[17,"R_386_PC32","","PC relative 32 bit",null,null],[17,"R_386_GOT32","","32 bit GOT entry",null,null],[17,"R_386_PLT32","","32 bit PLT address",null,null],[17,"R_386_COPY","","Copy symbol at runtime",null,null],[17,"R_386_GLOB_DAT","","Create GOT entry",null,null],[17,"R_386_JMP_SLOT","","Create PLT entry",null,null],[17,"R_386_RELATIVE","","Adjust by program base",null,null],[17,"R_386_GOTOFF","","32 bit offset to GOT",null,null],[17,"R_386_GOTPC","","32 bit PC relative offset to GOT",null,null],[17,"R_386_32PLT","","",null,null],[17,"R_386_TLS_TPOFF","","Offset in static TLS block",null,null],[17,"R_386_TLS_IE","","Address of GOT entry for static TLS block offset",null,null],[17,"R_386_TLS_GOTIE","","GOT entry for static TLS block offset",null,null],[17,"R_386_TLS_LE","","Offset relative to static TLS block",null,null],[17,"R_386_TLS_GD","","Direct 32 bit for GNU version of general dynamic thread…",null,null],[17,"R_386_TLS_LDM","","Direct 32 bit for GNU version of local dynamic thread…",null,null],[17,"R_386_16","","",null,null],[17,"R_386_PC16","","",null,null],[17,"R_386_8","","",null,null],[17,"R_386_PC8","","",null,null],[17,"R_386_TLS_GD_32","","Direct 32 bit for general dynamic thread local data",null,null],[17,"R_386_TLS_GD_PUSH","","Tag for pushl in GD TLS code",null,null],[17,"R_386_TLS_GD_CALL","","Relocation for call to __tls_get_addr()",null,null],[17,"R_386_TLS_GD_POP","","Tag for popl in GD TLS code",null,null],[17,"R_386_TLS_LDM_32","","Direct 32 bit for local dynamic thread local data in LE code",null,null],[17,"R_386_TLS_LDM_PUSH","","Tag for pushl in LDM TLS code",null,null],[17,"R_386_TLS_LDM_CALL","","Relocation for call to __tls_get_addr() in LDM code",null,null],[17,"R_386_TLS_LDM_POP","","Tag for popl in LDM TLS code",null,null],[17,"R_386_TLS_LDO_32","","Offset relative to TLS block",null,null],[17,"R_386_TLS_IE_32","","GOT entry for negated static TLS block offset",null,null],[17,"R_386_TLS_LE_32","","Negated offset relative to static TLS block",null,null],[17,"R_386_TLS_DTPMOD32","","ID of module containing symbol",null,null],[17,"R_386_TLS_DTPOFF32","","Offset in TLS block",null,null],[17,"R_386_TLS_TPOFF32","","Negated offset in static TLS block",null,null],[17,"R_386_SIZE32","","32-bit symbol size",null,null],[17,"R_386_TLS_GOTDESC","","GOT offset for TLS descriptor.",null,null],[17,"R_386_TLS_DESC_CALL","","Marker of call through TLS descriptor for relaxation",null,null],[17,"R_386_TLS_DESC","","TLS descriptor containing pointer to code and to argument,…",null,null],[17,"R_386_IRELATIVE","","Adjust indirectly by program base",null,null],[17,"R_386_GOT32X","","Load from 32 bit GOT entry, relaxable",null,null],[17,"R_386_NUM","","Keep this the last entry",null,null],[17,"R_AARCH64_NONE","","No relocation",null,null],[17,"R_AARCH64_P32_ABS32","","Direct 32 bit",null,null],[17,"R_AARCH64_P32_COPY","","Copy symbol at runtime",null,null],[17,"R_AARCH64_P32_GLOB_DAT","","Create GOT entry",null,null],[17,"R_AARCH64_P32_JUMP_SLOT","","Create PLT entry",null,null],[17,"R_AARCH64_P32_RELATIVE","","Adjust by program base",null,null],[17,"R_AARCH64_P32_TLS_DTPMOD","","Module number, 32 bit",null,null],[17,"R_AARCH64_P32_TLS_DTPREL","","Module-relative offset, 32 bit",null,null],[17,"R_AARCH64_P32_TLS_TPREL","","TP-relative offset, 32 bit",null,null],[17,"R_AARCH64_P32_TLSDESC","","TLS Descriptor",null,null],[17,"R_AARCH64_P32_IRELATIVE","","STT_GNU_IFUNC relocation",null,null],[17,"R_AARCH64_ABS64","","Direct 64 bit",null,null],[17,"R_AARCH64_ABS32","","Direct 32 bit",null,null],[17,"R_AARCH64_ABS16","","Direct 16-bit",null,null],[17,"R_AARCH64_PREL64","","PC-relative 64-bit",null,null],[17,"R_AARCH64_PREL32","","PC-relative 32-bit",null,null],[17,"R_AARCH64_PREL16","","PC-relative 16-bit",null,null],[17,"R_AARCH64_MOVW_UABS_G0","","Dir. MOVZ imm. from bits 15:0",null,null],[17,"R_AARCH64_MOVW_UABS_G0_NC","","Likewise for MOVK; no check",null,null],[17,"R_AARCH64_MOVW_UABS_G1","","Dir. MOVZ imm. from bits 31:16",null,null],[17,"R_AARCH64_MOVW_UABS_G1_NC","","Likewise for MOVK; no check",null,null],[17,"R_AARCH64_MOVW_UABS_G2","","Dir. MOVZ imm. from bits 47:32",null,null],[17,"R_AARCH64_MOVW_UABS_G2_NC","","Likewise for MOVK; no check",null,null],[17,"R_AARCH64_MOVW_UABS_G3","","Dir. MOV{K,Z} imm. from 63:48",null,null],[17,"R_AARCH64_MOVW_SABS_G0","","Dir. MOV{N,Z} imm. from 15:0",null,null],[17,"R_AARCH64_MOVW_SABS_G1","","Dir. MOV{N,Z} imm. from 31:16",null,null],[17,"R_AARCH64_MOVW_SABS_G2","","Dir. MOV{N,Z} imm. from 47:32",null,null],[17,"R_AARCH64_LD_PREL_LO19","","PC-rel. LD imm. from bits 20:2",null,null],[17,"R_AARCH64_ADR_PREL_LO21","","PC-rel. ADR imm. from bits 20:0",null,null],[17,"R_AARCH64_ADR_PREL_PG_HI21","","Page-rel. ADRP imm. from 32:12",null,null],[17,"R_AARCH64_ADR_PREL_PG_HI21_NC","","Likewise; no overflow check",null,null],[17,"R_AARCH64_ADD_ABS_LO12_NC","","Dir. ADD imm. from bits 11:0",null,null],[17,"R_AARCH64_LDST8_ABS_LO12_NC","","Likewise for LD/ST; no check.",null,null],[17,"R_AARCH64_TSTBR14","","PC-rel. TBZ/TBNZ imm. from 15:2",null,null],[17,"R_AARCH64_CONDBR19","","PC-rel. cond. br. imm. from 20:2.",null,null],[17,"R_AARCH64_JUMP26","","PC-rel. B imm. from bits 27:2",null,null],[17,"R_AARCH64_CALL26","","Likewise for CALL",null,null],[17,"R_AARCH64_LDST16_ABS_LO12_NC","","Dir. ADD imm. from bits 11:1",null,null],[17,"R_AARCH64_LDST32_ABS_LO12_NC","","Likewise for bits 11:2",null,null],[17,"R_AARCH64_LDST64_ABS_LO12_NC","","Likewise for bits 11:3",null,null],[17,"R_AARCH64_MOVW_PREL_G0","","PC-rel. MOV{N,Z} imm. from 15:0",null,null],[17,"R_AARCH64_MOVW_PREL_G0_NC","","Likewise for MOVK; no check",null,null],[17,"R_AARCH64_MOVW_PREL_G1","","PC-rel. MOV{N,Z} imm. from 31:16.",null,null],[17,"R_AARCH64_MOVW_PREL_G1_NC","","Likewise for MOVK; no check",null,null],[17,"R_AARCH64_MOVW_PREL_G2","","PC-rel. MOV{N,Z} imm. from 47:32.",null,null],[17,"R_AARCH64_MOVW_PREL_G2_NC","","Likewise for MOVK; no check",null,null],[17,"R_AARCH64_MOVW_PREL_G3","","PC-rel. MOV{N,Z} imm. from 63:48.",null,null],[17,"R_AARCH64_LDST128_ABS_LO12_NC","","Dir. ADD imm. from bits 11:4",null,null],[17,"R_AARCH64_MOVW_GOTOFF_G0","","GOT-rel. off. MOV{N,Z} imm. 15:0.",null,null],[17,"R_AARCH64_MOVW_GOTOFF_G0_NC","","Likewise for MOVK; no check",null,null],[17,"R_AARCH64_MOVW_GOTOFF_G1","","GOT-rel. o. MOV{N,Z} imm. 31:16",null,null],[17,"R_AARCH64_MOVW_GOTOFF_G1_NC","","Likewise for MOVK; no check",null,null],[17,"R_AARCH64_MOVW_GOTOFF_G2","","GOT-rel. o. MOV{N,Z} imm. 47:32",null,null],[17,"R_AARCH64_MOVW_GOTOFF_G2_NC","","Likewise for MOVK; no check",null,null],[17,"R_AARCH64_MOVW_GOTOFF_G3","","GOT-rel. o. MOV{N,Z} imm. 63:48",null,null],[17,"R_AARCH64_GOTREL64","","GOT-relative 64-bit",null,null],[17,"R_AARCH64_GOTREL32","","GOT-relative 32-bit",null,null],[17,"R_AARCH64_GOT_LD_PREL19","","PC-rel. GOT off. load imm. 20:2",null,null],[17,"R_AARCH64_LD64_GOTOFF_LO15","","GOT-rel. off. LD/ST imm. 14:3",null,null],[17,"R_AARCH64_ADR_GOT_PAGE","","P-page-rel. GOT off. ADRP 32:12",null,null],[17,"R_AARCH64_LD64_GOT_LO12_NC","","Dir. GOT off. LD/ST imm. 11:3",null,null],[17,"R_AARCH64_LD64_GOTPAGE_LO15","","GOT-page-rel. GOT off. LD/ST 14:3",null,null],[17,"R_AARCH64_TLSGD_ADR_PREL21","","PC-relative ADR imm. 20:0",null,null],[17,"R_AARCH64_TLSGD_ADR_PAGE21","","page-rel. ADRP imm. 32:12",null,null],[17,"R_AARCH64_TLSGD_ADD_LO12_NC","","direct ADD imm. from 11:0",null,null],[17,"R_AARCH64_TLSGD_MOVW_G1","","GOT-rel. MOV{N,Z} 31:16",null,null],[17,"R_AARCH64_TLSGD_MOVW_G0_NC","","GOT-rel. MOVK imm. 15:0",null,null],[17,"R_AARCH64_TLSLD_ADR_PREL21","","Like 512; local dynamic model",null,null],[17,"R_AARCH64_TLSLD_ADR_PAGE21","","Like 513; local dynamic model",null,null],[17,"R_AARCH64_TLSLD_ADD_LO12_NC","","Like 514; local dynamic model",null,null],[17,"R_AARCH64_TLSLD_MOVW_G1","","Like 515; local dynamic model",null,null],[17,"R_AARCH64_TLSLD_MOVW_G0_NC","","Like 516; local dynamic model",null,null],[17,"R_AARCH64_TLSLD_LD_PREL19","","TLS PC-rel. load imm. 20:2",null,null],[17,"R_AARCH64_TLSLD_MOVW_DTPREL_G2","","TLS DTP-rel. MOV{N,Z} 47:32",null,null],[17,"R_AARCH64_TLSLD_MOVW_DTPREL_G1","","TLS DTP-rel. MOV{N,Z} 31:16",null,null],[17,"R_AARCH64_TLSLD_MOVW_DTPREL_G1_NC","","Likewise; MOVK; no check",null,null],[17,"R_AARCH64_TLSLD_MOVW_DTPREL_G0","","TLS DTP-rel. MOV{N,Z} 15:0",null,null],[17,"R_AARCH64_TLSLD_MOVW_DTPREL_G0_NC","","Likewise; MOVK; no check",null,null],[17,"R_AARCH64_TLSLD_ADD_DTPREL_HI12","","DTP-rel. ADD imm. from 23:12.",null,null],[17,"R_AARCH64_TLSLD_ADD_DTPREL_LO12","","DTP-rel. ADD imm. from 11:0",null,null],[17,"R_AARCH64_TLSLD_ADD_DTPREL_LO12_NC","","Likewise; no ovfl. check",null,null],[17,"R_AARCH64_TLSLD_LDST8_DTPREL_LO12","","DTP-rel. LD/ST imm. 11:0",null,null],[17,"R_AARCH64_TLSLD_LDST8_DTPREL_LO12_NC","","Likewise; no check",null,null],[17,"R_AARCH64_TLSLD_LDST16_DTPREL_LO12","","DTP-rel. LD/ST imm. 11:1",null,null],[17,"R_AARCH64_TLSLD_LDST16_DTPREL_LO12_NC","","Likewise; no check",null,null],[17,"R_AARCH64_TLSLD_LDST32_DTPREL_LO12","","DTP-rel. LD/ST imm. 11:2",null,null],[17,"R_AARCH64_TLSLD_LDST32_DTPREL_LO12_NC","","Likewise; no check",null,null],[17,"R_AARCH64_TLSLD_LDST64_DTPREL_LO12","","DTP-rel. LD/ST imm. 11:3",null,null],[17,"R_AARCH64_TLSLD_LDST64_DTPREL_LO12_NC","","Likewise; no check",null,null],[17,"R_AARCH64_TLSIE_MOVW_GOTTPREL_G1","","GOT-rel. MOV{N,Z} 31:16",null,null],[17,"R_AARCH64_TLSIE_MOVW_GOTTPREL_G0_NC","","GOT-rel. MOVK 15:0",null,null],[17,"R_AARCH64_TLSIE_ADR_GOTTPREL_PAGE21","","Page-rel. ADRP 32:12",null,null],[17,"R_AARCH64_TLSIE_LD64_GOTTPREL_LO12_NC","","Direct LD off. 11:3",null,null],[17,"R_AARCH64_TLSIE_LD_GOTTPREL_PREL19","","PC-rel. load imm. 20:2",null,null],[17,"R_AARCH64_TLSLE_MOVW_TPREL_G2","","TLS TP-rel. MOV{N,Z} 47:32",null,null],[17,"R_AARCH64_TLSLE_MOVW_TPREL_G1","","TLS TP-rel. MOV{N,Z} 31:16",null,null],[17,"R_AARCH64_TLSLE_MOVW_TPREL_G1_NC","","Likewise; MOVK; no check",null,null],[17,"R_AARCH64_TLSLE_MOVW_TPREL_G0","","TLS TP-rel. MOV{N,Z} 15:0",null,null],[17,"R_AARCH64_TLSLE_MOVW_TPREL_G0_NC","","Likewise; MOVK; no check",null,null],[17,"R_AARCH64_TLSLE_ADD_TPREL_HI12","","TP-rel. ADD imm. 23:12",null,null],[17,"R_AARCH64_TLSLE_ADD_TPREL_LO12","","TP-rel. ADD imm. 11:0",null,null],[17,"R_AARCH64_TLSLE_ADD_TPREL_LO12_NC","","Likewise; no ovfl. check",null,null],[17,"R_AARCH64_TLSLE_LDST8_TPREL_LO12","","TP-rel. LD/ST off. 11:0",null,null],[17,"R_AARCH64_TLSLE_LDST8_TPREL_LO12_NC","","Likewise; no ovfl. check.",null,null],[17,"R_AARCH64_TLSLE_LDST16_TPREL_LO12","","TP-rel. LD/ST off. 11:1",null,null],[17,"R_AARCH64_TLSLE_LDST16_TPREL_LO12_NC","","Likewise; no check",null,null],[17,"R_AARCH64_TLSLE_LDST32_TPREL_LO12","","TP-rel. LD/ST off. 11:2",null,null],[17,"R_AARCH64_TLSLE_LDST32_TPREL_LO12_NC","","Likewise; no check",null,null],[17,"R_AARCH64_TLSLE_LDST64_TPREL_LO12","","TP-rel. LD/ST off. 11:3",null,null],[17,"R_AARCH64_TLSLE_LDST64_TPREL_LO12_NC","","Likewise; no check",null,null],[17,"R_AARCH64_TLSDESC_LD_PREL19","","PC-rel. load immediate 20:2",null,null],[17,"R_AARCH64_TLSDESC_ADR_PREL21","","PC-rel. ADR immediate 20:0",null,null],[17,"R_AARCH64_TLSDESC_ADR_PAGE21","","Page-rel. ADRP imm. 32:12",null,null],[17,"R_AARCH64_TLSDESC_LD64_LO12","","Direct LD off. from 11:3",null,null],[17,"R_AARCH64_TLSDESC_ADD_LO12","","Direct ADD imm. from 11:0",null,null],[17,"R_AARCH64_TLSDESC_OFF_G1","","GOT-rel. MOV{N,Z} imm. 31:16",null,null],[17,"R_AARCH64_TLSDESC_OFF_G0_NC","","GOT-rel. MOVK imm. 15:0; no ck",null,null],[17,"R_AARCH64_TLSDESC_LDR","","Relax LDR",null,null],[17,"R_AARCH64_TLSDESC_ADD","","Relax ADD",null,null],[17,"R_AARCH64_TLSDESC_CALL","","Relax BLR",null,null],[17,"R_AARCH64_TLSLE_LDST128_TPREL_LO12","","TP-rel. LD/ST off. 11:4",null,null],[17,"R_AARCH64_TLSLE_LDST128_TPREL_LO12_NC","","Likewise; no check",null,null],[17,"R_AARCH64_TLSLD_LDST128_DTPREL_LO12","","DTP-rel. LD/ST imm. 11:4.",null,null],[17,"R_AARCH64_TLSLD_LDST128_DTPREL_LO12_NC","","Likewise; no check",null,null],[17,"R_AARCH64_COPY","","Copy symbol at runtime",null,null],[17,"R_AARCH64_GLOB_DAT","","Create GOT entry",null,null],[17,"R_AARCH64_JUMP_SLOT","","Create PLT entry",null,null],[17,"R_AARCH64_RELATIVE","","Adjust by program base",null,null],[17,"R_AARCH64_TLS_DTPMOD","","Module number, 64 bit",null,null],[17,"R_AARCH64_TLS_DTPREL","","Module-relative offset, 64 bit",null,null],[17,"R_AARCH64_TLS_TPREL","","TP-relative offset, 64 bit",null,null],[17,"R_AARCH64_TLSDESC","","TLS Descriptor",null,null],[17,"R_AARCH64_IRELATIVE","","STT_GNU_IFUNC relocation",null,null],[17,"R_ARM_NONE","","No reloc",null,null],[17,"R_ARM_PC24","","Deprecated PC relative 26 bit branch",null,null],[17,"R_ARM_ABS32","","Direct 32 bit",null,null],[17,"R_ARM_REL32","","PC relative 32 bit",null,null],[17,"R_ARM_PC13","","",null,null],[17,"R_ARM_ABS16","","Direct 16 bit",null,null],[17,"R_ARM_ABS12","","Direct 12 bit",null,null],[17,"R_ARM_THM_ABS5","","Direct & 0x7C (LDR, STR)",null,null],[17,"R_ARM_ABS8","","Direct 8 bit",null,null],[17,"R_ARM_SBREL32","","",null,null],[17,"R_ARM_THM_PC22","","PC relative 24 bit (Thumb32 BL)",null,null],[17,"R_ARM_THM_PC8","","PC relative & 0x3FC(Thumb16 LDR, ADD, ADR).",null,null],[17,"R_ARM_AMP_VCALL9","","",null,null],[17,"R_ARM_SWI24","","Obsolete static relocation",null,null],[17,"R_ARM_TLS_DESC","","Dynamic relocation",null,null],[17,"R_ARM_THM_SWI8","","Reserved",null,null],[17,"R_ARM_XPC25","","Reserved",null,null],[17,"R_ARM_THM_XPC22","","Reserved",null,null],[17,"R_ARM_TLS_DTPMOD32","","ID of module containing symbol",null,null],[17,"R_ARM_TLS_DTPOFF32","","Offset in TLS block",null,null],[17,"R_ARM_TLS_TPOFF32","","Offset in static TLS block",null,null],[17,"R_ARM_COPY","","Copy symbol at runtime",null,null],[17,"R_ARM_GLOB_DAT","","Create GOT entry",null,null],[17,"R_ARM_JUMP_SLOT","","Create PLT entry",null,null],[17,"R_ARM_RELATIVE","","Adjust by program base",null,null],[17,"R_ARM_GOTOFF","","32 bit offset to GOT",null,null],[17,"R_ARM_GOTPC","","32 bit PC relative offset to GOT",null,null],[17,"R_ARM_GOT32","","32 bit GOT entry",null,null],[17,"R_ARM_PLT32","","Deprecated, 32 bit PLT address",null,null],[17,"R_ARM_CALL","","PC relative 24 bit (BL, BLX)",null,null],[17,"R_ARM_JUMP24","","PC relative 24 bit (B, BL)",null,null],[17,"R_ARM_THM_JUMP24","","PC relative 24 bit (Thumb32 B.W)",null,null],[17,"R_ARM_BASE_ABS","","Adjust by program base",null,null],[17,"R_ARM_ALU_PCREL_7_0","","Obsolete",null,null],[17,"R_ARM_ALU_PCREL_15_8","","Obsolete",null,null],[17,"R_ARM_ALU_PCREL_23_15","","Obsolete",null,null],[17,"R_ARM_LDR_SBREL_11_0","","Deprecated, prog. base relative",null,null],[17,"R_ARM_ALU_SBREL_19_12","","Deprecated, prog. base relative",null,null],[17,"R_ARM_ALU_SBREL_27_20","","Deprecated, prog. base relative",null,null],[17,"R_ARM_TARGET1","","",null,null],[17,"R_ARM_SBREL31","","Program base relative",null,null],[17,"R_ARM_V4BX","","",null,null],[17,"R_ARM_TARGET2","","",null,null],[17,"R_ARM_PREL31","","32 bit PC relative",null,null],[17,"R_ARM_MOVW_ABS_NC","","Direct 16-bit (MOVW)",null,null],[17,"R_ARM_MOVT_ABS","","Direct high 16-bit (MOVT)",null,null],[17,"R_ARM_MOVW_PREL_NC","","PC relative 16-bit (MOVW)",null,null],[17,"R_ARM_MOVT_PREL","","PC relative (MOVT)",null,null],[17,"R_ARM_THM_MOVW_ABS_NC","","Direct 16 bit (Thumb32 MOVW)",null,null],[17,"R_ARM_THM_MOVT_ABS","","Direct high 16 bit (Thumb32 MOVT)",null,null],[17,"R_ARM_THM_MOVW_PREL_NC","","PC relative 16 bit (Thumb32 MOVW)",null,null],[17,"R_ARM_THM_MOVT_PREL","","PC relative high 16 bit (Thumb32 MOVT)",null,null],[17,"R_ARM_THM_JUMP19","","PC relative 20 bit (Thumb32 B.W)",null,null],[17,"R_ARM_THM_JUMP6","","PC relative X & 0x7E (Thumb16 CBZ, CBNZ)",null,null],[17,"R_ARM_THM_ALU_PREL_11_0","","PC relative 12 bit (Thumb32 ADR.W)",null,null],[17,"R_ARM_THM_PC12","","PC relative 12 bit (Thumb32 LDR{D,SB,H,SH})",null,null],[17,"R_ARM_ABS32_NOI","","Direct 32-bit",null,null],[17,"R_ARM_REL32_NOI","","PC relative 32-bit",null,null],[17,"R_ARM_ALU_PC_G0_NC","","PC relative (ADD, SUB)",null,null],[17,"R_ARM_ALU_PC_G0","","PC relative (ADD, SUB)",null,null],[17,"R_ARM_ALU_PC_G1_NC","","PC relative (ADD, SUB)",null,null],[17,"R_ARM_ALU_PC_G1","","PC relative (ADD, SUB)",null,null],[17,"R_ARM_ALU_PC_G2","","PC relative (ADD, SUB)",null,null],[17,"R_ARM_LDR_PC_G1","","PC relative (LDR,STR,LDRB,STRB)",null,null],[17,"R_ARM_LDR_PC_G2","","PC relative (LDR,STR,LDRB,STRB)",null,null],[17,"R_ARM_LDRS_PC_G0","","PC relative (STR{D,H},LDR{D,SB,H,SH})",null,null],[17,"R_ARM_LDRS_PC_G1","","PC relative (STR{D,H},LDR{D,SB,H,SH})",null,null],[17,"R_ARM_LDRS_PC_G2","","PC relative (STR{D,H},LDR{D,SB,H,SH})",null,null],[17,"R_ARM_LDC_PC_G0","","PC relative (LDC, STC)",null,null],[17,"R_ARM_LDC_PC_G1","","PC relative (LDC, STC)",null,null],[17,"R_ARM_LDC_PC_G2","","PC relative (LDC, STC)",null,null],[17,"R_ARM_ALU_SB_G0_NC","","Program base relative (ADD,SUB)",null,null],[17,"R_ARM_ALU_SB_G0","","Program base relative (ADD,SUB)",null,null],[17,"R_ARM_ALU_SB_G1_NC","","Program base relative (ADD,SUB)",null,null],[17,"R_ARM_ALU_SB_G1","","Program base relative (ADD,SUB)",null,null],[17,"R_ARM_ALU_SB_G2","","Program base relative (ADD,SUB)",null,null],[17,"R_ARM_LDR_SB_G0","","Program base relative (LDR,STR, LDRB, STRB)",null,null],[17,"R_ARM_LDR_SB_G1","","Program base relative (LDR, STR, LDRB, STRB)",null,null],[17,"R_ARM_LDR_SB_G2","","Program base relative (LDR, STR, LDRB, STRB)",null,null],[17,"R_ARM_LDRS_SB_G0","","Program base relative (LDR, STR, LDRB, STRB)",null,null],[17,"R_ARM_LDRS_SB_G1","","Program base relative (LDR, STR, LDRB, STRB)",null,null],[17,"R_ARM_LDRS_SB_G2","","Program base relative (LDR, STR, LDRB, STRB)",null,null],[17,"R_ARM_LDC_SB_G0","","Program base relative (LDC,STC)",null,null],[17,"R_ARM_LDC_SB_G1","","Program base relative (LDC,STC)",null,null],[17,"R_ARM_LDC_SB_G2","","Program base relative (LDC,STC)",null,null],[17,"R_ARM_MOVW_BREL_NC","","Program base relative 16 bit (MOVW)",null,null],[17,"R_ARM_MOVT_BREL","","Program base relative high 16 bit (MOVT)",null,null],[17,"R_ARM_MOVW_BREL","","Program base relative 16 bit (MOVW)",null,null],[17,"R_ARM_THM_MOVW_BREL_NC","","Program base relative 16 bit (Thumb32 MOVW)",null,null],[17,"R_ARM_THM_MOVT_BREL","","Program base relative high 16 bit (Thumb32 MOVT)",null,null],[17,"R_ARM_THM_MOVW_BREL","","Program base relative 16 bit (Thumb32 MOVW)",null,null],[17,"R_ARM_TLS_GOTDESC","","",null,null],[17,"R_ARM_TLS_CALL","","",null,null],[17,"R_ARM_TLS_DESCSEQ","","TLS relaxation",null,null],[17,"R_ARM_THM_TLS_CALL","","",null,null],[17,"R_ARM_PLT32_ABS","","",null,null],[17,"R_ARM_GOT_ABS","","GOT entry",null,null],[17,"R_ARM_GOT_PREL","","PC relative GOT entry",null,null],[17,"R_ARM_GOT_BREL12","","GOT entry relative to GOT origin (LDR)",null,null],[17,"R_ARM_GOTOFF12","","12 bit, GOT entry relative to GOT origin (LDR, STR)",null,null],[17,"R_ARM_GOTRELAX","","",null,null],[17,"R_ARM_GNU_VTENTRY","","",null,null],[17,"R_ARM_GNU_VTINHERIT","","",null,null],[17,"R_ARM_THM_PC11","","PC relative & 0xFFE (Thumb16 B)",null,null],[17,"R_ARM_THM_PC9","","PC relative & 0x1FE (Thumb16 B/B)",null,null],[17,"R_ARM_TLS_GD32","","PC-rel 32 bit for global dynamic thread local data",null,null],[17,"R_ARM_TLS_LDM32","","PC-rel 32 bit for local dynamic thread local data",null,null],[17,"R_ARM_TLS_LDO32","","32 bit offset relative to TLS block",null,null],[17,"R_ARM_TLS_IE32","","PC-rel 32 bit for GOT entry of static TLS block offset",null,null],[17,"R_ARM_TLS_LE32","","32 bit offset relative to static TLS block",null,null],[17,"R_ARM_TLS_LDO12","","12 bit relative to TLS block (LDR, STR)",null,null],[17,"R_ARM_TLS_LE12","","12 bit relative to static TLS block (LDR, STR)",null,null],[17,"R_ARM_TLS_IE12GP","","12 bit GOT entry relative to GOT origin (LDR)",null,null],[17,"R_ARM_ME_TOO","","Obsolete",null,null],[17,"R_ARM_THM_TLS_DESCSEQ","","",null,null],[17,"R_ARM_THM_TLS_DESCSEQ16","","",null,null],[17,"R_ARM_THM_TLS_DESCSEQ32","","",null,null],[17,"R_ARM_THM_GOT_BREL12","","GOT entry relative to GOT origin, 12 bit (Thumb32 LDR)",null,null],[17,"R_ARM_IRELATIVE","","",null,null],[17,"R_ARM_RXPC25","","",null,null],[17,"R_ARM_RSBREL32","","",null,null],[17,"R_ARM_THM_RPC22","","",null,null],[17,"R_ARM_RREL32","","",null,null],[17,"R_ARM_RABS22","","",null,null],[17,"R_ARM_RPC24","","",null,null],[17,"R_ARM_RBASE","","",null,null],[17,"R_ARM_NUM","","Keep this the last entry",null,null],[17,"R_OR1K_NONE","","",null,null],[17,"R_OR1K_32","","",null,null],[17,"R_OR1K_16","","",null,null],[17,"R_OR1K_8","","",null,null],[17,"R_OR1K_LO_16_IN_INSN","","",null,null],[17,"R_OR1K_HI_16_IN_INSN","","",null,null],[17,"R_OR1K_INSN_REL_26","","",null,null],[17,"R_OR1K_GNU_VTENTRY","","",null,null],[17,"R_OR1K_GNU_VTINHERIT","","",null,null],[17,"R_OR1K_32_PCREL","","",null,null],[17,"R_OR1K_16_PCREL","","",null,null],[17,"R_OR1K_8_PCREL","","",null,null],[17,"R_OR1K_GOTPC_HI16","","",null,null],[17,"R_OR1K_GOTPC_LO16","","",null,null],[17,"R_OR1K_GOT16","","",null,null],[17,"R_OR1K_PLT26","","",null,null],[17,"R_OR1K_GOTOFF_HI16","","",null,null],[17,"R_OR1K_GOTOFF_LO16","","",null,null],[17,"R_OR1K_COPY","","",null,null],[17,"R_OR1K_GLOB_DAT","","",null,null],[17,"R_OR1K_JMP_SLOT","","",null,null],[17,"R_OR1K_RELATIVE","","",null,null],[17,"R_OR1K_TLS_GD_HI16","","",null,null],[17,"R_OR1K_TLS_GD_LO16","","",null,null],[17,"R_OR1K_TLS_LDM_HI16","","",null,null],[17,"R_OR1K_TLS_LDM_LO16","","",null,null],[17,"R_OR1K_TLS_LDO_HI16","","",null,null],[17,"R_OR1K_TLS_LDO_LO16","","",null,null],[17,"R_OR1K_TLS_IE_HI16","","",null,null],[17,"R_OR1K_TLS_IE_LO16","","",null,null],[17,"R_OR1K_TLS_LE_HI16","","",null,null],[17,"R_OR1K_TLS_LE_LO16","","",null,null],[17,"R_OR1K_TLS_TPOFF","","",null,null],[17,"R_OR1K_TLS_DTPOFF","","",null,null],[17,"R_OR1K_TLS_DTPMOD","","",null,null],[17,"R_OR1K_NUM","","",null,null],[17,"R_MIPS_NONE","","No reloc",null,null],[17,"R_MIPS_16","","Direct 16 bit",null,null],[17,"R_MIPS_32","","Direct 32 bit",null,null],[17,"R_MIPS_REL32","","PC relative 32 bit",null,null],[17,"R_MIPS_26","","Direct 26 bit shifted",null,null],[17,"R_MIPS_HI16","","High 16 bit",null,null],[17,"R_MIPS_LO16","","Low 16 bit",null,null],[17,"R_MIPS_GPREL16","","GP relative 16 bit",null,null],[17,"R_MIPS_LITERAL","","16 bit literal entry",null,null],[17,"R_MIPS_GOT16","","16 bit GOT entry",null,null],[17,"R_MIPS_PC16","","PC relative 16 bit",null,null],[17,"R_MIPS_CALL16","","16 bit GOT entry for function",null,null],[17,"R_MIPS_GPREL32","","GP relative 32 bit",null,null],[17,"R_MIPS_SHIFT5","","",null,null],[17,"R_MIPS_SHIFT6","","",null,null],[17,"R_MIPS_64","","",null,null],[17,"R_MIPS_GOT_DISP","","",null,null],[17,"R_MIPS_GOT_PAGE","","",null,null],[17,"R_MIPS_GOT_OFST","","",null,null],[17,"R_MIPS_GOT_HI16","","",null,null],[17,"R_MIPS_GOT_LO16","","",null,null],[17,"R_MIPS_SUB","","",null,null],[17,"R_MIPS_INSERT_A","","",null,null],[17,"R_MIPS_INSERT_B","","",null,null],[17,"R_MIPS_DELETE","","",null,null],[17,"R_MIPS_HIGHER","","",null,null],[17,"R_MIPS_HIGHEST","","",null,null],[17,"R_MIPS_CALL_HI16","","",null,null],[17,"R_MIPS_CALL_LO16","","",null,null],[17,"R_MIPS_SCN_DISP","","",null,null],[17,"R_MIPS_REL16","","",null,null],[17,"R_MIPS_ADD_IMMEDIATE","","",null,null],[17,"R_MIPS_PJUMP","","",null,null],[17,"R_MIPS_RELGOT","","",null,null],[17,"R_MIPS_JALR","","",null,null],[17,"R_MIPS_TLS_DTPMOD32","","Module number 32 bit",null,null],[17,"R_MIPS_TLS_DTPREL32","","Module-relative offset 32 bit",null,null],[17,"R_MIPS_TLS_DTPMOD64","","Module number 64 bit",null,null],[17,"R_MIPS_TLS_DTPREL64","","Module-relative offset 64 bit",null,null],[17,"R_MIPS_TLS_GD","","16 bit GOT offset for GD",null,null],[17,"R_MIPS_TLS_LDM","","16 bit GOT offset for LDM",null,null],[17,"R_MIPS_TLS_DTPREL_HI16","","Module-relative offset, high 16 bits",null,null],[17,"R_MIPS_TLS_DTPREL_LO16","","Module-relative offset, low 16 bits",null,null],[17,"R_MIPS_TLS_GOTTPREL","","16 bit GOT offset for IE",null,null],[17,"R_MIPS_TLS_TPREL32","","TP-relative offset, 32 bit6",null,null],[17,"R_MIPS_TLS_TPREL64","","TP-relative offset, 64 bit",null,null],[17,"R_MIPS_TLS_TPREL_HI16","","TP-relative offset, high 16 bits",null,null],[17,"R_MIPS_TLS_TPREL_LO16","","TP-relative offset, low 16 bits",null,null],[17,"R_MIPS_GLOB_DAT","","",null,null],[17,"R_MIPS_COPY","","",null,null],[17,"R_MIPS_JUMP_SLOT","","",null,null],[17,"R_MIPS_NUM","","",null,null],[17,"R_RISCV_NONE","","None",null,null],[17,"R_RISCV_32","","Runtime relocation: word32 = S + A",null,null],[17,"R_RISCV_64","","Runtime relocation: word64 = S + A",null,null],[17,"R_RISCV_RELATIVE","","Runtime relocation: word32,64 = B + A",null,null],[17,"R_RISCV_COPY","","Runtime relocation: must be in executable, not allowed in…",null,null],[17,"R_RISCV_JUMP_SLOT","","Runtime relocation: word32,64 = S; handled by PLT unless…",null,null],[17,"R_RISCV_TLS_DTPMOD32","","TLS relocation: word32 = S->TLSINDEX",null,null],[17,"R_RISCV_TLS_DTPMOD64","","TLS relocation: word64 = S->TLSINDEX",null,null],[17,"R_RISCV_TLS_DTPREL32","","TLS relocation: word32 = TLS + S + A - TLS_TP_OFFSET",null,null],[17,"R_RISCV_TLS_DTPREL64","","TLS relocation: word64 = TLS + S + A - TLS_TP_OFFSET",null,null],[17,"R_RISCV_TLS_TPREL32","","TLS relocation: word32 = TLS + S + A + S_TLS_OFFSET -…",null,null],[17,"R_RISCV_TLS_TPREL64","","TLS relocation: word64 = TLS + S + A + S_TLS_OFFSET -…",null,null],[17,"R_RISCV_BRANCH","","PC-relative branch (SB-Type)",null,null],[17,"R_RISCV_JAL","","PC-relative jump (UJ-Type)",null,null],[17,"R_RISCV_CALL","","PC-relative call: MACRO call,tail (auipc+jalr pair)",null,null],[17,"R_RISCV_CALL_PLT","","PC-relative call (PLT): MACRO call,tail (auipc+jalr pair)…",null,null],[17,"R_RISCV_GOT_HI20","","PC-relative GOT reference: MACRO la",null,null],[17,"R_RISCV_TLS_GOT_HI20","","PC-relative TLS IE GOT offset: MACRO la.tls.ie",null,null],[17,"R_RISCV_TLS_GD_HI20","","PC-relative TLS GD reference: MACRO la.tls.gd",null,null],[17,"R_RISCV_PCREL_HI20","","PC-relative reference: %pcrel_hi(symbol) (U-Type)",null,null],[17,"R_RISCV_PCREL_LO12_I","","PC-relative reference: %pcrel_lo(symbol) (I-Type)",null,null],[17,"R_RISCV_PCREL_LO12_S","","PC-relative reference: %pcrel_lo(symbol) (S-Type)",null,null],[17,"R_RISCV_HI20","","Absolute address: %hi(symbol) (U-Type)",null,null],[17,"R_RISCV_LO12_I","","Absolute address: %lo(symbol) (I-Type)",null,null],[17,"R_RISCV_LO12_S","","Absolute address: %lo(symbol) (S-Type)",null,null],[17,"R_RISCV_TPREL_HI20","","TLS LE thread offset: %tprel_hi(symbol) (U-Type)",null,null],[17,"R_RISCV_TPREL_LO12_I","","TLS LE thread offset: %tprel_lo(symbol) (I-Type)",null,null],[17,"R_RISCV_TPREL_LO12_S","","TLS LE thread offset: %tprel_lo(symbol) (S-Type)",null,null],[17,"R_RISCV_TPREL_ADD","","TLS LE thread usage: %tprel_add(symbol)",null,null],[17,"R_RISCV_ADD8","","8-bit label addition: word8 = S + A",null,null],[17,"R_RISCV_ADD16","","16-bit label addition: word16 = S + A",null,null],[17,"R_RISCV_ADD32","","32-bit label addition: word32 = S + A",null,null],[17,"R_RISCV_ADD64","","64-bit label addition: word64 = S + A",null,null],[17,"R_RISCV_SUB8","","8-bit label subtraction: word8 = S - A",null,null],[17,"R_RISCV_SUB16","","16-bit label subtraction: word16 = S - A",null,null],[17,"R_RISCV_SUB32","","32-bit label subtraction: word32 = S - A",null,null],[17,"R_RISCV_SUB64","","64-bit label subtraction: word64 = S - A",null,null],[17,"R_RISCV_GNU_VTINHERIT","","GNU C++ vtable hierarchy",null,null],[17,"R_RISCV_GNU_VTENTRY","","GNU C++ vtable member usage",null,null],[17,"R_RISCV_ALIGN","","Alignment statement",null,null],[17,"R_RISCV_RVC_BRANCH","","PC-relative branch offset (CB-Type)",null,null],[17,"R_RISCV_RVC_JUMP","","PC-relative jump offset (CJ-Type)",null,null],[17,"R_RISCV_RVC_LUI","","Absolute address (CI-Type)",null,null],[17,"R_RISCV_GPREL_I","","GP-relative reference (I-Type)",null,null],[17,"R_RISCV_GPREL_S","","GP-relative reference (S-Type)",null,null],[17,"R_RISCV_TPREL_I","","TP-relative TLS LE load (I-Type)",null,null],[17,"R_RISCV_TPREL_S","","TP-relative TLS LE store (S-Type)",null,null],[17,"R_RISCV_RELAX","","Instruction pair can be relaxed",null,null],[17,"R_RISCV_SUB6","","Local label subtraction",null,null],[17,"R_RISCV_SET6","","Local label subtraction",null,null],[17,"R_RISCV_SET8","","Local label subtraction",null,null],[17,"R_RISCV_SET16","","Local label subtraction",null,null],[17,"R_RISCV_SET32","","Local label subtraction",null,null],[11,"size","","",32,[[["ctx"],["bool"]],["usize"]]],[11,"parse","","Parse a REL or RELA section of size `filesz` from `offset`.",37,[[["ctx"],["usize"],["bool"]],[["result",["relocsection"]],["relocsection"]]]],[11,"get","","Try to parse a single relocation from the binary, at…",37,[[["self"],["usize"]],[["option",["reloc"]],["reloc"]]]],[11,"len","","The number of relocations in the section.",37,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if section has no relocations.",37,[[["self"]],["bool"]]],[11,"iter","","Iterate over all relocations.",37,[[["self"]],["relociterator"]]],[11,"to_vec","","Parse all relocations into a vector.",37,[[["self"]],[["reloc"],["vec",["reloc"]]]]],[0,"note","goblin::elf","",null,null],[3,"Nhdr32","goblin::elf::note","Note section contents. Each entry in the note section…",null,null],[12,"n_namesz","","Length of the note's name (includes the terminator)",38,null],[12,"n_descsz","","Length of the note's descriptor",38,null],[12,"n_type","","Type of the note",38,null],[3,"Nhdr64","","Note section contents. Each entry in the note section…",null,null],[12,"n_namesz","","Length of the note's name (includes the terminator)",39,null],[12,"n_descsz","","Length of the note's descriptor.",39,null],[12,"n_type","","Type of the note.",39,null],[3,"NoteDataIterator","","An iterator over ELF binary notes in a note section or…",null,null],[12,"data","","",40,null],[12,"size","","",40,null],[12,"offset","","",40,null],[12,"ctx","","",40,null],[3,"NoteIterator","","An iterator over ELF binary notes",null,null],[12,"iters","","",41,null],[12,"index","","",41,null],[3,"Note","","A 32/64 bit Note struct, with the name and desc pre-parsed",null,null],[12,"n_type","","The type of this note",42,null],[12,"name","","NUL terminated string, where `namesz` includes the…",42,null],[12,"desc","","arbitrary data of length `descsz`",42,null],[17,"NT_GNU_ABI_TAG","","ABI information.",null,null],[17,"ELF_NOTE_ABI","","Old name",null,null],[17,"ELF_NOTE_OS_LINUX","","",null,null],[17,"ELF_NOTE_OS_GNU","","",null,null],[17,"ELF_NOTE_OS_SOLARIS2","","",null,null],[17,"ELF_NOTE_OS_FREEBSD","","",null,null],[17,"NT_GNU_HWCAP","","Synthetic `hwcap` information.",null,null],[17,"NT_GNU_BUILD_ID","","Build ID bits as generated by ld --build-id.",null,null],[17,"NT_GNU_GOLD_VERSION","","Version note generated by GNU gold containing a version…",null,null],[17,"NT_PRSTATUS","","Contains copy of prstatus struct.",null,null],[17,"NT_PRPSINFO","","Contains copy of prpsinfo struct.",null,null],[17,"NT_SIGINFO","","Fields of siginfo_t.",null,null],[17,"NT_FILE","","Description of mapped files.",null,null],[11,"type_to_str","","",42,[[["self"]],["str"]]],[6,"Header","goblin::elf","",null,null],[6,"ProgramHeader","","",null,null],[6,"SectionHeader","","",null,null],[6,"Symtab","","",null,null],[6,"Sym","","",null,null],[6,"Dyn","","",null,null],[6,"Dynamic","","",null,null],[6,"Reloc","","",null,null],[6,"RelocSection","","",null,null],[6,"ProgramHeaders","","",null,null],[6,"SectionHeaders","","",null,null],[6,"ShdrIdx","","",null,null],[11,"iter_note_headers","","Try to iterate notes in PT_NOTE program headers; returns…",8,[[["self"]],[["option",["noteiterator"]],["noteiterator"]]]],[11,"iter_note_sections","","Try to iterate notes in SHT_NOTE sections; returns `None`…",8,[[["option",["str"]],["str"],["self"]],[["option",["noteiterator"]],["noteiterator"]]]],[11,"is_object_file","","",8,[[["self"]],["bool"]]],[11,"parse","","Parses the contents of the byte stream in `bytes`, and…",8,[[],["result"]]],[0,"elf32","goblin","The ELF 32-bit struct definitions and associated values,…",null,null],[0,"gnu_hash","goblin::elf32","",null,null],[3,"GnuHash","goblin::elf32::gnu_hash","A better hash table for the ELF used by GNU systems in…",null,null],[5,"hash","","GNU hash function: accepts a symbol name and returns a…",null,[[["str"]],["u32"]]],[11,"from_raw_table","","Initialize a GnuHash from a pointer to `.hash` (or…",43,[[],[["result",["str"]],["str"]]]],[11,"find","","Given a symbol, a hash of that symbol, a dynamic string…",43,[[["str"],["self"],["strtab"]],[["sym"],["option",["sym"]]]]],[11,"find_with_hash","","This function will not check if the passed `hash` is…",43,[[["str"],["u32"],["self"],["strtab"]],[["sym"],["option",["sym"]]]]],[0,"elf64","goblin","The ELF 64-bit struct definitions and associated values,…",null,null],[0,"gnu_hash","goblin::elf64","",null,null],[3,"GnuHash","goblin::elf64::gnu_hash","A better hash table for the ELF used by GNU systems in…",null,null],[5,"hash","","GNU hash function: accepts a symbol name and returns a…",null,[[["str"]],["u32"]]],[11,"from_raw_table","","Initialize a GnuHash from a pointer to `.hash` (or…",44,[[],[["result",["str"]],["str"]]]],[11,"find","","Given a symbol, a hash of that symbol, a dynamic string…",44,[[["str"],["self"],["strtab"]],[["sym"],["option",["sym"]]]]],[11,"find_with_hash","","This function will not check if the passed `hash` is…",44,[[["str"],["u32"],["self"],["strtab"]],[["sym"],["option",["sym"]]]]],[0,"mach","goblin","The Mach-o, mostly zero-copy, binary format parser and raw…",null,null],[3,"MachO","goblin::mach","A cross-platform, zero-copy, endian-aware, 32/64 bit…",null,null],[12,"header","","The mach-o header",45,null],[12,"load_commands","","The load commands tell the kernel and dynamic linker how…",45,null],[12,"segments","","The load command \"segments\" - typically the pieces of the…",45,null],[12,"symbols","","The \"Nlist\" style symbols in this binary - strippable",45,null],[12,"libs","","The dylibs this library depends on",45,null],[12,"entry","","The entry point (as a virtual memory address), 0 if none",45,null],[12,"old_style_entry","","Whether `entry` refers to an older `LC_UNIXTHREAD` instead…",45,null],[12,"name","","The name of the dylib, if any",45,null],[12,"little_endian","","Are we a little-endian binary?",45,null],[12,"is_64","","Are we a 64-bit binary",45,null],[3,"MultiArch","","A Mach-o multi architecture (Fat) binary container",null,null],[12,"narches","","",46,null],[3,"FatArchIterator","","Iterator over the fat architecture headers in a…",null,null],[3,"MachOIterator","","Iterator over every `MachO` binary contained in this…",null,null],[4,"Mach","","Either a collection of multiple architectures, or a single…",null,null],[13,"Fat","","A \"fat\" multi-architecture binary container",47,null],[13,"Binary","","A regular Mach-o binary",47,null],[5,"peek","","Returns a big endian magical number",null,[[["usize"]],[["result",["u32"]],["u32"]]]],[5,"parse_magic_and_ctx","","Parses a magic number, and an accompanying mach-o binary…",null,[[["usize"]],["result"]]],[0,"bind_opcodes","","Bind opcodes are interpreted by the dynamic linker to…",null,null],[5,"opcode_to_str","goblin::mach::bind_opcodes","",null,[[["opcode"]],["str"]]],[6,"Opcode","","",null,null],[17,"BIND_TYPE_POINTER","","",null,null],[17,"BIND_TYPE_TEXT_ABSOLUTE32","","",null,null],[17,"BIND_TYPE_TEXT_PCREL32","","",null,null],[17,"BIND_SPECIAL_DYLIB_SELF","","",null,null],[17,"BIND_SPECIAL_DYLIB_MAIN_EXECUTABLE","","",null,null],[17,"BIND_SPECIAL_DYLIB_FLAT_LOOKUP","","",null,null],[17,"BIND_SYMBOL_FLAGS_WEAK_IMPORT","","",null,null],[17,"BIND_SYMBOL_FLAGS_NON_WEAK_DEFINITION","","",null,null],[17,"BIND_OPCODE_MASK","","",null,null],[17,"BIND_IMMEDIATE_MASK","","",null,null],[17,"BIND_OPCODE_DONE","","",null,null],[17,"BIND_OPCODE_SET_DYLIB_ORDINAL_IMM","","",null,null],[17,"BIND_OPCODE_SET_DYLIB_ORDINAL_ULEB","","",null,null],[17,"BIND_OPCODE_SET_DYLIB_SPECIAL_IMM","","",null,null],[17,"BIND_OPCODE_SET_SYMBOL_TRAILING_FLAGS_IMM","","",null,null],[17,"BIND_OPCODE_SET_TYPE_IMM","","",null,null],[17,"BIND_OPCODE_SET_ADDEND_SLEB","","",null,null],[17,"BIND_OPCODE_SET_SEGMENT_AND_OFFSET_ULEB","","",null,null],[17,"BIND_OPCODE_ADD_ADDR_ULEB","","",null,null],[17,"BIND_OPCODE_DO_BIND","","",null,null],[17,"BIND_OPCODE_DO_BIND_ADD_ADDR_ULEB","","",null,null],[17,"BIND_OPCODE_DO_BIND_ADD_ADDR_IMM_SCALED","","",null,null],[17,"BIND_OPCODE_DO_BIND_ULEB_TIMES_SKIPPING_ULEB","","",null,null],[0,"constants","goblin::mach","Miscellaneous constants used inside of and when…",null,null],[0,"cputype","goblin::mach::constants","",null,null],[5,"get_arch_from_flag","goblin::mach::constants::cputype","Get the cputype and cpusubtype from a name",null,[[["str"]],["option"]]],[5,"get_arch_name_from_types","","Get the architecture name from cputype and cpusubtype",null,[[["cputype"],["cpusubtype"]],[["option",["str"]],["str"]]]],[6,"CpuType","","An alias for u32",null,null],[6,"CpuSubType","","An alias for u32",null,null],[17,"CPU_SUBTYPE_MASK","","the mask for CPU feature flags",null,null],[17,"CPU_ARCH_MASK","","mask for architecture bits",null,null],[17,"CPU_ARCH_ABI64","","the mask for 64 bit ABI",null,null],[17,"CPU_ARCH_ABI64_32","","the mask for ILP32 ABI on 64 bit hardware",null,null],[17,"CPU_TYPE_ANY","","",null,null],[17,"CPU_TYPE_VAX","","",null,null],[17,"CPU_TYPE_MC680X0","","",null,null],[17,"CPU_TYPE_X86","","",null,null],[17,"CPU_TYPE_I386","","",null,null],[17,"CPU_TYPE_X86_64","","",null,null],[17,"CPU_TYPE_MIPS","","",null,null],[17,"CPU_TYPE_MC98000","","",null,null],[17,"CPU_TYPE_HPPA","","",null,null],[17,"CPU_TYPE_ARM","","",null,null],[17,"CPU_TYPE_ARM64","","",null,null],[17,"CPU_TYPE_ARM64_32","","",null,null],[17,"CPU_TYPE_MC88000","","",null,null],[17,"CPU_TYPE_SPARC","","",null,null],[17,"CPU_TYPE_I860","","",null,null],[17,"CPU_TYPE_ALPHA","","",null,null],[17,"CPU_TYPE_POWERPC","","",null,null],[17,"CPU_TYPE_POWERPC64","","",null,null],[17,"CPU_SUBTYPE_MULTIPLE","","",null,null],[17,"CPU_SUBTYPE_LITTLE_ENDIAN","","",null,null],[17,"CPU_SUBTYPE_BIG_ENDIAN","","",null,null],[17,"CPU_SUBTYPE_VAX_ALL","","",null,null],[17,"CPU_SUBTYPE_VAX780","","",null,null],[17,"CPU_SUBTYPE_VAX785","","",null,null],[17,"CPU_SUBTYPE_VAX750","","",null,null],[17,"CPU_SUBTYPE_VAX730","","",null,null],[17,"CPU_SUBTYPE_UVAXI","","",null,null],[17,"CPU_SUBTYPE_UVAXII","","",null,null],[17,"CPU_SUBTYPE_VAX8200","","",null,null],[17,"CPU_SUBTYPE_VAX8500","","",null,null],[17,"CPU_SUBTYPE_VAX8600","","",null,null],[17,"CPU_SUBTYPE_VAX8650","","",null,null],[17,"CPU_SUBTYPE_VAX8800","","",null,null],[17,"CPU_SUBTYPE_UVAXIII","","",null,null],[17,"CPU_SUBTYPE_MC680X0_ALL","","",null,null],[17,"CPU_SUBTYPE_MC68030","","",null,null],[17,"CPU_SUBTYPE_MC68040","","",null,null],[17,"CPU_SUBTYPE_MC68030_ONLY","","",null,null],[17,"CPU_SUBTYPE_I386_ALL","","",null,null],[17,"CPU_SUBTYPE_386","","",null,null],[17,"CPU_SUBTYPE_486","","",null,null],[17,"CPU_SUBTYPE_486SX","","",null,null],[17,"CPU_SUBTYPE_586","","",null,null],[17,"CPU_SUBTYPE_PENT","","",null,null],[17,"CPU_SUBTYPE_PENTPRO","","",null,null],[17,"CPU_SUBTYPE_PENTII_M3","","",null,null],[17,"CPU_SUBTYPE_PENTII_M5","","",null,null],[17,"CPU_SUBTYPE_CELERON","","",null,null],[17,"CPU_SUBTYPE_CELERON_MOBILE","","",null,null],[17,"CPU_SUBTYPE_PENTIUM_3","","",null,null],[17,"CPU_SUBTYPE_PENTIUM_3_M","","",null,null],[17,"CPU_SUBTYPE_PENTIUM_3_XEON","","",null,null],[17,"CPU_SUBTYPE_PENTIUM_M","","",null,null],[17,"CPU_SUBTYPE_PENTIUM_4","","",null,null],[17,"CPU_SUBTYPE_PENTIUM_4_M","","",null,null],[17,"CPU_SUBTYPE_ITANIUM","","",null,null],[17,"CPU_SUBTYPE_ITANIUM_2","","",null,null],[17,"CPU_SUBTYPE_XEON","","",null,null],[17,"CPU_SUBTYPE_XEON_MP","","",null,null],[17,"CPU_SUBTYPE_INTEL_FAMILY_MAX","","",null,null],[17,"CPU_SUBTYPE_INTEL_MODEL_ALL","","",null,null],[17,"CPU_SUBTYPE_X86_ALL","","",null,null],[17,"CPU_SUBTYPE_X86_64_ALL","","",null,null],[17,"CPU_SUBTYPE_X86_ARCH1","","",null,null],[17,"CPU_SUBTYPE_X86_64_H","","",null,null],[17,"CPU_SUBTYPE_MIPS_ALL","","",null,null],[17,"CPU_SUBTYPE_MIPS_R2300","","",null,null],[17,"CPU_SUBTYPE_MIPS_R2600","","",null,null],[17,"CPU_SUBTYPE_MIPS_R2800","","",null,null],[17,"CPU_SUBTYPE_MIPS_R2000A","","",null,null],[17,"CPU_SUBTYPE_MIPS_R2000","","",null,null],[17,"CPU_SUBTYPE_MIPS_R3000A","","",null,null],[17,"CPU_SUBTYPE_MIPS_R3000","","",null,null],[17,"CPU_SUBTYPE_MC98000_ALL","","",null,null],[17,"CPU_SUBTYPE_MC98601","","",null,null],[17,"CPU_SUBTYPE_HPPA_ALL","","",null,null],[17,"CPU_SUBTYPE_HPPA_7100","","",null,null],[17,"CPU_SUBTYPE_HPPA_7100LC","","",null,null],[17,"CPU_SUBTYPE_MC88000_ALL","","",null,null],[17,"CPU_SUBTYPE_MC88100","","",null,null],[17,"CPU_SUBTYPE_MC88110","","",null,null],[17,"CPU_SUBTYPE_SPARC_ALL","","",null,null],[17,"CPU_SUBTYPE_I860_ALL","","",null,null],[17,"CPU_SUBTYPE_I860_860","","",null,null],[17,"CPU_SUBTYPE_POWERPC_ALL","","",null,null],[17,"CPU_SUBTYPE_POWERPC_601","","",null,null],[17,"CPU_SUBTYPE_POWERPC_602","","",null,null],[17,"CPU_SUBTYPE_POWERPC_603","","",null,null],[17,"CPU_SUBTYPE_POWERPC_603E","","",null,null],[17,"CPU_SUBTYPE_POWERPC_603EV","","",null,null],[17,"CPU_SUBTYPE_POWERPC_604","","",null,null],[17,"CPU_SUBTYPE_POWERPC_604E","","",null,null],[17,"CPU_SUBTYPE_POWERPC_620","","",null,null],[17,"CPU_SUBTYPE_POWERPC_750","","",null,null],[17,"CPU_SUBTYPE_POWERPC_7400","","",null,null],[17,"CPU_SUBTYPE_POWERPC_7450","","",null,null],[17,"CPU_SUBTYPE_POWERPC_970","","",null,null],[17,"CPU_SUBTYPE_ARM_ALL","","",null,null],[17,"CPU_SUBTYPE_ARM_V4T","","",null,null],[17,"CPU_SUBTYPE_ARM_V6","","",null,null],[17,"CPU_SUBTYPE_ARM_V5TEJ","","",null,null],[17,"CPU_SUBTYPE_ARM_XSCALE","","",null,null],[17,"CPU_SUBTYPE_ARM_V7","","",null,null],[17,"CPU_SUBTYPE_ARM_V7F","","",null,null],[17,"CPU_SUBTYPE_ARM_V7S","","",null,null],[17,"CPU_SUBTYPE_ARM_V7K","","",null,null],[17,"CPU_SUBTYPE_ARM_V6M","","",null,null],[17,"CPU_SUBTYPE_ARM_V7M","","",null,null],[17,"CPU_SUBTYPE_ARM_V7EM","","",null,null],[17,"CPU_SUBTYPE_ARM_V8","","",null,null],[17,"CPU_SUBTYPE_ARM64_ALL","","",null,null],[17,"CPU_SUBTYPE_ARM64_V8","","",null,null],[17,"CPU_SUBTYPE_ARM64_E","","",null,null],[17,"CPU_SUBTYPE_ARM64_32_ALL","","",null,null],[17,"CPU_SUBTYPE_ARM64_32_V8","","",null,null],[17,"DYLD_MACOSX_VERSION_10_4","goblin::mach::constants","",null,null],[17,"DYLD_MACOSX_VERSION_10_5","","",null,null],[17,"DYLD_MACOSX_VERSION_10_6","","",null,null],[17,"DYLD_MACOSX_VERSION_10_7","","",null,null],[17,"DYLD_MACOSX_VERSION_10_8","","",null,null],[17,"DYLD_MACOSX_VERSION_10_9","","",null,null],[17,"DYLD_MACOSX_VERSION_10_10","","",null,null],[17,"DYLD_MACOSX_VERSION_10_11","","",null,null],[17,"DYLD_MACOSX_VERSION_10_12","","",null,null],[17,"DYLD_MACOSX_VERSION_10_13","","",null,null],[17,"DYLD_IOS_VERSION_2_0","","",null,null],[17,"DYLD_IOS_VERSION_2_1","","",null,null],[17,"DYLD_IOS_VERSION_2_2","","",null,null],[17,"DYLD_IOS_VERSION_3_0","","",null,null],[17,"DYLD_IOS_VERSION_3_1","","",null,null],[17,"DYLD_IOS_VERSION_3_2","","",null,null],[17,"DYLD_IOS_VERSION_4_0","","",null,null],[17,"DYLD_IOS_VERSION_4_1","","",null,null],[17,"DYLD_IOS_VERSION_4_2","","",null,null],[17,"DYLD_IOS_VERSION_4_3","","",null,null],[17,"DYLD_IOS_VERSION_5_0","","",null,null],[17,"DYLD_IOS_VERSION_5_1","","",null,null],[17,"DYLD_IOS_VERSION_6_0","","",null,null],[17,"DYLD_IOS_VERSION_6_1","","",null,null],[17,"DYLD_IOS_VERSION_7_0","","",null,null],[17,"DYLD_IOS_VERSION_7_1","","",null,null],[17,"DYLD_IOS_VERSION_8_0","","",null,null],[17,"DYLD_IOS_VERSION_9_0","","",null,null],[17,"DYLD_IOS_VERSION_10_0","","",null,null],[17,"DYLD_IOS_VERSION_11_0","","",null,null],[17,"SECTION_TYPE","","256 section types",null,null],[17,"SECTION_ATTRIBUTES","","24 section attributes",null,null],[17,"S_REGULAR","","regular section",null,null],[17,"S_ZEROFILL","","zero fill on demand section",null,null],[17,"S_CSTRING_LITERALS","","section with only literal C strings",null,null],[17,"S_4BYTE_LITERALS","","section with only 4 byte literals",null,null],[17,"S_8BYTE_LITERALS","","section with only 8 byte literals",null,null],[17,"S_LITERAL_POINTERS","","section with only pointers to",null,null],[17,"S_NON_LAZY_SYMBOL_POINTERS","","section with only non-lazy symbol pointers",null,null],[17,"S_LAZY_SYMBOL_POINTERS","","section with only lazy symbol pointers",null,null],[17,"S_SYMBOL_STUBS","","section with only symbol stubs, byte size of stub in the…",null,null],[17,"S_MOD_INIT_FUNC_POINTERS","","section with only function pointers for initialization",null,null],[17,"S_MOD_TERM_FUNC_POINTERS","","section with only function pointers for termination",null,null],[17,"S_COALESCED","","section contains symbols that are to be coalesced",null,null],[17,"S_GB_ZEROFILL","","zero fill on demand section that can be larger than 4…",null,null],[17,"S_INTERPOSING","","section with only pairs of function pointers for interposing",null,null],[17,"S_16BYTE_LITERALS","","section with only 16 byte literals",null,null],[17,"S_DTRACE_DOF","","section contains DTrace Object Format",null,null],[17,"S_LAZY_DYLIB_SYMBOL_POINTERS","","section with only lazy symbol pointers to lazy loaded dylibs",null,null],[17,"S_THREAD_LOCAL_REGULAR","","template of initial  values for TLVs",null,null],[17,"S_THREAD_LOCAL_ZEROFILL","","template of initial  values for TLVs",null,null],[17,"S_THREAD_LOCAL_VARIABLES","","TLV descriptors",null,null],[17,"S_THREAD_LOCAL_VARIABLE_POINTERS","","pointers to TLV  descriptors",null,null],[17,"S_THREAD_LOCAL_INIT_FUNCTION_POINTERS","","functions to call to initialize TLV values",null,null],[17,"SECTION_ATTRIBUTES_USR","","User setable attributes",null,null],[17,"S_ATTR_PURE_INSTRUCTIONS","","section contains only true machine instructions",null,null],[17,"S_ATTR_NO_TOC","","section contains coalesced symbols that are not to be in a…",null,null],[17,"S_ATTR_STRIP_STATIC_SYMS","","ok to strip static symbols in this section in files with…",null,null],[17,"S_ATTR_NO_DEAD_STRIP","","no dead stripping",null,null],[17,"S_ATTR_LIVE_SUPPORT","","blocks are live if they reference live blocks",null,null],[17,"S_ATTR_SELF_MODIFYING_CODE","","Used with i386 code stubs written on by dyld",null,null],[17,"S_ATTR_DEBUG","","debug section",null,null],[17,"SECTION_ATTRIBUTES_SYS","","system setable attributes",null,null],[17,"S_ATTR_SOME_INSTRUCTIONS","","section contains some machine instructions",null,null],[17,"S_ATTR_EXT_RELOC","","section has external relocation entries",null,null],[17,"S_ATTR_LOC_RELOC","","section has local relocation entries",null,null],[17,"SEG_PAGEZERO","","the pagezero segment which has no protections and catches…",null,null],[17,"SEG_TEXT","","the tradition UNIX text segment",null,null],[17,"SECT_TEXT","","the real text part of the text section no headers, and no…",null,null],[17,"SECT_FVMLIB_INIT0","","the fvmlib initialization section",null,null],[17,"SECT_FVMLIB_INIT1","","the section following the fvmlib initialization section",null,null],[17,"SEG_DATA","","the tradition UNIX data segment",null,null],[17,"SECT_DATA","","the real initialized data section no padding, no bss overlap",null,null],[17,"SECT_BSS","","the real uninitialized data sectionno padding",null,null],[17,"SECT_COMMON","","the section common symbols are allocated in by the link…",null,null],[17,"SEG_OBJC","","objective-C runtime segment",null,null],[17,"SECT_OBJC_SYMBOLS","","symbol table",null,null],[17,"SECT_OBJC_MODULES","","module information",null,null],[17,"SECT_OBJC_STRINGS","","string table",null,null],[17,"SECT_OBJC_REFS","","string table",null,null],[17,"SEG_ICON","","the icon segment",null,null],[17,"SECT_ICON_HEADER","","the icon headers",null,null],[17,"SECT_ICON_TIFF","","the icons in tiff format",null,null],[17,"SEG_LINKEDIT","","the segment containing all structs created and maintained…",null,null],[17,"SEG_UNIXSTACK","","the unix stack segment",null,null],[17,"SEG_IMPORT","","the segment for the self (dyld) modifing code stubs that…",null,null],[17,"VM_PROT_READ","","Segment is readable.",null,null],[17,"VM_PROT_WRITE","","Segment is writable.",null,null],[17,"VM_PROT_EXECUTE","","Segment is executable.",null,null],[0,"exports","goblin::mach","Symbols exported by this binary and available for dynamic…",null,null],[3,"Export","goblin::mach::exports","A finalized symbolic export reconstructed from the export…",null,null],[12,"name","","The reconsituted export name which dyld matches against",48,null],[12,"info","","The export info in the node data",48,null],[12,"size","","How large this export is",48,null],[12,"offset","","The offset this symbol export is found in the binary",48,null],[3,"ExportTrie","","An export trie efficiently encodes all of the symbols…",null,null],[4,"SymbolKind","","",null,null],[13,"Regular","","",49,null],[13,"Absolute","","",49,null],[13,"ThreadLocal","","",49,null],[13,"UnknownSymbolKind","","",49,null],[4,"ExportInfo","","An export can be a regular export, a re-export, or a stub",null,null],[13,"Regular","","A regular exported symbol, which is an address where it is…",50,null],[12,"address","goblin::mach::exports::ExportInfo","",50,null],[12,"flags","","",50,null],[13,"Reexport","goblin::mach::exports","if lib_symbol_name None then same symbol name, otherwise…",50,null],[12,"lib","goblin::mach::exports::ExportInfo","",50,null],[12,"lib_symbol_name","","",50,null],[12,"flags","","",50,null],[13,"Stub","goblin::mach::exports","If the flags is `EXPORT_SYMBOL_FLAGS_STUB_AND_RESOLVER`,…",50,null],[12,"stub_offset","goblin::mach::exports::ExportInfo","",50,null],[12,"resolver_offset","","",50,null],[12,"flags","","",50,null],[17,"EXPORT_SYMBOL_FLAGS_KIND_MASK","goblin::mach::exports","",null,null],[17,"EXPORT_SYMBOL_FLAGS_KIND_REGULAR","","",null,null],[17,"EXPORT_SYMBOL_FLAGS_KIND_ABSOLUTE","","",null,null],[17,"EXPORT_SYMBOL_FLAGS_KIND_THREAD_LOCAL","","",null,null],[17,"EXPORT_SYMBOL_FLAGS_WEAK_DEFINITION","","",null,null],[17,"EXPORT_SYMBOL_FLAGS_REEXPORT","","",null,null],[17,"EXPORT_SYMBOL_FLAGS_STUB_AND_RESOLVER","","",null,null],[11,"new","","",49,[[["u64"]],["symbolkind"]]],[11,"to_str","","",49,[[["self"]],["str"]]],[11,"parse","","Parse out the export info from `bytes`, at `offset`",50,[[["usize"],["u64"]],[["result",["exportinfo"]],["exportinfo"]]]],[11,"new","","Create a new export from `name` and `info`",48,[[["string"],["exportinfo"]],["export"]]],[11,"exports","","Walk the export trie for symbols exported by this binary,…",51,[[["self"]],[["vec",["export"]],["result",["vec"]]]]],[11,"new","","Create a new, lazy, zero-copy export trie from the…",51,[[["dyldinfocommand"]],["self"]]],[0,"fat","goblin::mach","A Mach-o fat binary is a multi-architecture binary container",null,null],[3,"FatHeader","goblin::mach::fat","The Mach-o `FatHeader` always has its data bigendian",null,null],[12,"magic","","The magic number, `cafebabe`",52,null],[12,"nfat_arch","","How many fat architecture headers there are",52,null],[3,"FatArch","","The Mach-o `FatArch` always has its data bigendian",null,null],[12,"cputype","","What kind of CPU this binary is",53,null],[12,"cpusubtype","","",53,null],[12,"offset","","Where in the fat binary it starts",53,null],[12,"size","","How big the binary is",53,null],[12,"align","","",53,null],[17,"FAT_MAGIC","","",null,null],[17,"FAT_CIGAM","","",null,null],[17,"SIZEOF_FAT_HEADER","","",null,null],[17,"SIZEOF_FAT_ARCH","","",null,null],[11,"from_bytes","","Reinterpret a `FatHeader` from `bytes`",52,[[],["fatheader"]]],[11,"from_fd","","Reads a `FatHeader` from a `File` on disk",52,[[["file"]],[["fatheader"],["result",["fatheader"]]]]],[11,"parse","","Parse a mach-o fat header from the `bytes`",52,[[],[["result",["fatheader"]],["fatheader"]]]],[11,"slice","","Get the slice of bytes this header describes from `bytes`",53,[[["self"]]]],[11,"cputype","","Returns the cpu type",53,[[["self"]],["cputype"]]],[11,"cpusubtype","","Returns the cpu subtype with the capabilities removed",53,[[["self"]],["cpusubtype"]]],[11,"cpu_caps","","Returns the capabilities of the CPU",53,[[["self"]],["u32"]]],[11,"is_64","","Whether this fat architecture header describes a 64-bit…",53,[[["self"]],["bool"]]],[11,"parse","","Parse a `FatArch` header from `bytes` at `offset`",53,[[["usize"]],["result"]]],[0,"header","goblin::mach","A header contains minimal architecture information, the…",null,null],[3,"Header32","goblin::mach::header","A 32-bit Mach-o header",null,null],[12,"magic","","mach magic number identifier",54,null],[12,"cputype","","cpu specifier",54,null],[12,"cpusubtype","","machine specifier",54,null],[12,"filetype","","type of file",54,null],[12,"ncmds","","number of load commands",54,null],[12,"sizeofcmds","","the size of all the load commands",54,null],[12,"flags","","flags",54,null],[3,"Header64","","A 64-bit Mach-o header",null,null],[12,"magic","","mach magic number identifier",55,null],[12,"cputype","","cpu specifier",55,null],[12,"cpusubtype","","machine specifier",55,null],[12,"filetype","","type of file",55,null],[12,"ncmds","","number of load commands",55,null],[12,"sizeofcmds","","the size of all the load commands",55,null],[12,"flags","","flags",55,null],[12,"reserved","","",55,null],[3,"Header","","Generic sized header",null,null],[12,"magic","","",56,null],[12,"cputype","","",56,null],[12,"cpusubtype","","",56,null],[12,"filetype","","type of file",56,null],[12,"ncmds","","number of load commands",56,null],[12,"sizeofcmds","","the size of all the load commands",56,null],[12,"flags","","flags",56,null],[12,"reserved","","",56,null],[5,"flag_to_str","","",null,[[["u32"]],["str"]]],[5,"filetype_to_str","","",null,[[["u32"]],["str"]]],[17,"MH_NOUNDEFS","","the object file has no undefined references",null,null],[17,"MH_INCRLINK","","the object file is the output of an incremental link…",null,null],[17,"MH_DYLDLINK","","the object file is input for the dynamic linker and can't…",null,null],[17,"MH_BINDATLOAD","","the object file's undefined references are bound by the…",null,null],[17,"MH_PREBOUND","","the file has its dynamic undefined references prebound.",null,null],[17,"MH_SPLIT_SEGS","","the file has its read-only and read-write segments split",null,null],[17,"MH_LAZY_INIT","","the shared library init routine is to be run lazily via…",null,null],[17,"MH_TWOLEVEL","","the image is using two-level name space bindings",null,null],[17,"MH_FORCE_FLAT","","the executable is forcing all images to use flat name…",null,null],[17,"MH_NOMULTIDEFS","","this umbrella guarantees no multiple defintions of symbols…",null,null],[17,"MH_NOFIXPREBINDING","","do not have dyld notify the prebinding agent about this…",null,null],[17,"MH_PREBINDABLE","","the binary is not prebound but can have its prebinding…",null,null],[17,"MH_ALLMODSBOUND","","indicates that this binary binds to all two-level…",null,null],[17,"MH_SUBSECTIONS_VIA_SYMBOLS","","safe to divide up the sections into sub-sections via…",null,null],[17,"MH_CANONICAL","","the binary has been canonicalized via the unprebind…",null,null],[17,"MH_WEAK_DEFINES","","the final linked image contains external weak symbols",null,null],[17,"MH_BINDS_TO_WEAK","","the final linked image uses weak symbols",null,null],[17,"MH_ALLOW_STACK_EXECUTION","","When this bit is set, all stacks in the task will be given…",null,null],[17,"MH_ROOT_SAFE","","When this bit is set, the binary declares it is safe for…",null,null],[17,"MH_SETUID_SAFE","","When this bit is set, the binary declares it is safe for…",null,null],[17,"MH_NO_REEXPORTED_DYLIBS","","When this bit is set on a dylib, the static linker does…",null,null],[17,"MH_PIE","","When this bit is set, the OS will load the main executable…",null,null],[17,"MH_DEAD_STRIPPABLE_DYLIB","","Only for use on dylibs. When linking against a dylib that…",null,null],[17,"MH_HAS_TLV_DESCRIPTORS","","Contains a section of type S_THREAD_LOCAL_VARIABLES",null,null],[17,"MH_NO_HEAP_EXECUTION","","When this bit is set, the OS will run the main executable…",null,null],[17,"MH_APP_EXTENSION_SAFE","","The code was linked for use in an application extension.",null,null],[17,"MH_MAGIC","","Mach Header magic constant",null,null],[17,"MH_CIGAM","","",null,null],[17,"MH_MAGIC_64","","Mach Header magic constant for 64-bit",null,null],[17,"MH_CIGAM_64","","",null,null],[17,"MH_OBJECT","","relocatable object file",null,null],[17,"MH_EXECUTE","","demand paged executable file",null,null],[17,"MH_FVMLIB","","fixed VM shared library file",null,null],[17,"MH_CORE","","core file",null,null],[17,"MH_PRELOAD","","preloaded executable file",null,null],[17,"MH_DYLIB","","dynamically bound shared library",null,null],[17,"MH_DYLINKER","","dynamic link editor",null,null],[17,"MH_BUNDLE","","dynamically bound bundle file",null,null],[17,"MH_DYLIB_STUB","","shared library stub for static linking only, no section…",null,null],[17,"MH_DSYM","","companion file with only debug sections",null,null],[17,"MH_KEXT_BUNDLE","","x86_64 kexts",null,null],[17,"SIZEOF_HEADER_32","","",null,null],[17,"SIZEOF_HEADER_64","","",null,null],[11,"from_bytes","","Transmutes the given byte array into the corresponding…",54,[[],["self"]]],[11,"size","","",54,[[["self"]],["usize"]]],[11,"from_bytes","","Transmutes the given byte array into the corresponding…",55,[[],["self"]]],[11,"size","","",55,[[["self"]],["usize"]]],[11,"new","","",56,[[["ctx"]],["self"]]],[11,"cputype","","Returns the cpu type",56,[[["self"]],["cputype"]]],[11,"cpusubtype","","Returns the cpu subtype with the capabilities removed",56,[[["self"]],["cpusubtype"]]],[11,"cpu_caps","","Returns the capabilities of the CPU",56,[[["self"]],["u32"]]],[0,"imports","goblin::mach","Dynamically linked symbolic imports",null,null],[3,"Import","goblin::mach::imports","An dynamically linked symbolic import",null,null],[12,"name","","The symbol name dyld uses to resolve this import",57,null],[12,"dylib","","The library this symbol belongs to (thanks to two-level…",57,null],[12,"is_lazy","","Whether the symbol is lazily resolved or not",57,null],[12,"offset","","The offset in the binary this import is found",57,null],[12,"size","","The size of this import",57,null],[12,"address","","The virtual memory address at which this import is found",57,null],[12,"addend","","The addend of this import",57,null],[12,"is_weak","","Whether this import is weak",57,null],[12,"start_of_sequence_offset","","The offset in the stream of bind opcodes that caused this…",57,null],[3,"BindInterpreter","","An interpreter for mach BIND opcodes. Runs on prebound…",null,null],[11,"new","","Construct a new import binding interpreter from `bytes`…",58,[[["dyldinfocommand"]],["self"]]],[11,"imports","","Return the imports in this binary",58,[[["ctx"],["self"]],[["vec",["import"]],["result",["vec"]]]]],[0,"load_command","goblin::mach","Load commands tell the kernel and dynamic linker anything…",null,null],[3,"LoadCommandHeader","goblin::mach::load_command","Occurs at the beginning of every load command to serve as…",null,null],[12,"cmd","","",59,null],[12,"cmdsize","","",59,null],[3,"Section32","","",null,null],[12,"sectname","","name of this section",60,null],[12,"segname","","segment this section goes in",60,null],[12,"addr","","memory address of this section",60,null],[12,"size","","size in bytes of this section",60,null],[12,"offset","","file offset of this section",60,null],[12,"align","","section alignment (power of 2)",60,null],[12,"reloff","","file offset of relocation entries",60,null],[12,"nreloc","","number of relocation entries",60,null],[12,"flags","","flags (section type and attributes)",60,null],[12,"reserved1","","reserved (for offset or index)",60,null],[12,"reserved2","","reserved (for count or sizeof)",60,null],[3,"Section64","","for 64-bit architectures",null,null],[12,"sectname","","name of this section",61,null],[12,"segname","","segment this section goes in",61,null],[12,"addr","","memory address of this section",61,null],[12,"size","","size in bytes of this section",61,null],[12,"offset","","file offset of this section",61,null],[12,"align","","section alignment (power of 2)",61,null],[12,"reloff","","file offset of relocation entries",61,null],[12,"nreloc","","number of relocation entries",61,null],[12,"flags","","flags (section type and attributes",61,null],[12,"reserved1","","reserved (for offset or index)",61,null],[12,"reserved2","","reserved (for count or sizeof)",61,null],[12,"reserved3","","reserved",61,null],[3,"SegmentCommand32","","",null,null],[12,"cmd","","",62,null],[12,"cmdsize","","",62,null],[12,"segname","","",62,null],[12,"vmaddr","","",62,null],[12,"vmsize","","",62,null],[12,"fileoff","","",62,null],[12,"filesize","","",62,null],[12,"maxprot","","",62,null],[12,"initprot","","",62,null],[12,"nsects","","",62,null],[12,"flags","","",62,null],[3,"SegmentCommand64","","",null,null],[12,"cmd","","",63,null],[12,"cmdsize","","",63,null],[12,"segname","","",63,null],[12,"vmaddr","","",63,null],[12,"vmsize","","",63,null],[12,"fileoff","","",63,null],[12,"filesize","","",63,null],[12,"maxprot","","",63,null],[12,"initprot","","",63,null],[12,"nsects","","",63,null],[12,"flags","","",63,null],[3,"Fvmlib","","Fixed virtual memory shared libraries are identified by…",null,null],[12,"name","","library's target pathname",64,null],[12,"minor_version","","library's minor version number",64,null],[12,"header_addr","","library's header address",64,null],[3,"FvmlibCommand","","A fixed virtual shared library (fipub constype ==…",null,null],[12,"cmd","","LC_IDFVMLIB or LC_LOADFVMLIB",65,null],[12,"cmdsize","","includes pathname string",65,null],[12,"fvmlib","","the library identification",65,null],[3,"Dylib","","A dynamically linked shared library (fipub constype ==…",null,null],[12,"name","","library's path name",66,null],[12,"timestamp","","library's build time stamp",66,null],[12,"current_version","","library's current version number",66,null],[12,"compatibility_version","","library's compatibility vers number",66,null],[3,"DylibCommand","","",null,null],[12,"cmd","","LC_ID_DYLIB, LC_LOAD_DYLIB, LC_LOAD_WEAK_DYLIB,…",67,null],[12,"cmdsize","","includes pathname string",67,null],[12,"dylib","","the library identification",67,null],[3,"SubFrameworkCommand","","A dynamically linked shared library may be a subframework…",null,null],[12,"cmd","","LC_SUB_FRAMEWORK",68,null],[12,"cmdsize","","includes umbrella string",68,null],[12,"umbrella","","the umbrella framework name",68,null],[3,"SubClientCommand","","For dynamically linked shared libraries that are…",null,null],[12,"cmd","","LC_SUB_CLIENT",69,null],[12,"cmdsize","","includes client string",69,null],[12,"client","","the client name",69,null],[3,"SubUmbrellaCommand","","A dynamically linked shared library may be a sub_umbrella…",null,null],[12,"cmd","","LC_SUB_UMBRELLA",70,null],[12,"cmdsize","","includes sub_umbrella string",70,null],[12,"sub_umbrella","","the sub_umbrella framework name",70,null],[3,"SubLibraryCommand","","A dynamically linked shared library may be a sub_library…",null,null],[12,"cmd","","LC_SUB_LIBRARY",71,null],[12,"cmdsize","","includes sub_library string",71,null],[12,"sub_library","","the sub_library name",71,null],[3,"PreboundDylibCommand","","A program (type == MH_EXECUTE) that is prebound to its…",null,null],[12,"cmd","","LC_PREBOUND_DYLIB",72,null],[12,"cmdsize","","includes strings",72,null],[12,"name","","library's path name",72,null],[12,"nmodules","","number of modules in library",72,null],[12,"linked_modules","","bit vector of linked modules",72,null],[3,"DylinkerCommand","","The name of the dynamic linker",null,null],[12,"cmd","","",73,null],[12,"cmdsize","","",73,null],[12,"name","","",73,null],[3,"ThreadCommand","","Thread commands contain machine-specific data structures…",null,null],[12,"cmd","","LC_THREAD or  LC_UNIXTHREAD",74,null],[12,"cmdsize","","total size of this command",74,null],[12,"flavor","","flavor of thread state (but you also need to know the…",74,null],[12,"count","","number of elements in `thread_state` that are valid",74,null],[12,"thread_state","","The raw thread state, details of which varies by CPU",74,null],[3,"RoutinesCommand32","","The routines command contains the address of the dynamic…",null,null],[12,"cmd","","LC_ROUTINES",75,null],[12,"cmdsize","","total size of this command",75,null],[12,"init_address","","address of initialization routine",75,null],[12,"init_module","","index into the module table that the init routine is…",75,null],[12,"reserved1","","",75,null],[12,"reserved2","","",75,null],[12,"reserved3","","",75,null],[12,"reserved4","","",75,null],[12,"reserved5","","",75,null],[12,"reserved6","","",75,null],[3,"RoutinesCommand64","","The 64-bit routines command.  Same use as above.",null,null],[12,"cmd","","LC_ROUTINES_64",76,null],[12,"cmdsize","","total size of this command",76,null],[12,"init_address","","address of initialization routine",76,null],[12,"init_module","","index into the module table that the init routine is…",76,null],[12,"reserved1","","",76,null],[12,"reserved2","","",76,null],[12,"reserved3","","",76,null],[12,"reserved4","","",76,null],[12,"reserved5","","",76,null],[12,"reserved6","","",76,null],[3,"SymtabCommand","","",null,null],[12,"cmd","","",77,null],[12,"cmdsize","","",77,null],[12,"symoff","","",77,null],[12,"nsyms","","",77,null],[12,"stroff","","",77,null],[12,"strsize","","",77,null],[3,"DysymtabCommand","","This is the second set of the symbolic information which…",null,null],[12,"cmd","","",78,null],[12,"cmdsize","","",78,null],[12,"ilocalsym","","index to local symbols",78,null],[12,"nlocalsym","","number of local symbols",78,null],[12,"iextdefsym","","index to externally defined symbols",78,null],[12,"nextdefsym","","number of externally defined symbols",78,null],[12,"iundefsym","","index to undefined symbols",78,null],[12,"nundefsym","","number of undefined symbols",78,null],[12,"tocoff","","file offset to table of contents",78,null],[12,"ntoc","","number of entries in table of contents",78,null],[12,"modtaboff","","file offset to module table",78,null],[12,"nmodtab","","number of module table entries",78,null],[12,"extrefsymoff","","offset to referenced symbol table",78,null],[12,"nextrefsyms","","number of referenced symbol table entries",78,null],[12,"indirectsymoff","","file offset to the indirect symbol table",78,null],[12,"nindirectsyms","","number of indirect symbol table entries",78,null],[12,"extreloff","","offset to external relocation entries",78,null],[12,"nextrel","","number of external relocation entries",78,null],[12,"locreloff","","offset to local relocation entries",78,null],[12,"nlocrel","","number of local relocation entries",78,null],[3,"DylibTableOfContents","","a table of contents entry",null,null],[12,"symbol_index","","the defined external symbol (index into the symbol table)",79,null],[12,"module_index","","index into the module table this symbol is defined in",79,null],[3,"DylibModule","","a module table entry",null,null],[12,"module_name","","the module name (index into string table)",80,null],[12,"iextdefsym","","index into externally defined symbols",80,null],[12,"nextdefsym","","number of externally defined symbols",80,null],[12,"irefsym","","index into reference symbol table",80,null],[12,"nrefsym","","number of reference symbol table entries",80,null],[12,"ilocalsym","","index into symbols for local symbols",80,null],[12,"nlocalsym","","number of local symbols",80,null],[12,"iextrel","","index into external relocation entries",80,null],[12,"nextrel","","number of external relocation entries",80,null],[12,"iinit_iterm","","low 16 bits are the index into the init section, high 16…",80,null],[12,"ninit_nterm","","low 16 bits are the number of init section entries, high…",80,null],[12,"objc_module_info_addr","","the (__OBJC,_module_info) section",80,null],[12,"objc_module_info_size","","the (__OBJC,__module_info) section",80,null],[3,"DylibModule64","","a 64-bit module table entry",null,null],[12,"module_name","","the module name (index into string table)",81,null],[12,"iextdefsym","","index into externally defined symbols",81,null],[12,"nextdefsym","","number of externally defined symbols",81,null],[12,"irefsym","","index into reference symbol table",81,null],[12,"nrefsym","","number of reference symbol table entries",81,null],[12,"ilocalsym","","index into symbols for local symbols",81,null],[12,"nlocalsym","","number of local symbols",81,null],[12,"iextrel","","index into external relocation entries",81,null],[12,"nextrel","","number of external relocation entries",81,null],[12,"iinit_iterm","","low 16 bits are the index into the init section, high 16…",81,null],[12,"ninit_nterm","","low 16 bits are the number of init section entries, high…",81,null],[12,"objc_module_info_size","","the (__OBJC,__module_info) section",81,null],[12,"objc_module_info_addr","","the (__OBJC,__module_info) section",81,null],[3,"DylibReference","","The entries in the reference symbol table are used when…",null,null],[12,"isym","","24 bits bit-field index into the symbol table",82,null],[12,"flags","","flags to indicate the type of reference",82,null],[3,"TwolevelHintsCommand","","The twolevel_hints_command contains the offset and number…",null,null],[12,"cmd","","LC_TWOLEVEL_HINTS",83,null],[12,"cmdsize","","sizeof(struct twolevel_hints_command)",83,null],[12,"offset","","offset to the hint table",83,null],[12,"nhints","","number of hints in the hint table",83,null],[3,"TwolevelHint","","The entries in the two-level namespace lookup hints table…",null,null],[12,"isub_image","","index into the sub images",84,null],[12,"itoc","","24 bit field index into the table of contents",84,null],[3,"PrebindCksumCommand","","The prebind_cksum_command contains the value of the…",null,null],[12,"cmd","","LC_PREBIND_CKSUM",85,null],[12,"cmdsize","","sizeof(struct prebind_cksum_command)",85,null],[12,"cksum","","the check sum or zero",85,null],[3,"UuidCommand","","The uuid load command contains a single 128-bit unique…",null,null],[12,"cmd","","LC_UUID",86,null],[12,"cmdsize","","sizeof(struct uuid_command)",86,null],[12,"uuid","","16 bytes the 128-bit uuid",86,null],[3,"RpathCommand","","The rpath_command contains a path which at runtime should…",null,null],[12,"cmd","","LC_RPATH",87,null],[12,"cmdsize","","includes string",87,null],[12,"path","","path to add to run path",87,null],[3,"LinkeditDataCommand","","The linkedit_data_command contains the offsets and sizes…",null,null],[12,"cmd","","LC_CODE_SIGNATURE, LC_SEGMENT_SPLIT_INFO,…",88,null],[12,"cmdsize","","sizeof(struct linkedit_data_command)",88,null],[12,"dataoff","","file offset of data in __LINKEDIT segment",88,null],[12,"datasize","","file size of data in __LINKEDIT segment",88,null],[3,"EncryptionInfoCommand32","","The encryption_info_command contains the file offset and…",null,null],[12,"cmd","","LC_ENCRYPTION_INFO",89,null],[12,"cmdsize","","sizeof(struct encryption_info_command)",89,null],[12,"cryptoff","","file offset of encrypted range",89,null],[12,"cryptsize","","file size of encrypted range",89,null],[12,"cryptid","","which enryption system, 0 means not-encrypted yet",89,null],[3,"EncryptionInfoCommand64","","The encryption_info_command_64 contains the file offset…",null,null],[12,"cmd","","LC_ENCRYPTION_INFO_64",90,null],[12,"cmdsize","","sizeof(struct encryption_info_command_64)",90,null],[12,"cryptoff","","file offset of encrypted range",90,null],[12,"cryptsize","","file size of encrypted range",90,null],[12,"cryptid","","which enryption system, 0 means not-encrypted yet",90,null],[12,"pad","","padding to make this struct's size a multiple of 8 bytes",90,null],[3,"VersionMinCommand","","The version_min_command contains the min OS version on…",null,null],[12,"cmd","","",91,null],[12,"cmdsize","","",91,null],[12,"version","","X.Y.Z is encoded in nibbles xxxx.yy.zz",91,null],[12,"sdk","","X.Y.Z is encoded in nibbles xxxx.yy.zz",91,null],[3,"DyldInfoCommand","","",null,null],[12,"cmd","","LC_DYLD_INFO or LC_DYLD_INFO_ONLY",92,null],[12,"cmdsize","","sizeof(struct dyld_info_command)",92,null],[12,"rebase_off","","file offset to rebase info",92,null],[12,"rebase_size","","size of rebase info",92,null],[12,"bind_off","","file offset to binding info",92,null],[12,"bind_size","","size of binding info",92,null],[12,"weak_bind_off","","file offset to weak binding info",92,null],[12,"weak_bind_size","","size of weak binding info",92,null],[12,"lazy_bind_off","","file offset to lazy binding info",92,null],[12,"lazy_bind_size","","size of lazy binding infs",92,null],[12,"export_off","","file offset to lazy binding info",92,null],[12,"export_size","","size of lazy binding infs",92,null],[3,"LinkerOptionCommand","","The linker_option_command contains linker options embedded…",null,null],[12,"cmd","","LC_LINKER_OPTION only used in MH_OBJECT fipub constypes",93,null],[12,"cmdsize","","",93,null],[12,"count","","number of strings concatenation of zero terminated UTF8…",93,null],[3,"SymsegCommand","","The symseg_command contains the offset and size of the GNU…",null,null],[12,"cmd","","LC_SYMSEG",94,null],[12,"cmdsize","","sizeof(struct symseg_command)",94,null],[12,"offset","","symbol segment offset",94,null],[12,"size","","symbol segment size in bytes",94,null],[3,"IdentCommand","","The ident_command contains a free format string table…",null,null],[12,"cmd","","LC_IDENT",95,null],[12,"cmdsize","","strings that follow this command",95,null],[3,"FvmfileCommand","","The fvmfile_command contains a reference to a file to be…",null,null],[12,"cmd","","LC_FVMFILE",96,null],[12,"cmdsize","","includes pathname string",96,null],[12,"name","","files pathname",96,null],[12,"header_addr","","files virtual address",96,null],[3,"EntryPointCommand","","The entry_point_command is a replacement for…",null,null],[12,"cmd","","",97,null],[12,"cmdsize","","",97,null],[12,"entryoff","","uint64_t file __TEXT offset of main",97,null],[12,"stacksize","","uint64_t if not zero, initial stack size",97,null],[3,"SourceVersionCommand","","The source_version_command is an optional load command…",null,null],[12,"cmd","","LC_SOURCE_VERSION",98,null],[12,"cmdsize","","",98,null],[12,"version","","A.B.C.D.E packed as a24.b10.c10.d10.e10",98,null],[3,"DataInCodeEntry","","The LC_DATA_IN_CODE load commands uses a…",null,null],[12,"offset","","from mach_header to start of data range",99,null],[12,"length","","number of bytes in data range",99,null],[12,"kind","","a DICE_KIND_* value",99,null],[3,"LoadCommand","","A tagged LoadCommand union",null,null],[12,"offset","","The offset this load command occurs at",100,null],[12,"command","","Which load command this is inside a variant",100,null],[4,"CommandVariant","","The various load commands as a cast-free variant/enum",null,null],[13,"Segment32","","",101,null],[13,"Segment64","","",101,null],[13,"Uuid","","",101,null],[13,"Symtab","","",101,null],[13,"Symseg","","",101,null],[13,"Thread","","",101,null],[13,"Unixthread","","",101,null],[13,"LoadFvmlib","","",101,null],[13,"IdFvmlib","","",101,null],[13,"Ident","","",101,null],[13,"Fvmfile","","",101,null],[13,"Prepage","","",101,null],[13,"Dysymtab","","",101,null],[13,"LoadDylib","","",101,null],[13,"IdDylib","","",101,null],[13,"LoadDylinker","","",101,null],[13,"IdDylinker","","",101,null],[13,"PreboundDylib","","",101,null],[13,"Routines32","","",101,null],[13,"Routines64","","",101,null],[13,"SubFramework","","",101,null],[13,"SubUmbrella","","",101,null],[13,"SubClient","","",101,null],[13,"SubLibrary","","",101,null],[13,"TwolevelHints","","",101,null],[13,"PrebindCksum","","",101,null],[13,"LoadWeakDylib","","",101,null],[13,"Rpath","","",101,null],[13,"CodeSignature","","",101,null],[13,"SegmentSplitInfo","","",101,null],[13,"ReexportDylib","","",101,null],[13,"LazyLoadDylib","","",101,null],[13,"EncryptionInfo32","","",101,null],[13,"EncryptionInfo64","","",101,null],[13,"DyldInfo","","",101,null],[13,"DyldInfoOnly","","",101,null],[13,"LoadUpwardDylib","","",101,null],[13,"VersionMinMacosx","","",101,null],[13,"VersionMinIphoneos","","",101,null],[13,"FunctionStarts","","",101,null],[13,"DyldEnvironment","","",101,null],[13,"Main","","",101,null],[13,"DataInCode","","",101,null],[13,"SourceVersion","","",101,null],[13,"DylibCodeSignDrs","","",101,null],[13,"LinkerOption","","",101,null],[13,"LinkerOptimizationHint","","",101,null],[13,"Unimplemented","","",101,null],[5,"cmd_to_str","","",null,[[["u32"]],["str"]]],[6,"LcStr","","",null,null],[17,"SIZEOF_LOAD_COMMAND","","",null,null],[17,"SIZEOF_LC_STR","","",null,null],[17,"SIZEOF_SECTION_32","","",null,null],[17,"SIZEOF_SECTION_64","","",null,null],[17,"SIZEOF_SEGMENT_COMMAND_32","","",null,null],[17,"SIZEOF_SEGMENT_COMMAND_64","","",null,null],[17,"SIZEOF_FVMLIB","","",null,null],[17,"SIZEOF_FVMLIB_COMMAND","","",null,null],[17,"SIZEOF_DYLIB","","",null,null],[17,"SIZEOF_DYLIB_COMMAND","","",null,null],[17,"SIZEOF_SUB_FRAMEWORK_COMMAND","","",null,null],[17,"SIZEOF_SUB_CLIENT_COMMAND","","",null,null],[17,"SIZEOF_SUB_UMBRELLA_COMMAND","","",null,null],[17,"SIZEOF_SUB_LIBRARY_COMMAND","","",null,null],[17,"SIZEOF_PREBOUND_DYLIB_COMMAND","","",null,null],[17,"SIZEOF_DYLINKER_COMMAND","","",null,null],[17,"SIZEOF_SYMTAB_COMMAND","","",null,null],[17,"SIZEOF_DYSYMTAB_COMMAND","","",null,null],[17,"SIZEOF_UUID_COMMAND","","",null,null],[17,"SIZEOF_RPATH_COMMAND","","",null,null],[17,"SIZEOF_LINKEDIT_DATA_COMMAND","","",null,null],[17,"SIZEOF_ENCRYPTION_INFO_COMMAND_32","","",null,null],[17,"SIZEOF_ENCRYPTION_INFO_COMMAND_64","","",null,null],[17,"SIZEOF_VERSION_MIN_COMMAND","","",null,null],[17,"SIZEOF_DYLIB_INFO_COMMAND","","",null,null],[17,"SIZEOF_LINKER_OPTION_COMMAND","","",null,null],[17,"SIZEOF_SYMSEG_COMMAND","","",null,null],[17,"SIZEOF_IDENT_COMMAND","","",null,null],[17,"SIZEOF_FVMFILE_COMMAND","","",null,null],[17,"SIZEOF_ENTRY_POINT_COMMAND","","",null,null],[17,"LC_REQ_DYLD","","",null,null],[17,"LC_LOAD_WEAK_DYLIB","","",null,null],[17,"LC_RPATH","","",null,null],[17,"LC_REEXPORT_DYLIB","","",null,null],[17,"LC_DYLD_INFO_ONLY","","",null,null],[17,"LC_LOAD_UPWARD_DYLIB","","",null,null],[17,"LC_MAIN","","",null,null],[17,"LC_SEGMENT","","",null,null],[17,"LC_SYMTAB","","",null,null],[17,"LC_SYMSEG","","",null,null],[17,"LC_THREAD","","",null,null],[17,"LC_UNIXTHREAD","","",null,null],[17,"LC_LOADFVMLIB","","",null,null],[17,"LC_IDFVMLIB","","",null,null],[17,"LC_IDENT","","",null,null],[17,"LC_FVMFILE","","",null,null],[17,"LC_PREPAGE","","",null,null],[17,"LC_DYSYMTAB","","",null,null],[17,"LC_LOAD_DYLIB","","",null,null],[17,"LC_ID_DYLIB","","",null,null],[17,"LC_LOAD_DYLINKER","","",null,null],[17,"LC_ID_DYLINKER","","",null,null],[17,"LC_PREBOUND_DYLIB","","",null,null],[17,"LC_ROUTINES","","",null,null],[17,"LC_SUB_FRAMEWORK","","",null,null],[17,"LC_SUB_UMBRELLA","","",null,null],[17,"LC_SUB_CLIENT","","",null,null],[17,"LC_SUB_LIBRARY","","",null,null],[17,"LC_TWOLEVEL_HINTS","","",null,null],[17,"LC_PREBIND_CKSUM","","",null,null],[17,"LC_SEGMENT_64","","",null,null],[17,"LC_ROUTINES_64","","",null,null],[17,"LC_UUID","","",null,null],[17,"LC_CODE_SIGNATURE","","",null,null],[17,"LC_SEGMENT_SPLIT_INFO","","",null,null],[17,"LC_LAZY_LOAD_DYLIB","","",null,null],[17,"LC_ENCRYPTION_INFO","","",null,null],[17,"LC_DYLD_INFO","","",null,null],[17,"LC_VERSION_MIN_MACOSX","","",null,null],[17,"LC_VERSION_MIN_IPHONEOS","","",null,null],[17,"LC_FUNCTION_STARTS","","",null,null],[17,"LC_DYLD_ENVIRONMENT","","",null,null],[17,"LC_DATA_IN_CODE","","",null,null],[17,"LC_SOURCE_VERSION","","",null,null],[17,"LC_DYLIB_CODE_SIGN_DRS","","",null,null],[17,"LC_ENCRYPTION_INFO_64","","",null,null],[17,"LC_LINKER_OPTION","","",null,null],[17,"LC_LINKER_OPTIMIZATION_HINT","","",null,null],[11,"name","","",62,[[["self"]],[["result",["str"]],["str"]]]],[11,"name","","",63,[[["self"]],[["result",["str"]],["str"]]]],[11,"instruction_pointer","","",74,[[["self"],["cputype"]],[["result",["u64"]],["u64"]]]],[11,"new","","",77,[[],["self"]]],[11,"new","","",78,[[],["self"]]],[11,"new","","",91,[[["bool"]],["self"]]],[11,"cmdsize","","",101,[[["self"]],["usize"]]],[11,"cmd","","",101,[[["self"]],["u32"]]],[11,"parse","","Parse a load command from `bytes` at `offset` with the…",100,[[["endian"],["usize"]],["result"]]],[0,"relocation","goblin::mach","",null,null],[3,"RelocationInfo","goblin::mach::relocation","",null,null],[12,"r_address","","Offset in the section to what is being relocated",102,null],[12,"r_info","","Contains all of the relocation info as a bitfield.…",102,null],[5,"reloc_to_str","","",null,[[["cputype"],["reloctype"]],["str"]]],[6,"RelocType","","",null,null],[17,"SIZEOF_RELOCATION_INFO","","",null,null],[17,"R_ABS","","Absolute relocation type for Mach-O files",null,null],[17,"X86_64_RELOC_UNSIGNED","","Absolute address",null,null],[17,"X86_64_RELOC_SIGNED","","Signed 32-bit displacement",null,null],[17,"X86_64_RELOC_BRANCH","","A CALL/JMP instruction with 32-bit displacement",null,null],[17,"X86_64_RELOC_GOT_LOAD","","A MOVQ load of a GOT entry",null,null],[17,"X86_64_RELOC_GOT","","Other GOT references",null,null],[17,"X86_64_RELOC_SUBTRACTOR","","Must be followed by a X86_64_RELOC_UNSIGNED relocation",null,null],[17,"X86_64_RELOC_SIGNED_1","","for signed 32-bit displacement with a -1 addend",null,null],[17,"X86_64_RELOC_SIGNED_2","","for signed 32-bit displacement with a -2 addend",null,null],[17,"X86_64_RELOC_SIGNED_4","","for signed 32-bit displacement with a -4 addend",null,null],[17,"X86_64_RELOC_TLV","","for thread local variables",null,null],[17,"GENERIC_RELOC_VANILLA","","",null,null],[17,"GENERIC_RELOC_PAIR","","",null,null],[17,"GENERIC_RELOC_SECTDIFF","","",null,null],[17,"GENERIC_RELOC_PB_LA_PTR","","",null,null],[17,"GENERIC_RELOC_LOCAL_SECTDIFF","","",null,null],[17,"GENERIC_RELOC_TLV","","",null,null],[17,"ARM_RELOC_VANILLA","","",null,null],[17,"ARM_RELOC_PAIR","","",null,null],[17,"ARM_RELOC_SECTDIFF","","",null,null],[17,"ARM_RELOC_LOCAL_SECTDIFF","","",null,null],[17,"ARM_RELOC_PB_LA_PTR","","",null,null],[17,"ARM_RELOC_BR24","","",null,null],[17,"ARM_THUMB_RELOC_BR22","","",null,null],[17,"ARM_THUMB_32BIT_BRANCH","","Obsolete",null,null],[17,"ARM_RELOC_HALF","","",null,null],[17,"ARM_RELOC_HALF_SECTDIFF","","",null,null],[17,"ARM64_RELOC_UNSIGNED","","For pointers.",null,null],[17,"ARM64_RELOC_SUBTRACTOR","","Must be followed by an ARM64_RELOC_UNSIGNED",null,null],[17,"ARM64_RELOC_BRANCH26","","A B/BL instruction with 26-bit displacement.",null,null],[17,"ARM64_RELOC_PAGE21","","PC-rel distance to page of target.",null,null],[17,"ARM64_RELOC_PAGEOFF12","","Offset within page, scaled by r_length.",null,null],[17,"ARM64_RELOC_GOT_LOAD_PAGE21","","PC-rel distance to page of GOT slot.",null,null],[17,"ARM64_RELOC_GOT_LOAD_PAGEOFF12","","Offset within page of GOT slot, scaled by r_length.",null,null],[17,"ARM64_RELOC_POINTER_TO_GOT","","For pointers to GOT slots.",null,null],[17,"ARM64_RELOC_TLVP_LOAD_PAGE21","","PC-rel distance to page of TLVP slot.",null,null],[17,"ARM64_RELOC_TLVP_LOAD_PAGEOFF12","","Offset within page of TLVP slot, scaled by r_length.",null,null],[17,"ARM64_RELOC_ADDEND","","Must be followed by ARM64_RELOC_PAGE21 or…",null,null],[11,"r_symbolnum","","Symbol index if `r_extern` == 1 or section ordinal if…",102,[[],["usize"]]],[11,"r_pcrel","","Was relocated pc relative already, 1 bit",102,[[],["u8"]]],[11,"r_length","","The length of the relocation, 0=byte, 1=word, 2=long,…",102,[[],["u8"]]],[11,"r_extern","","Does not include value of sym referenced, 1 bit",102,[[],["u8"]]],[11,"r_type","","Ff not 0, machine specific relocation type, in bits :4",102,[[],["u8"]]],[11,"is_extern","","If true, this relocation is for a symbol; if false, or a…",102,[[],["bool"]]],[11,"is_pic","","If true, this is a PIC relocation",102,[[],["bool"]]],[11,"to_str","","Returns a string representation of this relocation, given…",102,[[["cputype"]],["str"]]],[0,"segment","goblin::mach","",null,null],[3,"RelocationIterator","goblin::mach::segment","",null,null],[3,"Section","","Generalized 32/64 bit Section",null,null],[12,"sectname","","name of this section",103,null],[12,"segname","","segment this section goes in",103,null],[12,"addr","","memory address of this section",103,null],[12,"size","","size in bytes of this section",103,null],[12,"offset","","file offset of this section",103,null],[12,"align","","section alignment (power of 2)",103,null],[12,"reloff","","file offset of relocation entries",103,null],[12,"nreloc","","number of relocation entries",103,null],[12,"flags","","flags (section type and attributes",103,null],[3,"SectionIterator","","",null,null],[3,"Segment","","Generalized 32/64 bit Segment Command",null,null],[12,"cmd","","",104,null],[12,"cmdsize","","",104,null],[12,"segname","","",104,null],[12,"vmaddr","","",104,null],[12,"vmsize","","",104,null],[12,"fileoff","","",104,null],[12,"filesize","","",104,null],[12,"maxprot","","",104,null],[12,"initprot","","",104,null],[12,"nsects","","",104,null],[12,"flags","","",104,null],[12,"data","","",104,null],[3,"Segments","","An opaque 32/64-bit container for Mach-o segments",null,null],[6,"SectionData","","",null,null],[11,"name","","The name of this section",103,[[["self"]],[["result",["str"]],["str"]]]],[11,"segname","","The containing segment's name",103,[[["self"]],[["result",["str"]],["str"]]]],[11,"iter_relocations","","Iterate this sections relocations given `data`; `data`…",103,[[["ctx"],["self"]],["relocationiterator"]]],[11,"new","","Create a new, blank segment, with cmd either…",104,[[["ctx"]],["self"]]],[11,"name","","Get the name of this segment",104,[[["self"]],[["result",["str"]],["str"]]]],[11,"sections","","Get the sections from this segment, erroring if any…",104,[[["self"]],[["result",["vec"]],["vec"]]]],[11,"from_32","","Convert the raw C 32-bit segment command to a generalized…",104,[[["usize"],["segmentcommand32"],["ctx"]],[["error"],["result",["error"]]]]],[11,"from_64","","Convert the raw C 64-bit segment command to a generalized…",104,[[["segmentcommand64"],["usize"],["ctx"]],[["error"],["result",["error"]]]]],[11,"new","","Construct a new generalized segment container from this…",105,[[["ctx"]],["self"]]],[11,"sections","","Get every section from every segment",105,[[["self"]],[["iterator"],["box",["iterator"]]]]],[0,"symbols","goblin::mach","\"Nlist\" style symbols in this binary - beware, like most…",null,null],[3,"Nlist32","goblin::mach::symbols","",null,null],[12,"n_strx","","index into the string table",106,null],[12,"n_type","","type flag, see below",106,null],[12,"n_sect","","section number or NO_SECT",106,null],[12,"n_desc","","see <mach-o/stab.h>",106,null],[12,"n_value","","value of this symbol (or stab offset)",106,null],[3,"Nlist64","","",null,null],[12,"n_strx","","index into the string table",107,null],[12,"n_type","","type flag, see below",107,null],[12,"n_sect","","section number or NO_SECT",107,null],[12,"n_desc","","see <mach-o/stab.h>",107,null],[12,"n_value","","value of this symbol (or stab offset)",107,null],[3,"Nlist","","",null,null],[12,"n_strx","","index into the string table",108,null],[12,"n_type","","type flag, see below",108,null],[12,"n_sect","","section number or NO_SECT",108,null],[12,"n_desc","","see <mach-o/stab.h>",108,null],[12,"n_value","","value of this symbol (or stab offset)",108,null],[3,"SymbolsCtx","","",null,null],[12,"nsyms","","",109,null],[12,"strtab","","",109,null],[12,"ctx","","",109,null],[3,"SymbolIterator","","",null,null],[3,"Symbols","","A zero-copy \"nlist\" style symbol table (\"stab\"), including…",null,null],[5,"n_type_to_str","","",null,[[["u8"]],["str"]]],[17,"N_STAB","","if any of these bits set, a symbolic debugging entry",null,null],[17,"N_PEXT","","private external symbol bit",null,null],[17,"N_TYPE","","mask for the type bits",null,null],[17,"N_EXT","","external symbol bit, set for external symbols",null,null],[17,"NO_SECT","","symbol is not in any section",null,null],[17,"MAX_SECT","","1 thru 255 inclusive",null,null],[17,"N_UNDF","","undefined, n_sect == NO_SECT",null,null],[17,"N_ABS","","absolute, n_sect == NO_SECT",null,null],[17,"N_SECT","","defined in section number n_sect",null,null],[17,"N_PBUD","","prebound undefined (defined in a dylib)",null,null],[17,"N_INDR","","indirect",null,null],[17,"N_GSYM","","",null,null],[17,"N_FNAME","","",null,null],[17,"N_FUN","","",null,null],[17,"N_STSYM","","",null,null],[17,"N_LCSYM","","",null,null],[17,"N_BNSYM","","",null,null],[17,"N_PC","","",null,null],[17,"N_AST","","",null,null],[17,"N_OPT","","",null,null],[17,"N_RSYM","","",null,null],[17,"N_SLINE","","",null,null],[17,"N_ENSYM","","",null,null],[17,"N_SSYM","","",null,null],[17,"N_SO","","",null,null],[17,"N_OSO","","",null,null],[17,"N_LSYM","","",null,null],[17,"N_BINCL","","",null,null],[17,"N_SOL","","",null,null],[17,"N_PARAMS","","",null,null],[17,"N_VERSION","","",null,null],[17,"N_OLEVEL","","",null,null],[17,"N_PSYM","","",null,null],[17,"N_EINCL","","",null,null],[17,"N_ENTRY","","",null,null],[17,"N_LBRAC","","",null,null],[17,"N_EXCL","","",null,null],[17,"N_RBRAC","","",null,null],[17,"N_BCOMM","","",null,null],[17,"N_ECOMM","","",null,null],[17,"N_ECOML","","",null,null],[17,"N_LENG","","",null,null],[17,"NLIST_TYPE_MASK","","",null,null],[17,"NLIST_TYPE_GLOBAL","","",null,null],[17,"NLIST_TYPE_LOCAL","","",null,null],[17,"REFERENCE_TYPE","","Mask for reference flags of `n_desc` field.",null,null],[17,"REFERENCE_FLAG_UNDEFINED_NON_LAZY","","This symbol is a reference to an external non-lazy (data)…",null,null],[17,"REFERENCE_FLAG_UNDEFINED_LAZY","","This symbol is a reference to an external lazy symbol—that…",null,null],[17,"REFERENCE_FLAG_DEFINED","","This symbol is defined in this module.",null,null],[17,"REFERENCE_FLAG_PRIVATE_DEFINED","","This symbol is defined in this module and is visible only…",null,null],[17,"REFERENCE_FLAG_PRIVATE_UNDEFINED_NON_LAZY","","This symbol is defined in another module in this file, is…",null,null],[17,"REFERENCE_FLAG_PRIVATE_UNDEFINED_LAZY","","This symbol is defined in another module in this file, is…",null,null],[17,"REFERENCED_DYNAMICALLY","","Must be set for any defined symbol that is referenced by…",null,null],[17,"N_DESC_DISCARDED","","Sometimes used by the dynamic linker at runtime in a fully…",null,null],[17,"N_NO_DEAD_STRIP","","When set in a relocatable object file (file type…",null,null],[17,"N_WEAK_REF","","Indicates that this undefined symbol is a weak reference.…",null,null],[17,"N_WEAK_DEF","","Indicates that this symbol is a weak definition. If the…",null,null],[17,"SIZEOF_NLIST_32","","",null,null],[17,"SIZEOF_NLIST_64","","",null,null],[11,"get_type","","Gets this symbol's type in bits 0xe",108,[[["self"]],["u8"]]],[11,"type_str","","Gets the str representation of the type of this symbol",108,[[["self"]],["str"]]],[11,"is_global","","Whether this symbol is global or not",108,[[["self"]],["bool"]]],[11,"is_weak","","Whether this symbol is weak or not",108,[[["self"]],["bool"]]],[11,"is_undefined","","Whether this symbol is undefined or not",108,[[["self"]],["bool"]]],[11,"is_stab","","Whether this symbol is a symbolic debugging entry",108,[[["self"]],["bool"]]],[11,"new","","Creates a new symbol table with `count` elements, from the…",110,[[["usize"]],[["result",["symbols"]],["symbols"]]]],[11,"parse","","",110,[[["symtabcommand"],["ctx"]],[["result",["symbols"]],["symbols"]]]],[11,"iter","","",110,[[["self"]],["symboliterator"]]],[11,"get","","Parses a single Nlist symbol from the binary, with its…",110,[[["self"],["usize"]],["result"]]],[11,"is_object_file","goblin::mach","Is this a relocatable object file?",45,[[["self"]],["bool"]]],[11,"symbols","","Return an iterator over all the symbols in this binary",45,[[["self"]],["symboliterator"]]],[11,"relocations","","Return a vector of the relocations in this binary",45,[[["self"]],[["result",["vec"]],["vec"]]]],[11,"exports","","Return the exported symbols in this binary (if any)",45,[[["self"]],[["vec",["export"]],["result",["vec"]]]]],[11,"imports","","Return the imported symbols in this binary that dyld knows…",45,[[["self"]],[["vec",["import"]],["result",["vec"]]]]],[11,"parse","","Parses the Mach-o binary from `bytes` at `offset`",45,[[["usize"]],[["macho"],["result",["macho"]]]]],[11,"new","","Lazily construct `Self`",46,[[],["result"]]],[11,"iter_arches","","Iterate every fat arch header",46,[[["self"]],["fatarchiterator"]]],[11,"arches","","Return all the architectures in this binary",46,[[["self"]],[["result",["vec"]],["vec",["fatarch"]]]]],[11,"get","","Try to get the Mach-o binary at `index`",46,[[["self"],["usize"]],[["macho"],["result",["macho"]]]]],[11,"find","","",46,[[["self"],["fn"]],[["option",["result"]],["result",["macho"]]]]],[11,"find_cputype","","Try and find the `cputype` in `Self`, if there is one",46,[[["u32"],["self"]],[["option",["fatarch"]],["result",["option"]]]]],[11,"parse","","Parse from `bytes` either a multi-arch binary or a regular…",47,[[],["result"]]],[0,"pe","goblin","A PE32 and PE32+ parser",null,null],[3,"PE","goblin::pe","An analyzed PE32/PE32+ binary",null,null],[12,"header","","The PE header",111,null],[12,"sections","","A list of the sections in this PE binary",111,null],[12,"size","","The size of the binary",111,null],[12,"name","","The name of this `dll`, if it has one",111,null],[12,"is_lib","","Whether this is a `dll` or not",111,null],[12,"is_64","","Whether the binary is 64-bit (PE32+)",111,null],[12,"entry","","the entry point of the binary",111,null],[12,"image_base","","The binary's RVA, or image base - useful for computing…",111,null],[12,"export_data","","Data about any exported symbols in this binary (e.g., if…",111,null],[12,"import_data","","Data for any imported symbols, and from which `dll`, etc.,…",111,null],[12,"exports","","The list of exported symbols in this binary, contains…",111,null],[12,"imports","","The list symbols imported by this binary from other `dll`s",111,null],[12,"libraries","","The list of libraries which this binary imports symbols from",111,null],[12,"debug_data","","Debug information, if any, contained in the PE header",111,null],[12,"exception_data","","Exception handling and stack unwind information, if any,…",111,null],[3,"Coff","","An analyzed COFF object",null,null],[12,"header","","The COFF header",112,null],[12,"sections","","A list of the sections in this COFF binary",112,null],[12,"symbols","","The COFF symbol table.",112,null],[12,"strings","","The string table.",112,null],[0,"characteristic","","",null,null],[5,"is_dll","goblin::pe::characteristic","",null,[[["u16"]],["bool"]]],[5,"is_exe","","",null,[[["u16"]],["bool"]]],[17,"IMAGE_FILE_RELOCS_STRIPPED","","",null,null],[17,"IMAGE_FILE_EXECUTABLE_IMAGE","","",null,null],[17,"IMAGE_FILE_LINE_NUMS_STRIPPED","","",null,null],[17,"IMAGE_FILE_LOCAL_SYMS_STRIPPED","","",null,null],[17,"IMAGE_FILE_AGGRESSIVE_WS_TRIM","","",null,null],[17,"IMAGE_FILE_LARGE_ADDRESS_AWARE","","",null,null],[17,"RESERVED","","",null,null],[17,"IMAGE_FILE_BYTES_REVERSED_LO","","",null,null],[17,"IMAGE_FILE_32BIT_MACHINE","","",null,null],[17,"IMAGE_FILE_DEBUG_STRIPPED","","",null,null],[17,"IMAGE_FILE_REMOVABLE_RUN_FROM_SWAP","","",null,null],[17,"IMAGE_FILE_NET_RUN_FROM_SWAP","","",null,null],[17,"IMAGE_FILE_SYSTEM","","",null,null],[17,"IMAGE_FILE_DLL","","",null,null],[17,"IMAGE_FILE_UP_SYSTEM_ONLY","","",null,null],[17,"IMAGE_FILE_BYTES_REVERSED_HI","","",null,null],[0,"data_directories","goblin::pe","",null,null],[3,"DataDirectory","goblin::pe::data_directories","",null,null],[12,"virtual_address","","",113,null],[12,"size","","",113,null],[3,"DataDirectories","","",null,null],[12,"data_directories","","",114,null],[17,"SIZEOF_DATA_DIRECTORY","","",null,null],[11,"parse","","",113,[[["usize"]],["result"]]],[11,"parse","","",114,[[["usize"],["usize"]],["result"]]],[11,"get_export_table","","",114,[[["self"]],["option"]]],[11,"get_import_table","","",114,[[["self"]],["option"]]],[11,"get_resource_table","","",114,[[["self"]],["option"]]],[11,"get_exception_table","","",114,[[["self"]],["option"]]],[11,"get_certificate_table","","",114,[[["self"]],["option"]]],[11,"get_base_relocation_table","","",114,[[["self"]],["option"]]],[11,"get_debug_table","","",114,[[["self"]],["option"]]],[11,"get_architecture","","",114,[[["self"]],["option"]]],[11,"get_global_ptr","","",114,[[["self"]],["option"]]],[11,"get_tls_table","","",114,[[["self"]],["option"]]],[11,"get_load_config_table","","",114,[[["self"]],["option"]]],[11,"get_bound_import_table","","",114,[[["self"]],["option"]]],[11,"get_import_address_table","","",114,[[["self"]],["option"]]],[11,"get_delay_import_descriptor","","",114,[[["self"]],["option"]]],[11,"get_clr_runtime_header","","",114,[[["self"]],["option"]]],[0,"debug","goblin::pe","",null,null],[3,"DebugData","goblin::pe::debug","",null,null],[12,"image_debug_directory","","",115,null],[12,"codeview_pdb70_debug_info","","",115,null],[3,"ImageDebugDirectory","","",null,null],[12,"characteristics","","",116,null],[12,"time_date_stamp","","",116,null],[12,"major_version","","",116,null],[12,"minor_version","","",116,null],[12,"data_type","","",116,null],[12,"size_of_data","","",116,null],[12,"address_of_raw_data","","",116,null],[12,"pointer_to_raw_data","","",116,null],[3,"CodeviewPDB70DebugInfo","","",null,null],[12,"codeview_signature","","",117,null],[12,"signature","","",117,null],[12,"age","","",117,null],[12,"filename","","",117,null],[17,"IMAGE_DEBUG_TYPE_UNKNOWN","","",null,null],[17,"IMAGE_DEBUG_TYPE_COFF","","",null,null],[17,"IMAGE_DEBUG_TYPE_CODEVIEW","","",null,null],[17,"IMAGE_DEBUG_TYPE_FPO","","",null,null],[17,"IMAGE_DEBUG_TYPE_MISC","","",null,null],[17,"IMAGE_DEBUG_TYPE_EXCEPTION","","",null,null],[17,"IMAGE_DEBUG_TYPE_FIXUP","","",null,null],[17,"IMAGE_DEBUG_TYPE_BORLAND","","",null,null],[17,"CODEVIEW_PDB70_MAGIC","","",null,null],[17,"CODEVIEW_PDB20_MAGIC","","",null,null],[17,"CODEVIEW_CV50_MAGIC","","",null,null],[17,"CODEVIEW_CV41_MAGIC","","",null,null],[11,"parse","","",115,[[["datadirectory"],["u32"]],["result"]]],[11,"guid","","Return this executable's debugging GUID, suitable for…",115,[[["self"]],["option"]]],[11,"parse","","",117,[[["imagedebugdirectory"]],[["option"],["result",["option"]]]]],[0,"exception","goblin::pe","Exception handling and stack unwinding for x64.",null,null],[3,"RuntimeFunction","goblin::pe::exception","An unwind entry for a range of a function.",null,null],[12,"begin_address","","Function start address.",118,null],[12,"end_address","","Function end address.",118,null],[12,"unwind_info_address","","Unwind info address.",118,null],[3,"RuntimeFunctionIterator","","Iterator over runtime function entries in `ExceptionData`.",null,null],[3,"Register","","An x64 register used during unwinding.",null,null],[12,"0","","",119,null],[3,"UnwindCode","","An unwind operation that is executed at a particular place…",null,null],[12,"code_offset","","Offset of the corresponding instruction in the function…",120,null],[12,"operation","","The operation that was performed by the code in the prolog.",120,null],[3,"UnwindCodeIterator","","An iterator over unwind codes for a function or part of a…",null,null],[3,"UnwindInfo","","Unwind information for a function or portion of a function.",null,null],[12,"version","","Version of this unwind info.",121,null],[12,"size_of_prolog","","Length of the function prolog in bytes.",121,null],[12,"frame_register","","The nonvolatile register used as the frame pointer of this…",121,null],[12,"frame_register_offset","","Offset from RSP that is applied to the FP register when it…",121,null],[12,"chained_info","","A record pointing to chained unwind information.",121,null],[12,"handler","","An exception or termination handler called as part of the…",121,null],[3,"ExceptionData","","Exception handling and stack unwind information for…",null,null],[4,"StackFrameOffset","","An unsigned offset to a value in the local stack frame.",null,null],[13,"RSP","","Offset from the current RSP, that is, the lowest address…",122,null],[13,"FP","","Offset from the value of the frame pointer register.",122,null],[4,"UnwindOperation","","An unwind operation corresponding to code in the function…",null,null],[13,"PushNonVolatile","","Push a nonvolatile integer register, decrementing `RSP` by…",123,null],[13,"Alloc","","Allocate a fixed-size area on the stack.",123,null],[13,"SetFPRegister","","Establish the frame pointer register by setting the…",123,null],[13,"SaveNonVolatile","","Save a nonvolatile integer register on the stack using a…",123,null],[13,"SaveXMM","","Save the lower 64 bits of a nonvolatile XMM register on…",123,null],[13,"Epilog","","Describes the function epilog.",123,null],[13,"SaveXMM128","","Save all 128 bits of a nonvolatile XMM register on the…",123,null],[13,"PushMachineFrame","","Push a machine frame. This is used to record the effect of…",123,null],[13,"Noop","","A reserved operation without effect.",123,null],[4,"UnwindHandler","","A language-specific handler that is called as part of the…",null,null],[13,"ExceptionHandler","","The image-relative address of an exception handler and its…",124,null],[13,"TerminationHandler","","The image-relative address of a termination handler and…",124,null],[11,"name","","Returns the x64 register name.",119,[[],["str"]]],[11,"parse","","Parses unwind information from the image at the given…",121,[[["usize"]],["result"]]],[11,"unwind_codes","","Returns an iterator over unwind codes in this unwind info.",121,[[["self"]],["unwindcodeiterator"]]],[11,"parse","","Parses exception data from the image at the given offset.",125,[[["datadirectory"],["u32"]],["result"]]],[11,"len","","The number of function entries described by this exception…",125,[[["self"]],["usize"]]],[11,"is_empty","","Indicating whether there are functions in this entry.",125,[[["self"]],["bool"]]],[11,"functions","","Iterates all function entries in order of their code offset.",125,[[["self"]],["runtimefunctioniterator"]]],[11,"get_function","","Returns the function at the given index.",125,[[["self"],["usize"]],[["result",["runtimefunction"]],["runtimefunction"]]]],[11,"find_function","","Performs a binary search to find a function entry covering…",125,[[["u32"],["self"]],[["option",["runtimefunction"]],["result",["option"]]]]],[11,"get_unwind_info","","Resolves unwind information for the given function entry.",125,[[["self"],["runtimefunction"]],[["unwindinfo"],["result",["unwindinfo"]]]]],[0,"export","goblin::pe","",null,null],[3,"ExportDirectoryTable","goblin::pe::export","",null,null],[12,"export_flags","","",126,null],[12,"time_date_stamp","","",126,null],[12,"major_version","","",126,null],[12,"minor_version","","",126,null],[12,"name_rva","","",126,null],[12,"ordinal_base","","",126,null],[12,"address_table_entries","","",126,null],[12,"number_of_name_pointers","","",126,null],[12,"export_address_table_rva","","",126,null],[12,"name_pointer_rva","","",126,null],[12,"ordinal_table_rva","","",126,null],[3,"ExportData","","Export data contains the `dll` name which other libraries…",null,null],[12,"name","","",127,null],[12,"export_directory_table","","",127,null],[12,"export_name_pointer_table","","",127,null],[12,"export_ordinal_table","","",127,null],[12,"export_address_table","","",127,null],[3,"Export","","An exported symbol in this binary, contains synthetic data…",null,null],[12,"name","","",128,null],[12,"offset","","",128,null],[12,"rva","","",128,null],[12,"size","","",128,null],[12,"reexport","","",128,null],[4,"ExportAddressTableEntry","","",null,null],[13,"ExportRVA","","",129,null],[13,"ForwarderRVA","","",129,null],[4,"Reexport","","PE binaries have two kinds of reexports, either specifying…",null,null],[13,"DLLName","","",130,null],[12,"export","goblin::pe::export::Reexport","",130,null],[12,"lib","","",130,null],[13,"DLLOrdinal","goblin::pe::export","",130,null],[12,"ordinal","goblin::pe::export::Reexport","",130,null],[12,"lib","","",130,null],[6,"ExportAddressTable","goblin::pe::export","",null,null],[6,"ExportNamePointerTable","","Array of rvas into the export name table",null,null],[6,"ExportOrdinalTable","","Array of indexes into the export address table.",null,null],[17,"SIZEOF_EXPORT_DIRECTORY_TABLE","","",null,null],[17,"SIZEOF_EXPORT_ADDRESS_TABLE_ENTRY","","",null,null],[11,"parse","","",126,[[["usize"]],["result"]]],[11,"parse","","",127,[[["datadirectory"],["u32"]],[["result",["exportdata"]],["exportdata"]]]],[11,"parse","","",130,[[["usize"]],[["result",["reexport"]],["reexport"]]]],[11,"parse","","",128,[[["exportdata"],["u32"]],[["result",["vec"]],["vec",["export"]]]]],[0,"header","goblin::pe","",null,null],[3,"DosHeader","goblin::pe::header","DOS header present in all PE binaries",null,null],[12,"signature","","Magic number: 5a4d",131,null],[12,"pe_pointer","","Pointer to PE header, always at offset 0x3c",131,null],[3,"CoffHeader","","COFF Header",null,null],[12,"machine","","The machine type",132,null],[12,"number_of_sections","","",132,null],[12,"time_date_stamp","","",132,null],[12,"pointer_to_symbol_table","","",132,null],[12,"number_of_symbol_table","","",132,null],[12,"size_of_optional_header","","",132,null],[12,"characteristics","","",132,null],[3,"Header","","",null,null],[12,"dos_header","","",133,null],[12,"signature","","PE Magic: PE\\0\\0, little endian",133,null],[12,"coff_header","","",133,null],[12,"optional_header","","",133,null],[17,"DOS_MAGIC","","",null,null],[17,"PE_POINTER_OFFSET","","",null,null],[17,"SIZEOF_COFF_HEADER","","",null,null],[17,"PE_MAGIC","","PE\\0\\0, little endian",null,null],[17,"SIZEOF_PE_MAGIC","","",null,null],[17,"COFF_MACHINE_X86","","",null,null],[17,"COFF_MACHINE_X86_64","","",null,null],[11,"parse","","",131,[[],["result"]]],[11,"parse","","",132,[[["usize"]],["result"]]],[11,"sections","","Parse the COFF section headers.",132,[[["self"],["usize"]],[["vec",["sectiontable"]],["result",["vec"]]]]],[11,"symbols","","Return the COFF symbol table.",132,[[["self"]],[["symboltable"],["result",["symboltable"]]]]],[11,"strings","","Return the COFF string table.",132,[[["self"]],[["result",["strtab"]],["strtab"]]]],[11,"parse","","",133,[[],["result"]]],[0,"import","goblin::pe","",null,null],[3,"HintNameTableEntry","goblin::pe::import","",null,null],[12,"hint","","",134,null],[12,"name","","",134,null],[3,"ImportDirectoryEntry","","",null,null],[12,"import_lookup_table_rva","","",135,null],[12,"time_date_stamp","","",135,null],[12,"forwarder_chain","","",135,null],[12,"name_rva","","",135,null],[12,"import_address_table_rva","","",135,null],[3,"SyntheticImportDirectoryEntry","","",null,null],[12,"import_directory_entry","","",136,null],[12,"name","","Computed",136,null],[12,"import_lookup_table","","The import lookup table is a vector of either ordinals, or…",136,null],[12,"import_address_table","","Computed",136,null],[3,"ImportData","","Contains a list of synthesized import data for this…",null,null],[12,"import_data","","",137,null],[3,"Import","","A synthesized symbol import, the name is pre-indexed, and…",null,null],[12,"name","","",138,null],[12,"dll","","",138,null],[12,"ordinal","","",138,null],[12,"offset","","",138,null],[12,"rva","","",138,null],[12,"size","","",138,null],[4,"SyntheticImportLookupTableEntry","","",null,null],[13,"OrdinalNumber","","",139,null],[13,"HintNameTableRVA","","",139,null],[6,"ImportLookupTable","","",null,null],[6,"ImportAddressTable","","",null,null],[17,"IMPORT_BY_ORDINAL_32","","",null,null],[17,"IMPORT_BY_ORDINAL_64","","",null,null],[17,"IMPORT_RVA_MASK_32","","",null,null],[17,"IMPORT_RVA_MASK_64","","",null,null],[17,"SIZEOF_IMPORT_DIRECTORY_ENTRY","","",null,null],[8,"Bitfield","","",null,null],[10,"is_ordinal","","",140,[[["self"]],["bool"]]],[10,"to_ordinal","","",140,[[["self"]],["u16"]]],[10,"to_rva","","",140,[[["self"]],["u32"]]],[10,"size_of","","",140,[[],["usize"]]],[10,"is_zero","","",140,[[["self"]],["bool"]]],[11,"parse","","",139,[[["u32"],["usize"]],[["result",["importlookuptable"]],["importlookuptable"]]]],[11,"is_null","","",135,[[["self"]],["bool"]]],[11,"parse","","",136,[[["u32"],["importdirectoryentry"]],[["syntheticimportdirectoryentry"],["result",["syntheticimportdirectoryentry"]]]]],[11,"parse","","",137,[[["datadirectory"],["u32"]],[["importdata"],["result",["importdata"]]]]],[11,"parse","","",138,[[["importdata"]],[["result",["vec"]],["vec",["import"]]]]],[0,"optional_header","goblin::pe","",null,null],[3,"StandardFields32","goblin::pe::optional_header","standard COFF fields",null,null],[12,"magic","","",141,null],[12,"major_linker_version","","",141,null],[12,"minor_linker_version","","",141,null],[12,"size_of_code","","",141,null],[12,"size_of_initialized_data","","",141,null],[12,"size_of_uninitialized_data","","",141,null],[12,"address_of_entry_point","","",141,null],[12,"base_of_code","","",141,null],[12,"base_of_data","","absent in 64-bit PE32+",141,null],[3,"StandardFields64","","standard 64-bit COFF fields",null,null],[12,"magic","","",142,null],[12,"major_linker_version","","",142,null],[12,"minor_linker_version","","",142,null],[12,"size_of_code","","",142,null],[12,"size_of_initialized_data","","",142,null],[12,"size_of_uninitialized_data","","",142,null],[12,"address_of_entry_point","","",142,null],[12,"base_of_code","","",142,null],[3,"StandardFields","","Unified 32/64-bit COFF fields",null,null],[12,"magic","","",143,null],[12,"major_linker_version","","",143,null],[12,"minor_linker_version","","",143,null],[12,"size_of_code","","",143,null],[12,"size_of_initialized_data","","",143,null],[12,"size_of_uninitialized_data","","",143,null],[12,"address_of_entry_point","","",143,null],[12,"base_of_code","","",143,null],[12,"base_of_data","","absent in 64-bit PE32+",143,null],[3,"WindowsFields32","","Windows specific fields",null,null],[12,"image_base","","",144,null],[12,"section_alignment","","",144,null],[12,"file_alignment","","",144,null],[12,"major_operating_system_version","","",144,null],[12,"minor_operating_system_version","","",144,null],[12,"major_image_version","","",144,null],[12,"minor_image_version","","",144,null],[12,"major_subsystem_version","","",144,null],[12,"minor_subsystem_version","","",144,null],[12,"win32_version_value","","",144,null],[12,"size_of_image","","",144,null],[12,"size_of_headers","","",144,null],[12,"check_sum","","",144,null],[12,"subsystem","","",144,null],[12,"dll_characteristics","","",144,null],[12,"size_of_stack_reserve","","",144,null],[12,"size_of_stack_commit","","",144,null],[12,"size_of_heap_reserve","","",144,null],[12,"size_of_heap_commit","","",144,null],[12,"loader_flags","","",144,null],[12,"number_of_rva_and_sizes","","",144,null],[3,"WindowsFields64","","64-bit Windows specific fields",null,null],[12,"image_base","","",145,null],[12,"section_alignment","","",145,null],[12,"file_alignment","","",145,null],[12,"major_operating_system_version","","",145,null],[12,"minor_operating_system_version","","",145,null],[12,"major_image_version","","",145,null],[12,"minor_image_version","","",145,null],[12,"major_subsystem_version","","",145,null],[12,"minor_subsystem_version","","",145,null],[12,"win32_version_value","","",145,null],[12,"size_of_image","","",145,null],[12,"size_of_headers","","",145,null],[12,"check_sum","","",145,null],[12,"subsystem","","",145,null],[12,"dll_characteristics","","",145,null],[12,"size_of_stack_reserve","","",145,null],[12,"size_of_stack_commit","","",145,null],[12,"size_of_heap_reserve","","",145,null],[12,"size_of_heap_commit","","",145,null],[12,"loader_flags","","",145,null],[12,"number_of_rva_and_sizes","","",145,null],[3,"OptionalHeader","","",null,null],[12,"standard_fields","","",146,null],[12,"windows_fields","","",146,null],[12,"data_directories","","",146,null],[6,"WindowsFields","","",null,null],[17,"SIZEOF_STANDARD_FIELDS_32","","",null,null],[17,"SIZEOF_STANDARD_FIELDS_64","","",null,null],[17,"MAGIC_32","","Standard fields magic number for 32-bit binary",null,null],[17,"MAGIC_64","","Standard fields magic number for 64-bit binary",null,null],[17,"SIZEOF_WINDOWS_FIELDS_32","","",null,null],[17,"SIZEOF_WINDOWS_FIELDS_64","","",null,null],[11,"container","","",146,[[["self"]],[["result",["container"]],["container"]]]],[0,"relocation","goblin::pe","",null,null],[3,"Relocation","goblin::pe::relocation","A COFF relocation.",null,null],[12,"virtual_address","","The address of the item to which relocation is applied.",147,null],[12,"symbol_table_index","","A zero-based index into the symbol table.",147,null],[12,"typ","","A value that indicates the kind of relocation that should…",147,null],[3,"Relocations","","An iterator for COFF relocations.",null,null],[17,"COFF_RELOCATION_SIZE","","Size of a single COFF relocation.",null,null],[17,"IMAGE_REL_I386_ABSOLUTE","","The relocation is ignored.",null,null],[17,"IMAGE_REL_I386_DIR16","","Not supported.",null,null],[17,"IMAGE_REL_I386_REL16","","Not supported.",null,null],[17,"IMAGE_REL_I386_DIR32","","The target's 32-bit VA.",null,null],[17,"IMAGE_REL_I386_DIR32NB","","The target's 32-bit RVA.",null,null],[17,"IMAGE_REL_I386_SEG12","","Not supported.",null,null],[17,"IMAGE_REL_I386_SECTION","","The 16-bit section index of the section that contains the…",null,null],[17,"IMAGE_REL_I386_SECREL","","The 32-bit offset of the target from the beginning of its…",null,null],[17,"IMAGE_REL_I386_TOKEN","","The CLR token.",null,null],[17,"IMAGE_REL_I386_SECREL7","","A 7-bit offset from the base of the section that contains…",null,null],[17,"IMAGE_REL_I386_REL32","","The 32-bit relative displacement to the target.",null,null],[17,"IMAGE_REL_AMD64_ABSOLUTE","","The relocation is ignored.",null,null],[17,"IMAGE_REL_AMD64_ADDR64","","The 64-bit VA of the relocation target.",null,null],[17,"IMAGE_REL_AMD64_ADDR32","","The 32-bit VA of the relocation target.",null,null],[17,"IMAGE_REL_AMD64_ADDR32NB","","The 32-bit address without an image base (RVA).",null,null],[17,"IMAGE_REL_AMD64_REL32","","The 32-bit relative address from the byte following the…",null,null],[17,"IMAGE_REL_AMD64_REL32_1","","The 32-bit address relative to byte distance 1 from the…",null,null],[17,"IMAGE_REL_AMD64_REL32_2","","The 32-bit address relative to byte distance 2 from the…",null,null],[17,"IMAGE_REL_AMD64_REL32_3","","The 32-bit address relative to byte distance 3 from the…",null,null],[17,"IMAGE_REL_AMD64_REL32_4","","The 32-bit address relative to byte distance 4 from the…",null,null],[17,"IMAGE_REL_AMD64_REL32_5","","The 32-bit address relative to byte distance 5 from the…",null,null],[17,"IMAGE_REL_AMD64_SECTION","","The 16-bit section index of the section that contains the…",null,null],[17,"IMAGE_REL_AMD64_SECREL","","The 32-bit offset of the target from the beginning of its…",null,null],[17,"IMAGE_REL_AMD64_SECREL7","","A 7-bit unsigned offset from the base of the section that…",null,null],[17,"IMAGE_REL_AMD64_TOKEN","","CLR tokens.",null,null],[17,"IMAGE_REL_AMD64_SREL32","","A 32-bit signed span-dependent value emitted into the…",null,null],[17,"IMAGE_REL_AMD64_PAIR","","A pair that must immediately follow every span-dependent…",null,null],[17,"IMAGE_REL_AMD64_SSPAN32","","A 32-bit signed span-dependent value that is applied at…",null,null],[11,"parse","","Parse a COFF relocation table at the given offset.",148,[[["usize"]],[["relocations"],["result",["relocations"]]]]],[0,"section_table","goblin::pe","",null,null],[3,"SectionTable","goblin::pe::section_table","",null,null],[12,"name","","",149,null],[12,"real_name","","",149,null],[12,"virtual_size","","",149,null],[12,"virtual_address","","",149,null],[12,"size_of_raw_data","","",149,null],[12,"pointer_to_raw_data","","",149,null],[12,"pointer_to_relocations","","",149,null],[12,"pointer_to_linenumbers","","",149,null],[12,"number_of_relocations","","",149,null],[12,"number_of_linenumbers","","",149,null],[12,"characteristics","","",149,null],[17,"SIZEOF_SECTION_TABLE","","",null,null],[17,"IMAGE_SCN_TYPE_NO_PAD","","The section should not be padded to the next boundary.…",null,null],[17,"IMAGE_SCN_CNT_CODE","","The section contains executable code.",null,null],[17,"IMAGE_SCN_CNT_INITIALIZED_DATA","","The section contains initialized data.",null,null],[17,"IMAGE_SCN_CNT_UNINITIALIZED_DATA","","The section contains uninitialized data.",null,null],[17,"IMAGE_SCN_LNK_OTHER","","",null,null],[17,"IMAGE_SCN_LNK_INFO","","The section contains comments or other information. The…",null,null],[17,"IMAGE_SCN_LNK_REMOVE","","The section will not become part of the image. This is…",null,null],[17,"IMAGE_SCN_LNK_COMDAT","","The section contains COMDAT data. This is valid only for…",null,null],[17,"IMAGE_SCN_GPREL","","The section contains data referenced through the global…",null,null],[17,"IMAGE_SCN_MEM_PURGEABLE","","",null,null],[17,"IMAGE_SCN_MEM_16BIT","","",null,null],[17,"IMAGE_SCN_MEM_LOCKED","","",null,null],[17,"IMAGE_SCN_MEM_PRELOAD","","",null,null],[17,"IMAGE_SCN_ALIGN_1BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_2BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_4BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_8BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_16BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_32BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_64BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_128BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_256BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_512BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_1024BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_2048BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_4096BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_8192BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_MASK","","",null,null],[17,"IMAGE_SCN_LNK_NRELOC_OVFL","","The section contains extended relocations.",null,null],[17,"IMAGE_SCN_MEM_DISCARDABLE","","The section can be discarded as needed.",null,null],[17,"IMAGE_SCN_MEM_NOT_CACHED","","The section cannot be cached.",null,null],[17,"IMAGE_SCN_MEM_NOT_PAGED","","The section is not pageable.",null,null],[17,"IMAGE_SCN_MEM_SHARED","","The section can be shared in memory.",null,null],[17,"IMAGE_SCN_MEM_EXECUTE","","The section can be executed as code.",null,null],[17,"IMAGE_SCN_MEM_READ","","The section can be read.",null,null],[17,"IMAGE_SCN_MEM_WRITE","","The section can be written to.",null,null],[11,"parse","","",149,[[["usize"],["usize"]],["result"]]],[11,"name_offset","","",149,[[["self"]],[["option",["usize"]],["result",["option"]]]]],[11,"set_name_offset","","",149,[[["self"],["usize"]],["result"]]],[11,"name","","",149,[[["self"]],[["result",["str"]],["str"]]]],[11,"relocations","","",149,[[["self"]],[["result",["relocations"]],["relocations"]]]],[0,"symbol","goblin::pe","",null,null],[3,"Symbol","goblin::pe::symbol","A COFF symbol.",null,null],[12,"name","","The name of the symbol.",150,null],[12,"value","","The value that is associated with the symbol.",150,null],[12,"section_number","","A one-based index into the section table. Zero and…",150,null],[12,"typ","","A number that represents type.",150,null],[12,"storage_class","","An enumerated value that represents storage class.",150,null],[12,"number_of_aux_symbols","","The number of auxiliary symbol table entries that follow…",150,null],[3,"AuxFunctionDefinition","","Auxiliary symbol record for function definitions.",null,null],[12,"tag_index","","The symbol-table index of the corresponding `.bf` (begin…",151,null],[12,"total_size","","The size of the executable code for the function itself.",151,null],[12,"pointer_to_line_number","","The file offset of the first COFF line-number entry for…",151,null],[12,"pointer_to_next_function","","The symbol-table index of the record for the next function.",151,null],[12,"unused","","Unused padding.",151,null],[3,"AuxBeginAndEndFunction","","Auxiliary symbol record for symbols with storage class…",null,null],[12,"unused1","","Unused padding.",152,null],[12,"line_number","","The actual ordinal line number within the source file,…",152,null],[12,"unused2","","Unused padding.",152,null],[12,"pointer_to_next_function","","The symbol-table index of the next `.bf` symbol record.",152,null],[12,"unused3","","Unused padding.",152,null],[3,"AuxWeakExternal","","Auxiliary symbol record for weak external symbols.",null,null],[12,"tag_index","","The symbol-table index of the symbol to be linked if an…",153,null],[12,"characteristics","","Flags that control how the symbol should be linked.",153,null],[12,"unused","","Unused padding.",153,null],[3,"AuxSectionDefinition","","Auxiliary symbol record for section definitions.",null,null],[12,"length","","The size of section data; the same as `size_of_raw_data`…",154,null],[12,"number_of_relocations","","The number of relocation entries for the section.",154,null],[12,"number_of_line_numbers","","The number of line-number entries for the section.",154,null],[12,"checksum","","The checksum for communal data.",154,null],[12,"number","","One-based index into the section table for the associated…",154,null],[12,"selection","","The COMDAT selection number.",154,null],[12,"unused","","Unused padding.",154,null],[3,"SymbolTable","","A COFF symbol table.",null,null],[3,"SymbolIterator","","An iterator for COFF symbols.",null,null],[17,"COFF_SYMBOL_SIZE","","Size of a single symbol in the COFF Symbol Table.",null,null],[17,"IMAGE_SYM_UNDEFINED","","The symbol record is not yet assigned a section. A `value`…",null,null],[17,"IMAGE_SYM_ABSOLUTE","","The symbol has an absolute (non-relocatable) `value` and…",null,null],[17,"IMAGE_SYM_DEBUG","","The symbol provides general type or debugging information…",null,null],[17,"IMAGE_SYM_TYPE_NULL","","No type information or unknown base type. Microsoft tools…",null,null],[17,"IMAGE_SYM_TYPE_VOID","","No valid type; used with void pointers and functions",null,null],[17,"IMAGE_SYM_TYPE_CHAR","","A character (signed byte)",null,null],[17,"IMAGE_SYM_TYPE_SHORT","","A 2-byte signed integer",null,null],[17,"IMAGE_SYM_TYPE_INT","","A natural integer type (normally 4 bytes in Windows)",null,null],[17,"IMAGE_SYM_TYPE_LONG","","A 4-byte signed integer",null,null],[17,"IMAGE_SYM_TYPE_FLOAT","","A 4-byte floating-point number",null,null],[17,"IMAGE_SYM_TYPE_DOUBLE","","An 8-byte floating-point number",null,null],[17,"IMAGE_SYM_TYPE_STRUCT","","A structure",null,null],[17,"IMAGE_SYM_TYPE_UNION","","A union",null,null],[17,"IMAGE_SYM_TYPE_ENUM","","An enumerated type",null,null],[17,"IMAGE_SYM_TYPE_MOE","","A member of enumeration (a specific value)",null,null],[17,"IMAGE_SYM_TYPE_BYTE","","A byte; unsigned 1-byte integer",null,null],[17,"IMAGE_SYM_TYPE_WORD","","A word; unsigned 2-byte integer",null,null],[17,"IMAGE_SYM_TYPE_UINT","","An unsigned integer of natural size (normally, 4 bytes)",null,null],[17,"IMAGE_SYM_TYPE_DWORD","","An unsigned 4-byte integer",null,null],[17,"IMAGE_SYM_DTYPE_NULL","","No derived type; the symbol is a simple scalar variable.",null,null],[17,"IMAGE_SYM_DTYPE_POINTER","","The symbol is a pointer to base type.",null,null],[17,"IMAGE_SYM_DTYPE_FUNCTION","","The symbol is a function that returns a base type.",null,null],[17,"IMAGE_SYM_DTYPE_ARRAY","","The symbol is an array of base type.",null,null],[17,"IMAGE_SYM_TYPE_MASK","","",null,null],[17,"IMAGE_SYM_DTYPE_SHIFT","","",null,null],[17,"IMAGE_SYM_CLASS_END_OF_FUNCTION","","A special symbol that represents the end of function, for…",null,null],[17,"IMAGE_SYM_CLASS_NULL","","No assigned storage class.",null,null],[17,"IMAGE_SYM_CLASS_AUTOMATIC","","The automatic (stack) variable.",null,null],[17,"IMAGE_SYM_CLASS_EXTERNAL","","A value that Microsoft tools use for external symbols.",null,null],[17,"IMAGE_SYM_CLASS_STATIC","","A static symbol.",null,null],[17,"IMAGE_SYM_CLASS_REGISTER","","A register variable.",null,null],[17,"IMAGE_SYM_CLASS_EXTERNAL_DEF","","A symbol that is defined externally.",null,null],[17,"IMAGE_SYM_CLASS_LABEL","","A code label that is defined within the module.",null,null],[17,"IMAGE_SYM_CLASS_UNDEFINED_LABEL","","A reference to a code label that is not defined.",null,null],[17,"IMAGE_SYM_CLASS_MEMBER_OF_STRUCT","","The structure member.",null,null],[17,"IMAGE_SYM_CLASS_ARGUMENT","","A formal argument (parameter) of a function.",null,null],[17,"IMAGE_SYM_CLASS_STRUCT_TAG","","The structure tag-name entry.",null,null],[17,"IMAGE_SYM_CLASS_MEMBER_OF_UNION","","A union member.",null,null],[17,"IMAGE_SYM_CLASS_UNION_TAG","","The Union tag-name entry.",null,null],[17,"IMAGE_SYM_CLASS_TYPE_DEFINITION","","A Typedef entry.",null,null],[17,"IMAGE_SYM_CLASS_UNDEFINED_STATIC","","A static data declaration.",null,null],[17,"IMAGE_SYM_CLASS_ENUM_TAG","","An enumerated type tagname entry.",null,null],[17,"IMAGE_SYM_CLASS_MEMBER_OF_ENUM","","A member of an enumeration.",null,null],[17,"IMAGE_SYM_CLASS_REGISTER_PARAM","","A register parameter.",null,null],[17,"IMAGE_SYM_CLASS_BIT_FIELD","","A bit-field reference.",null,null],[17,"IMAGE_SYM_CLASS_BLOCK","","A .bb (beginning of block) or .eb (end of block) record.",null,null],[17,"IMAGE_SYM_CLASS_FUNCTION","","A value that Microsoft tools use for symbol records that…",null,null],[17,"IMAGE_SYM_CLASS_END_OF_STRUCT","","An end-of-structure entry.",null,null],[17,"IMAGE_SYM_CLASS_FILE","","The source-file symbol record.",null,null],[17,"IMAGE_SYM_CLASS_SECTION","","A definition of a section (Microsoft tools use STATIC…",null,null],[17,"IMAGE_SYM_CLASS_WEAK_EXTERNAL","","A weak external.",null,null],[17,"IMAGE_SYM_CLASS_CLR_TOKEN","","A CLR token symbol.",null,null],[17,"IMAGE_WEAK_EXTERN_SEARCH_NOLIBRARY","","Indicates that no library search for the symbol should be…",null,null],[17,"IMAGE_WEAK_EXTERN_SEARCH_LIBRARY","","Indicates that a library search for the symbol should be…",null,null],[17,"IMAGE_WEAK_EXTERN_SEARCH_ALIAS","","Indicates that the symbol is an alias for the symbol given…",null,null],[17,"IMAGE_COMDAT_SELECT_NODUPLICATES","","If this symbol is already defined, the linker issues a…",null,null],[17,"IMAGE_COMDAT_SELECT_ANY","","Any section that defines the same COMDAT symbol can be…",null,null],[17,"IMAGE_COMDAT_SELECT_SAME_SIZE","","The linker chooses an arbitrary section among the…",null,null],[17,"IMAGE_COMDAT_SELECT_EXACT_MATCH","","The linker chooses an arbitrary section among the…",null,null],[17,"IMAGE_COMDAT_SELECT_ASSOCIATIVE","","The section is linked if a certain other COMDAT section is…",null,null],[17,"IMAGE_COMDAT_SELECT_LARGEST","","The linker chooses the largest definition from among all…",null,null],[11,"parse","","Parse the symbol at the given offset.",150,[[["usize"]],["result"]]],[11,"name","","Returns the symbol name.",150,[[["strtab"],["self"]],[["str"],["result",["str"]]]]],[11,"name_offset","","Return the strtab offset of the symbol name.",150,[[["self"]],[["u32"],["option",["u32"]]]]],[11,"set_name_offset","","Set the strtab offset of the symbol name.",150,[[["self"],["u32"]]]],[11,"base_type","","Return the base type of the symbol.",150,[[["self"]],["u16"]]],[11,"derived_type","","Return the derived type of the symbol.",150,[[["self"]],["u16"]]],[11,"is_function_definition","","Return true for function definitions.",150,[[["self"]],["bool"]]],[11,"is_weak_external","","Return true for weak external symbols.",150,[[["self"]],["bool"]]],[11,"is_file","","Return true for file symbol records.",150,[[["self"]],["bool"]]],[11,"is_section_definition","","Return true for section definitions.",150,[[["self"]],["bool"]]],[11,"parse","","Parse a COFF symbol table at the given offset.",155,[[["usize"]],[["result",["symboltable"]],["symboltable"]]]],[11,"size","","Get the size in bytes of the symbol table.",155,[[["usize"]],["usize"]]],[11,"get","","Get the symbol at the given index.",155,[[["self"],["usize"]],["option"]]],[11,"aux_function_definition","","Get the auxiliary symbol record for a function definition.",155,[[["self"],["usize"]],[["auxfunctiondefinition"],["option",["auxfunctiondefinition"]]]]],[11,"aux_begin_and_end_function","","Get the auxiliary symbol record for a `.bf` or `.ef`…",155,[[["self"],["usize"]],[["auxbeginandendfunction"],["option",["auxbeginandendfunction"]]]]],[11,"aux_weak_external","","Get the auxiliary symbol record for a weak external.",155,[[["self"],["usize"]],[["option",["auxweakexternal"]],["auxweakexternal"]]]],[11,"aux_file","","Get the file name from the auxiliary symbol record for a…",155,[[["self"],["usize"]],[["str"],["option",["str"]]]]],[11,"aux_section_definition","","Get the auxiliary symbol record for a section definition.",155,[[["self"],["usize"]],[["option",["auxsectiondefinition"]],["auxsectiondefinition"]]]],[11,"iter","","Return an iterator for the COFF symbols.",155,[[["self"]],["symboliterator"]]],[0,"utils","goblin::pe","",null,null],[5,"is_in_range","goblin::pe::utils","",null,[[["usize"]],["bool"]]],[5,"find_offset","","",null,[[["usize"],["u32"]],[["option",["usize"]],["usize"]]]],[5,"find_offset_or","","",null,[[["str"],["u32"],["usize"]],[["result",["usize"]],["usize"]]]],[5,"try_name","","",null,[[["u32"],["usize"]],[["str"],["result",["str"]]]]],[5,"get_data","","",null,[[["u32"],["datadirectory"]],["result"]]],[11,"parse","goblin::pe","Reads a PE binary from the underlying `bytes`",111,[[],["result"]]],[11,"parse","","Reads a COFF object from the underlying `bytes`",112,[[],["result"]]],[0,"archive","goblin","Implements a simple parser and extractor for a Unix Archive.",null,null],[3,"MemberHeader","goblin::archive","A Unix Archive Header - meta data for the file/byte…",null,null],[12,"identifier","","The identifier, or name for this file/whatever.",156,null],[12,"timestamp","","The timestamp for when this file was last modified. Base…",156,null],[12,"owner_id","","The file's owner's id. Base 10 string number",156,null],[12,"group_id","","The file's group id. Base 10 string number",156,null],[12,"mode","","The file's permissions mode. Base 8 number number",156,null],[12,"file_size","","The size of this file. Base 10 string number",156,null],[12,"terminator","","The file header's terminator, always `0x60 0x0A`",156,null],[3,"Header","","",null,null],[12,"name","","",157,null],[12,"size","","",157,null],[3,"Member","","Represents a single entry in the archive",null,null],[12,"header","","The entry header",158,null],[12,"header_offset","","File offset from the start of the archive to where the…",158,null],[12,"offset","","File offset from the start of the archive to where the…",158,null],[3,"Index","","The special index member signified by the name `'/'`. The…",null,null],[12,"size","","Big Endian number of symbol_indexes and strings",159,null],[12,"symbol_indexes","","Big Endian u32 index into the archive for this symbol…",159,null],[12,"strtab","","Set of zero-terminated strings indexed by above. Number of…",159,null],[3,"Archive","","An in-memory representation of a parsed Unix Archive",null,null],[4,"IndexType","","The type of symbol index can be present in an archive. Can…",null,null],[13,"None","","No symbol index present.",160,null],[13,"SysV","","SystemV/GNU style symbol index, used on Windows as well.",160,null],[13,"Windows","","Windows specific extension of SysV symbol index, so called…",160,null],[13,"BSD","","BSD style symbol index.",160,null],[17,"SIZEOF_MAGIC","","",null,null],[17,"MAGIC","","The magic number of a Unix Archive",null,null],[17,"SIZEOF_HEADER","","",null,null],[11,"name","","",156,[[["self"]],[["str"],["result",["str"]]]]],[11,"size","","",156,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"parse","","Tries to parse the header in `R`, as well as the offset in…",158,[[["usize"]],[["member"],["result",["member"]]]]],[11,"size","","The size of the Member's content, in bytes. Does not…",158,[[["self"]],["usize"]]],[11,"extended_name","","The member name, accounting for SysV and BSD `ar` filename…",158,[[["self"]],["str"]]],[11,"raw_name","","The untrimmed raw member name, i.e., includes…",158,[[["self"]],["str"]]],[11,"parse_sysv_index","","Parses the given byte buffer into an Index. NB: the buffer…",159,[[],["result"]]],[11,"parse_bsd_symdef","","Parses the given byte buffer into an Index, in BSD style…",159,[[],["result"]]],[11,"parse_windows_linker_member","","",159,[[],["result"]]],[11,"parse","","",161,[[],[["result",["archive"]],["archive"]]]],[11,"get","","Get the member named `member` in this archive, if any",161,[[["str"],["self"]],[["option",["member"]],["member"]]]],[11,"extract","","Returns a slice of the raw bytes for the given `member` in…",161,[[["str"],["self"]],["result"]]],[11,"summarize","","Gets a summary of this archive, returning a list of…",161,[[["self"]],["vec"]]],[11,"members","","Get the list of member names in this archive",161,[[["self"]],[["str"],["vec",["str"]]]]],[11,"member_of_symbol","","Returns the member's name which contains the given…",161,[[["str"],["self"]],[["str"],["option",["str"]]]]],[11,"parse","goblin","Tries to parse an `Object` from `bytes`",2,[[],[["result",["object"]],["object"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","goblin::error","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","goblin::strtab","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","goblin::container","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","goblin::elf","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","goblin::elf::compression_header","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","goblin::elf::compression_header::compression_header32","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","goblin::elf::compression_header::compression_header64","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","goblin::elf::header","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","goblin::elf::header::header32","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","goblin::elf::header::header64","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","goblin::elf::program_header","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","goblin::elf::program_header::program_header32","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","goblin::elf::program_header::program_header64","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","goblin::elf::section_header","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","goblin::elf::section_header::section_header32","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","goblin::elf::section_header::section_header64","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","goblin::elf::sym","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",162,[[["t"]],["t"]]],[11,"into","","",162,[[],["u"]]],[11,"into_iter","","",162,[[],["i"]]],[11,"try_from","","",162,[[["u"]],["result"]]],[11,"try_into","","",162,[[],["result"]]],[11,"borrow","","",162,[[["self"]],["t"]]],[11,"borrow_mut","","",162,[[["self"]],["t"]]],[11,"type_id","","",162,[[["self"]],["typeid"]]],[11,"from","goblin::elf::sym::sym32","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","goblin::elf::sym::sym64","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","goblin::elf::dynamic","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","goblin::elf::dynamic::dyn32","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","goblin::elf::dynamic::dyn64","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","goblin::elf::reloc","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",163,[[["t"]],["t"]]],[11,"into","","",163,[[],["u"]]],[11,"into_iter","","",163,[[],["i"]]],[11,"try_from","","",163,[[["u"]],["result"]]],[11,"try_into","","",163,[[],["result"]]],[11,"borrow","","",163,[[["self"]],["t"]]],[11,"borrow_mut","","",163,[[["self"]],["t"]]],[11,"type_id","","",163,[[["self"]],["typeid"]]],[11,"from","goblin::elf::reloc::reloc32","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","goblin::elf::reloc::reloc64","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","goblin::elf::note","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"into_iter","","",40,[[],["i"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"into_iter","","",41,[[],["i"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","goblin::elf32::gnu_hash","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","goblin::elf64::gnu_hash","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","goblin::mach","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",164,[[["t"]],["t"]]],[11,"into","","",164,[[],["u"]]],[11,"into_iter","","",164,[[],["i"]]],[11,"try_from","","",164,[[["u"]],["result"]]],[11,"try_into","","",164,[[],["result"]]],[11,"borrow","","",164,[[["self"]],["t"]]],[11,"borrow_mut","","",164,[[["self"]],["t"]]],[11,"type_id","","",164,[[["self"]],["typeid"]]],[11,"from","","",165,[[["t"]],["t"]]],[11,"into","","",165,[[],["u"]]],[11,"into_iter","","",165,[[],["i"]]],[11,"try_from","","",165,[[["u"]],["result"]]],[11,"try_into","","",165,[[],["result"]]],[11,"borrow","","",165,[[["self"]],["t"]]],[11,"borrow_mut","","",165,[[["self"]],["t"]]],[11,"type_id","","",165,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","goblin::mach::exports","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"from","goblin::mach::fat","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,[[["self"],["t"]]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"from","goblin::mach::header","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,[[["self"],["t"]]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,[[["self"],["t"]]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"from","goblin::mach::imports","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"from","goblin::mach::load_command","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,[[["self"],["t"]]]],[11,"to_string","","",59,[[["self"]],["string"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,[[["self"],["t"]]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,[[["self"],["t"]]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,[[["self"],["t"]]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,[[["self"],["t"]]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,[[["self"],["t"]]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,[[["self"],["t"]]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,[[["self"],["t"]]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,[[["self"],["t"]]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,[[["self"],["t"]]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,[[["self"],["t"]]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,[[["self"],["t"]]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,[[["self"],["t"]]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,[[["self"],["t"]]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,[[["self"],["t"]]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,[[["self"],["t"]]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,[[["self"],["t"]]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,[[["self"],["t"]]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,[[["self"],["t"]]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,[[["self"],["t"]]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,[[["self"],["t"]]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,[[["self"],["t"]]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,[[["self"],["t"]]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,[[["self"],["t"]]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,[[["self"],["t"]]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,[[["self"],["t"]]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,[[["self"],["t"]]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[],["u"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,[[["self"],["t"]]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[],["u"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,[[["self"],["t"]]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"try_into","","",87,[[],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"type_id","","",87,[[["self"]],["typeid"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[],["u"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,[[["self"],["t"]]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"try_into","","",88,[[],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"type_id","","",88,[[["self"]],["typeid"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,[[["self"],["t"]]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,[[["self"],["t"]]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[],["u"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,[[["self"],["t"]]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[],["u"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,[[["self"],["t"]]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[],["u"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,[[["self"],["t"]]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"try_into","","",93,[[],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"type_id","","",93,[[["self"]],["typeid"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[],["u"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,[[["self"],["t"]]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[],["u"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,[[["self"],["t"]]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"try_into","","",95,[[],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"type_id","","",95,[[["self"]],["typeid"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[],["u"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,[[["self"],["t"]]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[],["u"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,[[["self"],["t"]]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[],["u"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,[[["self"],["t"]]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[],["u"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,[[["self"],["t"]]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"try_into","","",99,[[],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"type_id","","",99,[[["self"]],["typeid"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[],["u"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"try_into","","",100,[[],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"type_id","","",100,[[["self"]],["typeid"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[],["u"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"try_into","","",101,[[],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"type_id","","",101,[[["self"]],["typeid"]]],[11,"from","goblin::mach::relocation","",102,[[["t"]],["t"]]],[11,"into","","",102,[[],["u"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,[[["self"],["t"]]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"try_into","","",102,[[],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"type_id","","",102,[[["self"]],["typeid"]]],[11,"from","goblin::mach::segment","",166,[[["t"]],["t"]]],[11,"into","","",166,[[],["u"]]],[11,"into_iter","","",166,[[],["i"]]],[11,"try_from","","",166,[[["u"]],["result"]]],[11,"try_into","","",166,[[],["result"]]],[11,"borrow","","",166,[[["self"]],["t"]]],[11,"borrow_mut","","",166,[[["self"]],["t"]]],[11,"type_id","","",166,[[["self"]],["typeid"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[],["u"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"try_into","","",103,[[],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"type_id","","",103,[[["self"]],["typeid"]]],[11,"from","","",167,[[["t"]],["t"]]],[11,"into","","",167,[[],["u"]]],[11,"into_iter","","",167,[[],["i"]]],[11,"try_from","","",167,[[["u"]],["result"]]],[11,"try_into","","",167,[[],["result"]]],[11,"borrow","","",167,[[["self"]],["t"]]],[11,"borrow_mut","","",167,[[["self"]],["t"]]],[11,"type_id","","",167,[[["self"]],["typeid"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[],["u"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"try_into","","",104,[[],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"type_id","","",104,[[["self"]],["typeid"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[],["u"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"try_into","","",105,[[],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"type_id","","",105,[[["self"]],["typeid"]]],[11,"from","goblin::mach::symbols","",106,[[["t"]],["t"]]],[11,"into","","",106,[[],["u"]]],[11,"to_owned","","",106,[[["self"]],["t"]]],[11,"clone_into","","",106,[[["self"],["t"]]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"try_into","","",106,[[],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"type_id","","",106,[[["self"]],["typeid"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[],["u"]]],[11,"to_owned","","",107,[[["self"]],["t"]]],[11,"clone_into","","",107,[[["self"],["t"]]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"try_into","","",107,[[],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"type_id","","",107,[[["self"]],["typeid"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"into","","",108,[[],["u"]]],[11,"to_owned","","",108,[[["self"]],["t"]]],[11,"clone_into","","",108,[[["self"],["t"]]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"try_into","","",108,[[],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"type_id","","",108,[[["self"]],["typeid"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[],["u"]]],[11,"to_owned","","",109,[[["self"]],["t"]]],[11,"clone_into","","",109,[[["self"],["t"]]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"try_into","","",109,[[],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"type_id","","",109,[[["self"]],["typeid"]]],[11,"from","","",168,[[["t"]],["t"]]],[11,"into","","",168,[[],["u"]]],[11,"into_iter","","",168,[[],["i"]]],[11,"try_from","","",168,[[["u"]],["result"]]],[11,"try_into","","",168,[[],["result"]]],[11,"borrow","","",168,[[["self"]],["t"]]],[11,"borrow_mut","","",168,[[["self"]],["t"]]],[11,"type_id","","",168,[[["self"]],["typeid"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[],["u"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"try_into","","",110,[[],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"type_id","","",110,[[["self"]],["typeid"]]],[11,"from","goblin::pe","",111,[[["t"]],["t"]]],[11,"into","","",111,[[],["u"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"try_into","","",111,[[],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"type_id","","",111,[[["self"]],["typeid"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[],["u"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"try_into","","",112,[[],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"type_id","","",112,[[["self"]],["typeid"]]],[11,"from","goblin::pe::data_directories","",113,[[["t"]],["t"]]],[11,"into","","",113,[[],["u"]]],[11,"to_owned","","",113,[[["self"]],["t"]]],[11,"clone_into","","",113,[[["self"],["t"]]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"try_into","","",113,[[],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"type_id","","",113,[[["self"]],["typeid"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[],["u"]]],[11,"to_owned","","",114,[[["self"]],["t"]]],[11,"clone_into","","",114,[[["self"],["t"]]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"try_into","","",114,[[],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"type_id","","",114,[[["self"]],["typeid"]]],[11,"from","goblin::pe::debug","",115,[[["t"]],["t"]]],[11,"into","","",115,[[],["u"]]],[11,"to_owned","","",115,[[["self"]],["t"]]],[11,"clone_into","","",115,[[["self"],["t"]]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"try_into","","",115,[[],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"type_id","","",115,[[["self"]],["typeid"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"into","","",116,[[],["u"]]],[11,"to_owned","","",116,[[["self"]],["t"]]],[11,"clone_into","","",116,[[["self"],["t"]]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"try_into","","",116,[[],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"type_id","","",116,[[["self"]],["typeid"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"into","","",117,[[],["u"]]],[11,"to_owned","","",117,[[["self"]],["t"]]],[11,"clone_into","","",117,[[["self"],["t"]]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"try_into","","",117,[[],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"type_id","","",117,[[["self"]],["typeid"]]],[11,"from","goblin::pe::exception","",118,[[["t"]],["t"]]],[11,"into","","",118,[[],["u"]]],[11,"to_owned","","",118,[[["self"]],["t"]]],[11,"clone_into","","",118,[[["self"],["t"]]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"try_into","","",118,[[],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"type_id","","",118,[[["self"]],["typeid"]]],[11,"from","","",169,[[["t"]],["t"]]],[11,"into","","",169,[[],["u"]]],[11,"into_iter","","",169,[[],["i"]]],[11,"try_from","","",169,[[["u"]],["result"]]],[11,"try_into","","",169,[[],["result"]]],[11,"borrow","","",169,[[["self"]],["t"]]],[11,"borrow_mut","","",169,[[["self"]],["t"]]],[11,"type_id","","",169,[[["self"]],["typeid"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"into","","",119,[[],["u"]]],[11,"to_owned","","",119,[[["self"]],["t"]]],[11,"clone_into","","",119,[[["self"],["t"]]]],[11,"to_string","","",119,[[["self"]],["string"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"try_into","","",119,[[],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"type_id","","",119,[[["self"]],["typeid"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"into","","",120,[[],["u"]]],[11,"to_owned","","",120,[[["self"]],["t"]]],[11,"clone_into","","",120,[[["self"],["t"]]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"try_into","","",120,[[],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"type_id","","",120,[[["self"]],["typeid"]]],[11,"from","","",170,[[["t"]],["t"]]],[11,"into","","",170,[[],["u"]]],[11,"into_iter","","",170,[[],["i"]]],[11,"to_owned","","",170,[[["self"]],["t"]]],[11,"clone_into","","",170,[[["self"],["t"]]]],[11,"try_from","","",170,[[["u"]],["result"]]],[11,"try_into","","",170,[[],["result"]]],[11,"borrow","","",170,[[["self"]],["t"]]],[11,"borrow_mut","","",170,[[["self"]],["t"]]],[11,"type_id","","",170,[[["self"]],["typeid"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"into","","",121,[[],["u"]]],[11,"to_owned","","",121,[[["self"]],["t"]]],[11,"clone_into","","",121,[[["self"],["t"]]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"try_into","","",121,[[],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"type_id","","",121,[[["self"]],["typeid"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"into","","",125,[[],["u"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"try_into","","",125,[[],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"type_id","","",125,[[["self"]],["typeid"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"into","","",122,[[],["u"]]],[11,"to_owned","","",122,[[["self"]],["t"]]],[11,"clone_into","","",122,[[["self"],["t"]]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"try_into","","",122,[[],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"type_id","","",122,[[["self"]],["typeid"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"into","","",123,[[],["u"]]],[11,"to_owned","","",123,[[["self"]],["t"]]],[11,"clone_into","","",123,[[["self"],["t"]]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"try_into","","",123,[[],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"type_id","","",123,[[["self"]],["typeid"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"into","","",124,[[],["u"]]],[11,"to_owned","","",124,[[["self"]],["t"]]],[11,"clone_into","","",124,[[["self"],["t"]]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"try_into","","",124,[[],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"type_id","","",124,[[["self"]],["typeid"]]],[11,"from","goblin::pe::export","",126,[[["t"]],["t"]]],[11,"into","","",126,[[],["u"]]],[11,"to_owned","","",126,[[["self"]],["t"]]],[11,"clone_into","","",126,[[["self"],["t"]]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"try_into","","",126,[[],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"type_id","","",126,[[["self"]],["typeid"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"into","","",127,[[],["u"]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"try_into","","",127,[[],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"type_id","","",127,[[["self"]],["typeid"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"into","","",128,[[],["u"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"try_into","","",128,[[],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"type_id","","",128,[[["self"]],["typeid"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"into","","",129,[[],["u"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"try_into","","",129,[[],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"type_id","","",129,[[["self"]],["typeid"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"into","","",130,[[],["u"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"try_into","","",130,[[],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"type_id","","",130,[[["self"]],["typeid"]]],[11,"from","goblin::pe::header","",131,[[["t"]],["t"]]],[11,"into","","",131,[[],["u"]]],[11,"to_owned","","",131,[[["self"]],["t"]]],[11,"clone_into","","",131,[[["self"],["t"]]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"try_into","","",131,[[],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"type_id","","",131,[[["self"]],["typeid"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"into","","",132,[[],["u"]]],[11,"to_owned","","",132,[[["self"]],["t"]]],[11,"clone_into","","",132,[[["self"],["t"]]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"try_into","","",132,[[],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"type_id","","",132,[[["self"]],["typeid"]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"into","","",133,[[],["u"]]],[11,"to_owned","","",133,[[["self"]],["t"]]],[11,"clone_into","","",133,[[["self"],["t"]]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"try_into","","",133,[[],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"type_id","","",133,[[["self"]],["typeid"]]],[11,"from","goblin::pe::import","",134,[[["t"]],["t"]]],[11,"into","","",134,[[],["u"]]],[11,"to_owned","","",134,[[["self"]],["t"]]],[11,"clone_into","","",134,[[["self"],["t"]]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"try_into","","",134,[[],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"type_id","","",134,[[["self"]],["typeid"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"into","","",135,[[],["u"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"try_into","","",135,[[],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"type_id","","",135,[[["self"]],["typeid"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"into","","",136,[[],["u"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"try_into","","",136,[[],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"type_id","","",136,[[["self"]],["typeid"]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"into","","",137,[[],["u"]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"try_into","","",137,[[],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"type_id","","",137,[[["self"]],["typeid"]]],[11,"from","","",138,[[["t"]],["t"]]],[11,"into","","",138,[[],["u"]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"try_into","","",138,[[],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"type_id","","",138,[[["self"]],["typeid"]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"into","","",139,[[],["u"]]],[11,"to_owned","","",139,[[["self"]],["t"]]],[11,"clone_into","","",139,[[["self"],["t"]]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"try_into","","",139,[[],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"type_id","","",139,[[["self"]],["typeid"]]],[11,"from","goblin::pe::optional_header","",141,[[["t"]],["t"]]],[11,"into","","",141,[[],["u"]]],[11,"to_owned","","",141,[[["self"]],["t"]]],[11,"clone_into","","",141,[[["self"],["t"]]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"try_into","","",141,[[],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"type_id","","",141,[[["self"]],["typeid"]]],[11,"from","","",142,[[["t"]],["t"]]],[11,"into","","",142,[[],["u"]]],[11,"to_owned","","",142,[[["self"]],["t"]]],[11,"clone_into","","",142,[[["self"],["t"]]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"try_into","","",142,[[],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"type_id","","",142,[[["self"]],["typeid"]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"into","","",143,[[],["u"]]],[11,"to_owned","","",143,[[["self"]],["t"]]],[11,"clone_into","","",143,[[["self"],["t"]]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"try_into","","",143,[[],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"type_id","","",143,[[["self"]],["typeid"]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"into","","",144,[[],["u"]]],[11,"to_owned","","",144,[[["self"]],["t"]]],[11,"clone_into","","",144,[[["self"],["t"]]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"try_into","","",144,[[],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"type_id","","",144,[[["self"]],["typeid"]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"into","","",145,[[],["u"]]],[11,"to_owned","","",145,[[["self"]],["t"]]],[11,"clone_into","","",145,[[["self"],["t"]]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"try_into","","",145,[[],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"type_id","","",145,[[["self"]],["typeid"]]],[11,"from","","",146,[[["t"]],["t"]]],[11,"into","","",146,[[],["u"]]],[11,"to_owned","","",146,[[["self"]],["t"]]],[11,"clone_into","","",146,[[["self"],["t"]]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"try_into","","",146,[[],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"type_id","","",146,[[["self"]],["typeid"]]],[11,"from","goblin::pe::relocation","",147,[[["t"]],["t"]]],[11,"into","","",147,[[],["u"]]],[11,"to_owned","","",147,[[["self"]],["t"]]],[11,"clone_into","","",147,[[["self"],["t"]]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"try_into","","",147,[[],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"type_id","","",147,[[["self"]],["typeid"]]],[11,"from","","",148,[[["t"]],["t"]]],[11,"into","","",148,[[],["u"]]],[11,"into_iter","","",148,[[],["i"]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"try_into","","",148,[[],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"type_id","","",148,[[["self"]],["typeid"]]],[11,"from","goblin::pe::section_table","",149,[[["t"]],["t"]]],[11,"into","","",149,[[],["u"]]],[11,"to_owned","","",149,[[["self"]],["t"]]],[11,"clone_into","","",149,[[["self"],["t"]]]],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"try_into","","",149,[[],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"type_id","","",149,[[["self"]],["typeid"]]],[11,"from","goblin::pe::symbol","",150,[[["t"]],["t"]]],[11,"into","","",150,[[],["u"]]],[11,"to_owned","","",150,[[["self"]],["t"]]],[11,"clone_into","","",150,[[["self"],["t"]]]],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"try_into","","",150,[[],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"type_id","","",150,[[["self"]],["typeid"]]],[11,"from","","",151,[[["t"]],["t"]]],[11,"into","","",151,[[],["u"]]],[11,"to_owned","","",151,[[["self"]],["t"]]],[11,"clone_into","","",151,[[["self"],["t"]]]],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"try_into","","",151,[[],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"type_id","","",151,[[["self"]],["typeid"]]],[11,"from","","",152,[[["t"]],["t"]]],[11,"into","","",152,[[],["u"]]],[11,"to_owned","","",152,[[["self"]],["t"]]],[11,"clone_into","","",152,[[["self"],["t"]]]],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"try_into","","",152,[[],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"type_id","","",152,[[["self"]],["typeid"]]],[11,"from","","",153,[[["t"]],["t"]]],[11,"into","","",153,[[],["u"]]],[11,"to_owned","","",153,[[["self"]],["t"]]],[11,"clone_into","","",153,[[["self"],["t"]]]],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"try_into","","",153,[[],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"type_id","","",153,[[["self"]],["typeid"]]],[11,"from","","",154,[[["t"]],["t"]]],[11,"into","","",154,[[],["u"]]],[11,"to_owned","","",154,[[["self"]],["t"]]],[11,"clone_into","","",154,[[["self"],["t"]]]],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"try_into","","",154,[[],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"type_id","","",154,[[["self"]],["typeid"]]],[11,"from","","",155,[[["t"]],["t"]]],[11,"into","","",155,[[],["u"]]],[11,"try_from","","",155,[[["u"]],["result"]]],[11,"try_into","","",155,[[],["result"]]],[11,"borrow","","",155,[[["self"]],["t"]]],[11,"borrow_mut","","",155,[[["self"]],["t"]]],[11,"type_id","","",155,[[["self"]],["typeid"]]],[11,"from","","",171,[[["t"]],["t"]]],[11,"into","","",171,[[],["u"]]],[11,"into_iter","","",171,[[],["i"]]],[11,"try_from","","",171,[[["u"]],["result"]]],[11,"try_into","","",171,[[],["result"]]],[11,"borrow","","",171,[[["self"]],["t"]]],[11,"borrow_mut","","",171,[[["self"]],["t"]]],[11,"type_id","","",171,[[["self"]],["typeid"]]],[11,"from","goblin::archive","",156,[[["t"]],["t"]]],[11,"into","","",156,[[],["u"]]],[11,"to_owned","","",156,[[["self"]],["t"]]],[11,"clone_into","","",156,[[["self"],["t"]]]],[11,"try_from","","",156,[[["u"]],["result"]]],[11,"try_into","","",156,[[],["result"]]],[11,"borrow","","",156,[[["self"]],["t"]]],[11,"borrow_mut","","",156,[[["self"]],["t"]]],[11,"type_id","","",156,[[["self"]],["typeid"]]],[11,"from","","",157,[[["t"]],["t"]]],[11,"into","","",157,[[],["u"]]],[11,"to_owned","","",157,[[["self"]],["t"]]],[11,"clone_into","","",157,[[["self"],["t"]]]],[11,"try_from","","",157,[[["u"]],["result"]]],[11,"try_into","","",157,[[],["result"]]],[11,"borrow","","",157,[[["self"]],["t"]]],[11,"borrow_mut","","",157,[[["self"]],["t"]]],[11,"type_id","","",157,[[["self"]],["typeid"]]],[11,"from","","",158,[[["t"]],["t"]]],[11,"into","","",158,[[],["u"]]],[11,"to_owned","","",158,[[["self"]],["t"]]],[11,"clone_into","","",158,[[["self"],["t"]]]],[11,"try_from","","",158,[[["u"]],["result"]]],[11,"try_into","","",158,[[],["result"]]],[11,"borrow","","",158,[[["self"]],["t"]]],[11,"borrow_mut","","",158,[[["self"]],["t"]]],[11,"type_id","","",158,[[["self"]],["typeid"]]],[11,"from","","",159,[[["t"]],["t"]]],[11,"into","","",159,[[],["u"]]],[11,"try_from","","",159,[[["u"]],["result"]]],[11,"try_into","","",159,[[],["result"]]],[11,"borrow","","",159,[[["self"]],["t"]]],[11,"borrow_mut","","",159,[[["self"]],["t"]]],[11,"type_id","","",159,[[["self"]],["typeid"]]],[11,"from","","",161,[[["t"]],["t"]]],[11,"into","","",161,[[],["u"]]],[11,"try_from","","",161,[[["u"]],["result"]]],[11,"try_into","","",161,[[],["result"]]],[11,"borrow","","",161,[[["self"]],["t"]]],[11,"borrow_mut","","",161,[[["self"]],["t"]]],[11,"type_id","","",161,[[["self"]],["typeid"]]],[11,"from","","",160,[[["t"]],["t"]]],[11,"into","","",160,[[],["u"]]],[11,"try_from","","",160,[[["u"]],["result"]]],[11,"try_into","","",160,[[],["result"]]],[11,"borrow","","",160,[[["self"]],["t"]]],[11,"borrow_mut","","",160,[[["self"]],["t"]]],[11,"type_id","","",160,[[["self"]],["typeid"]]],[11,"fmt","goblin::container","",5,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"from","","",5,[[["bool"]],["endian"]]],[11,"clone","","",5,[[["self"]],["endian"]]],[11,"default","","",5,[[],["endian"]]],[11,"eq","","",5,[[["endian"],["self"]],["bool"]]],[11,"from","goblin::error","",3,[[["error"]],["error"]]],[11,"from","","",3,[[["error"]],["error"]]],[11,"from","goblin::container","",6,[[["container"]],["self"]]],[11,"from","","",6,[[["endian"]],["self"]]],[11,"from","goblin::elf::compression_header","",9,[[["compressionheader"]],["self"]]],[11,"from","goblin::elf::compression_header::compression_header32","",10,[[["elfcompressionheader"]],["self"]]],[11,"from","goblin::elf::compression_header","",9,[[["compressionheader"]],["self"]]],[11,"from","goblin::elf::compression_header::compression_header64","",11,[[["elfcompressionheader"]],["self"]]],[11,"from","goblin::elf::header::header32","",13,[[["elfheader"]],["self"]]],[11,"from","goblin::elf::header","",12,[[["header"]],["self"]]],[11,"from","goblin::elf::header::header64","",14,[[["elfheader"]],["self"]]],[11,"from","goblin::elf::header","",12,[[["header"]],["self"]]],[11,"from","goblin::elf::program_header","",15,[[["programheader"]],["self"]]],[11,"from","goblin::elf::program_header::program_header32","",16,[[["elfprogramheader"]],["self"]]],[11,"from","goblin::elf::program_header","",15,[[["programheader"]],["self"]]],[11,"from","goblin::elf::program_header::program_header64","",17,[[["elfprogramheader"]],["self"]]],[11,"from","goblin::elf::section_header","",18,[[["sectionheader"]],["self"]]],[11,"from","goblin::elf::section_header::section_header32","",19,[[["elfsectionheader"]],["self"]]],[11,"from","goblin::elf::section_header","",18,[[["sectionheader"]],["self"]]],[11,"from","goblin::elf::section_header::section_header64","",20,[[["elfsectionheader"]],["self"]]],[11,"from","goblin::elf::sym","",21,[[["sym"]],["self"]]],[11,"from","goblin::elf::sym::sym32","",22,[[["elfsym"]],["self"]]],[11,"from","goblin::elf::sym","",21,[[["sym"]],["self"]]],[11,"from","goblin::elf::sym::sym64","",23,[[["elfsym"]],["self"]]],[11,"from","goblin::elf::dynamic::dyn32","",28,[[["elfdyn"]],["self"]]],[11,"from","goblin::elf::dynamic","",25,[[["dyn"]],["self"]]],[11,"from","goblin::elf::dynamic::dyn64","",30,[[["elfdyn"]],["self"]]],[11,"from","goblin::elf::dynamic","",25,[[["dyn"]],["self"]]],[11,"from","goblin::elf::reloc","",32,[[["rela"]],["self"]]],[11,"from","","",32,[[["rel"]],["self"]]],[11,"from","goblin::elf::reloc::reloc32","",33,[[["reloc"]],["self"]]],[11,"from","","",34,[[["reloc"]],["self"]]],[11,"from","goblin::elf::reloc","",32,[[["rela"]],["self"]]],[11,"from","","",32,[[["rel"]],["self"]]],[11,"from","goblin::elf::reloc::reloc64","",35,[[["reloc"]],["self"]]],[11,"from","","",36,[[["reloc"]],["self"]]],[11,"from","goblin::mach::header","",56,[[["header32"]],["self"]]],[11,"from","","",54,[[["header"]],["self"]]],[11,"from","","",56,[[["header64"]],["self"]]],[11,"from","","",55,[[["header"]],["self"]]],[11,"from","goblin::mach::load_command","",61,[[["section"]],["self"]]],[11,"from","","",60,[[["section"]],["self"]]],[11,"from","goblin::mach::segment","",103,[[["section32"]],["self"]]],[11,"from","","",103,[[["section64"]],["self"]]],[11,"from","goblin::mach::load_command","",63,[[["segment"]],["self"]]],[11,"from","","",62,[[["segment"]],["self"]]],[11,"from","goblin::mach::symbols","",108,[[["nlist32"]],["self"]]],[11,"from","","",108,[[["nlist64"]],["self"]]],[11,"from","","",106,[[["nlist"]],["self"]]],[11,"from","","",107,[[["nlist"]],["self"]]],[11,"from","goblin::pe::optional_header","",143,[[["standardfields32"]],["self"]]],[11,"from","","",143,[[["standardfields64"]],["self"]]],[11,"from","goblin","",172,[[["windowsfields32"]],["self"]]],[11,"len","goblin::elf::sym","",162,[[["self"]],["usize"]]],[11,"len","goblin::elf::reloc","",163,[[["self"]],["usize"]]],[11,"len","goblin::mach::segment","",167,[[["self"]],["usize"]]],[11,"next","goblin::elf::sym","",162,[[["self"]],["option"]]],[11,"next","goblin::elf::reloc","",163,[[["self"]],["option"]]],[11,"next","goblin::elf::note","",40,[[["self"]],["option"]]],[11,"next","","",41,[[["self"]],["option"]]],[11,"next","goblin::mach::segment","",166,[[["self"]],["option"]]],[11,"next","","",167,[[["self"]],["option"]]],[11,"next","goblin::mach::symbols","",168,[[["self"]],["option"]]],[11,"next","goblin::mach","",164,[[["self"]],["option"]]],[11,"next","","",165,[[["self"]],["option"]]],[11,"next","goblin::pe::exception","",169,[[["self"]],["option"]]],[11,"size_hint","","",169,[[["self"]]]],[11,"next","","",170,[[["self"]],["option"]]],[11,"size_hint","","",170,[[["self"]]]],[11,"next","goblin::pe::relocation","",148,[[["self"]],["option"]]],[11,"next","goblin::pe::symbol","",171,[[["self"]],["option"]]],[11,"clone","goblin::container","",7,[[["self"]],["container"]]],[11,"clone","","",6,[[["self"]],["ctx"]]],[11,"clone","goblin::elf::compression_header::compression_header32","",10,[[["self"]],["compressionheader"]]],[11,"clone","goblin::elf::compression_header::compression_header64","",11,[[["self"]],["compressionheader"]]],[11,"clone","goblin::elf::compression_header","",9,[[["self"]],["compressionheader"]]],[11,"clone","goblin::elf::header","",12,[[["self"]],["header"]]],[11,"clone","goblin::elf::header::header32","",13,[[["self"]],["header"]]],[11,"clone","goblin::elf::header::header64","",14,[[["self"]],["header"]]],[11,"clone","goblin::elf::program_header","",15,[[["self"]],["programheader"]]],[11,"clone","goblin::elf::program_header::program_header32","",16,[[["self"]],["programheader"]]],[11,"clone","goblin::elf::program_header::program_header64","",17,[[["self"]],["programheader"]]],[11,"clone","goblin::elf::section_header::section_header32","",19,[[["self"]],["sectionheader"]]],[11,"clone","goblin::elf::section_header::section_header64","",20,[[["self"]],["sectionheader"]]],[11,"clone","goblin::elf::section_header","",18,[[["self"]],["sectionheader"]]],[11,"clone","goblin::elf::sym::sym32","",22,[[["self"]],["sym"]]],[11,"clone","goblin::elf::sym::sym64","",23,[[["self"]],["sym"]]],[11,"clone","goblin::elf::sym","",21,[[["self"]],["sym"]]],[11,"clone","goblin::elf::dynamic","",25,[[["self"]],["dyn"]]],[11,"clone","goblin::elf::dynamic::dyn32","",28,[[["self"]],["dyn"]]],[11,"clone","goblin::elf::dynamic::dyn64","",30,[[["self"]],["dyn"]]],[11,"clone","goblin::elf::reloc::reloc32","",33,[[["self"]],["rela"]]],[11,"clone","","",34,[[["self"]],["rel"]]],[11,"clone","goblin::elf::reloc::reloc64","",35,[[["self"]],["rela"]]],[11,"clone","","",36,[[["self"]],["rel"]]],[11,"clone","goblin::elf::reloc","",32,[[["self"]],["reloc"]]],[11,"clone","goblin::elf::note","",38,[[["self"]],["nhdr32"]]],[11,"clone","","",39,[[["self"]],["nhdr64"]]],[11,"clone","goblin::mach::fat","",52,[[["self"]],["fatheader"]]],[11,"clone","","",53,[[["self"]],["fatarch"]]],[11,"clone","goblin::mach::header","",54,[[["self"]],["header32"]]],[11,"clone","","",55,[[["self"]],["header64"]]],[11,"clone","","",56,[[["self"]],["header"]]],[11,"clone","goblin::mach::load_command","",59,[[["self"]],["loadcommandheader"]]],[11,"clone","","",60,[[["self"]],["section32"]]],[11,"clone","","",61,[[["self"]],["section64"]]],[11,"clone","","",62,[[["self"]],["segmentcommand32"]]],[11,"clone","","",63,[[["self"]],["segmentcommand64"]]],[11,"clone","","",64,[[["self"]],["fvmlib"]]],[11,"clone","","",65,[[["self"]],["fvmlibcommand"]]],[11,"clone","","",66,[[["self"]],["dylib"]]],[11,"clone","","",67,[[["self"]],["dylibcommand"]]],[11,"clone","","",68,[[["self"]],["subframeworkcommand"]]],[11,"clone","","",69,[[["self"]],["subclientcommand"]]],[11,"clone","","",70,[[["self"]],["subumbrellacommand"]]],[11,"clone","","",71,[[["self"]],["sublibrarycommand"]]],[11,"clone","","",72,[[["self"]],["prebounddylibcommand"]]],[11,"clone","","",73,[[["self"]],["dylinkercommand"]]],[11,"clone","","",74,[[["self"]],["self"]]],[11,"clone","","",75,[[["self"]],["routinescommand32"]]],[11,"clone","","",76,[[["self"]],["routinescommand64"]]],[11,"clone","","",77,[[["self"]],["symtabcommand"]]],[11,"clone","","",78,[[["self"]],["dysymtabcommand"]]],[11,"clone","","",79,[[["self"]],["dylibtableofcontents"]]],[11,"clone","","",80,[[["self"]],["dylibmodule"]]],[11,"clone","","",81,[[["self"]],["dylibmodule64"]]],[11,"clone","","",82,[[["self"]],["dylibreference"]]],[11,"clone","","",83,[[["self"]],["twolevelhintscommand"]]],[11,"clone","","",84,[[["self"]],["twolevelhint"]]],[11,"clone","","",85,[[["self"]],["prebindcksumcommand"]]],[11,"clone","","",86,[[["self"]],["uuidcommand"]]],[11,"clone","","",87,[[["self"]],["rpathcommand"]]],[11,"clone","","",88,[[["self"]],["linkeditdatacommand"]]],[11,"clone","","",89,[[["self"]],["encryptioninfocommand32"]]],[11,"clone","","",90,[[["self"]],["encryptioninfocommand64"]]],[11,"clone","","",91,[[["self"]],["versionmincommand"]]],[11,"clone","","",92,[[["self"]],["dyldinfocommand"]]],[11,"clone","","",93,[[["self"]],["linkeroptioncommand"]]],[11,"clone","","",94,[[["self"]],["symsegcommand"]]],[11,"clone","","",95,[[["self"]],["identcommand"]]],[11,"clone","","",96,[[["self"]],["fvmfilecommand"]]],[11,"clone","","",97,[[["self"]],["entrypointcommand"]]],[11,"clone","","",98,[[["self"]],["sourceversioncommand"]]],[11,"clone","","",99,[[["self"]],["dataincodeentry"]]],[11,"clone","goblin::mach::relocation","",102,[[["self"]],["relocationinfo"]]],[11,"clone","goblin::mach::symbols","",106,[[["self"]],["nlist32"]]],[11,"clone","","",107,[[["self"]],["nlist64"]]],[11,"clone","","",108,[[["self"]],["nlist"]]],[11,"clone","","",109,[[["self"]],["symbolsctx"]]],[11,"clone","goblin::pe::data_directories","",113,[[["self"]],["datadirectory"]]],[11,"clone","","",114,[[["self"]],["datadirectories"]]],[11,"clone","goblin::pe::debug","",115,[[["self"]],["debugdata"]]],[11,"clone","","",116,[[["self"]],["imagedebugdirectory"]]],[11,"clone","","",117,[[["self"]],["codeviewpdb70debuginfo"]]],[11,"clone","goblin::pe::exception","",118,[[["self"]],["runtimefunction"]]],[11,"clone","","",119,[[["self"]],["register"]]],[11,"clone","","",122,[[["self"]],["stackframeoffset"]]],[11,"clone","","",123,[[["self"]],["unwindoperation"]]],[11,"clone","","",120,[[["self"]],["unwindcode"]]],[11,"clone","","",170,[[["self"]],["unwindcodeiterator"]]],[11,"clone","","",124,[[["self"]],["unwindhandler"]]],[11,"clone","","",121,[[["self"]],["unwindinfo"]]],[11,"clone","goblin::pe::export","",126,[[["self"]],["exportdirectorytable"]]],[11,"clone","goblin::pe::header","",131,[[["self"]],["dosheader"]]],[11,"clone","","",132,[[["self"]],["coffheader"]]],[11,"clone","","",133,[[["self"]],["header"]]],[11,"clone","goblin::pe::import","",134,[[["self"]],["hintnametableentry"]]],[11,"clone","","",139,[[["self"]],["syntheticimportlookuptableentry"]]],[11,"clone","goblin::pe::optional_header","",141,[[["self"]],["standardfields32"]]],[11,"clone","","",142,[[["self"]],["standardfields64"]]],[11,"clone","","",143,[[["self"]],["standardfields"]]],[11,"clone","","",144,[[["self"]],["windowsfields32"]]],[11,"clone","","",145,[[["self"]],["windowsfields64"]]],[11,"clone","","",146,[[["self"]],["optionalheader"]]],[11,"clone","goblin::pe::relocation","",147,[[["self"]],["relocation"]]],[11,"clone","goblin::pe::section_table","",149,[[["self"]],["sectiontable"]]],[11,"clone","goblin::pe::symbol","",150,[[["self"]],["symbol"]]],[11,"clone","","",151,[[["self"]],["auxfunctiondefinition"]]],[11,"clone","","",152,[[["self"]],["auxbeginandendfunction"]]],[11,"clone","","",153,[[["self"]],["auxweakexternal"]]],[11,"clone","","",154,[[["self"]],["auxsectiondefinition"]]],[11,"clone","goblin::archive","",156,[[["self"]],["memberheader"]]],[11,"clone","","",157,[[["self"]],["header"]]],[11,"clone","","",158,[[["self"]],["member"]]],[11,"default","goblin::strtab","",4,[[],["strtab"]]],[11,"default","goblin::container","",7,[[],["self"]]],[11,"default","","",6,[[],["self"]]],[11,"default","goblin","",0,[[],["hintdata"]]],[11,"default","goblin::elf::compression_header::compression_header32","",10,[[],["compressionheader"]]],[11,"default","goblin::elf::compression_header::compression_header64","",11,[[],["compressionheader"]]],[11,"default","goblin::elf::compression_header","",9,[[],["compressionheader"]]],[11,"default","goblin::elf::header::header32","",13,[[],["header"]]],[11,"default","goblin::elf::header::header64","",14,[[],["header"]]],[11,"default","goblin::elf::program_header","",15,[[],["programheader"]]],[11,"default","goblin::elf::program_header::program_header32","",16,[[],["programheader"]]],[11,"default","goblin::elf::program_header::program_header64","",17,[[],["programheader"]]],[11,"default","goblin::elf::section_header::section_header32","",19,[[],["sectionheader"]]],[11,"default","goblin::elf::section_header::section_header64","",20,[[],["sectionheader"]]],[11,"default","goblin::elf::section_header","",18,[[],["sectionheader"]]],[11,"default","goblin::elf::sym::sym32","",22,[[],["sym"]]],[11,"default","goblin::elf::sym::sym64","",23,[[],["sym"]]],[11,"default","goblin::elf::sym","",21,[[],["sym"]]],[11,"default","","",24,[[],["symtab"]]],[11,"default","goblin::elf::dynamic","",25,[[],["dyn"]]],[11,"default","","",27,[[],["dynamicinfo"]]],[11,"default","goblin::elf::dynamic::dyn32","",28,[[],["dyn"]]],[11,"default","","",29,[[],["dynamicinfo"]]],[11,"default","goblin::elf::dynamic::dyn64","",30,[[],["dyn"]]],[11,"default","","",31,[[],["dynamicinfo"]]],[11,"default","goblin::elf::reloc::reloc32","",33,[[],["rela"]]],[11,"default","","",34,[[],["rel"]]],[11,"default","goblin::elf::reloc::reloc64","",35,[[],["rela"]]],[11,"default","","",36,[[],["rel"]]],[11,"default","goblin::elf::reloc","",32,[[],["reloc"]]],[11,"default","","",37,[[],["relocsection"]]],[11,"default","goblin::mach::fat","",52,[[],["fatheader"]]],[11,"default","","",53,[[],["fatarch"]]],[11,"default","goblin::mach::header","",54,[[],["header32"]]],[11,"default","","",55,[[],["header64"]]],[11,"default","","",56,[[],["header"]]],[11,"default","goblin::mach::load_command","",77,[[],["self"]]],[11,"default","","",78,[[],["self"]]],[11,"default","","",92,[[],["dyldinfocommand"]]],[11,"default","goblin::mach::segment","",103,[[],["section"]]],[11,"default","","",105,[[],["segments"]]],[11,"default","goblin::mach::symbols","",109,[[],["symbolsctx"]]],[11,"default","","",168,[[],["symboliterator"]]],[11,"default","goblin::pe::data_directories","",113,[[],["datadirectory"]]],[11,"default","","",114,[[],["datadirectories"]]],[11,"default","goblin::pe::debug","",115,[[],["debugdata"]]],[11,"default","","",116,[[],["imagedebugdirectory"]]],[11,"default","","",117,[[],["codeviewpdb70debuginfo"]]],[11,"default","goblin::pe::exception","",118,[[],["runtimefunction"]]],[11,"default","goblin::pe::export","",126,[[],["exportdirectorytable"]]],[11,"default","","",127,[[],["exportdata"]]],[11,"default","","",128,[[],["export"]]],[11,"default","goblin::pe::header","",131,[[],["dosheader"]]],[11,"default","","",132,[[],["coffheader"]]],[11,"default","","",133,[[],["header"]]],[11,"default","goblin::pe::optional_header","",141,[[],["standardfields32"]]],[11,"default","","",142,[[],["standardfields64"]]],[11,"default","","",143,[[],["standardfields"]]],[11,"default","","",144,[[],["windowsfields32"]]],[11,"default","","",145,[[],["windowsfields64"]]],[11,"default","goblin::pe::relocation","",147,[[],["relocation"]]],[11,"default","","",148,[[],["relocations"]]],[11,"default","goblin::pe::section_table","",149,[[],["sectiontable"]]],[11,"default","goblin::pe::symbol","",150,[[],["symbol"]]],[11,"default","","",151,[[],["auxfunctiondefinition"]]],[11,"default","","",152,[[],["auxbeginandendfunction"]]],[11,"default","","",153,[[],["auxweakexternal"]]],[11,"default","","",154,[[],["auxsectiondefinition"]]],[11,"default","","",171,[[],["symboliterator"]]],[11,"default","goblin::archive","",159,[[],["index"]]],[11,"cmp","goblin::pe::exception","",119,[[["register"],["self"]],["ordering"]]],[11,"eq","goblin::container","",7,[[["self"],["container"]],["bool"]]],[11,"eq","","",6,[[["ctx"],["self"]],["bool"]]],[11,"ne","","",6,[[["ctx"],["self"]],["bool"]]],[11,"eq","goblin::elf::compression_header::compression_header32","",10,[[["self"],["compressionheader"]],["bool"]]],[11,"ne","","",10,[[["self"],["compressionheader"]],["bool"]]],[11,"eq","goblin::elf::compression_header::compression_header64","",11,[[["compressionheader"],["self"]],["bool"]]],[11,"ne","","",11,[[["compressionheader"],["self"]],["bool"]]],[11,"eq","goblin::elf::compression_header","",9,[[["self"],["compressionheader"]],["bool"]]],[11,"ne","","",9,[[["self"],["compressionheader"]],["bool"]]],[11,"eq","goblin::elf::header","",12,[[["header"],["self"]],["bool"]]],[11,"ne","","",12,[[["header"],["self"]],["bool"]]],[11,"eq","goblin::elf::header::header32","",13,[[["self"],["header"]],["bool"]]],[11,"ne","","",13,[[["self"],["header"]],["bool"]]],[11,"eq","goblin::elf::header::header64","",14,[[["self"],["header"]],["bool"]]],[11,"ne","","",14,[[["self"],["header"]],["bool"]]],[11,"eq","goblin::elf::program_header","",15,[[["programheader"],["self"]],["bool"]]],[11,"ne","","",15,[[["programheader"],["self"]],["bool"]]],[11,"eq","goblin::elf::program_header::program_header32","",16,[[["programheader"],["self"]],["bool"]]],[11,"ne","","",16,[[["programheader"],["self"]],["bool"]]],[11,"eq","goblin::elf::program_header::program_header64","",17,[[["self"],["programheader"]],["bool"]]],[11,"ne","","",17,[[["self"],["programheader"]],["bool"]]],[11,"eq","goblin::elf::section_header::section_header32","",19,[[["self"],["sectionheader"]],["bool"]]],[11,"ne","","",19,[[["self"],["sectionheader"]],["bool"]]],[11,"eq","goblin::elf::section_header::section_header64","",20,[[["sectionheader"],["self"]],["bool"]]],[11,"ne","","",20,[[["sectionheader"],["self"]],["bool"]]],[11,"eq","goblin::elf::section_header","",18,[[["self"],["sectionheader"]],["bool"]]],[11,"ne","","",18,[[["self"],["sectionheader"]],["bool"]]],[11,"eq","goblin::elf::sym::sym32","",22,[[["sym"],["self"]],["bool"]]],[11,"ne","","",22,[[["sym"],["self"]],["bool"]]],[11,"eq","goblin::elf::sym::sym64","",23,[[["self"],["sym"]],["bool"]]],[11,"ne","","",23,[[["self"],["sym"]],["bool"]]],[11,"eq","goblin::elf::sym","",21,[[["sym"],["self"]],["bool"]]],[11,"ne","","",21,[[["sym"],["self"]],["bool"]]],[11,"eq","goblin::elf::dynamic","",25,[[["self"],["dyn"]],["bool"]]],[11,"ne","","",25,[[["self"],["dyn"]],["bool"]]],[11,"eq","","",27,[[["dynamicinfo"],["self"]],["bool"]]],[11,"ne","","",27,[[["dynamicinfo"],["self"]],["bool"]]],[11,"eq","goblin::elf::dynamic::dyn32","",28,[[["dyn"],["self"]],["bool"]]],[11,"ne","","",28,[[["dyn"],["self"]],["bool"]]],[11,"eq","","",29,[[["self"],["dynamicinfo"]],["bool"]]],[11,"ne","","",29,[[["self"],["dynamicinfo"]],["bool"]]],[11,"eq","goblin::elf::dynamic::dyn64","",30,[[["self"],["dyn"]],["bool"]]],[11,"ne","","",30,[[["self"],["dyn"]],["bool"]]],[11,"eq","","",31,[[["dynamicinfo"],["self"]],["bool"]]],[11,"ne","","",31,[[["dynamicinfo"],["self"]],["bool"]]],[11,"eq","goblin::elf::reloc::reloc32","",33,[[["self"],["rela"]],["bool"]]],[11,"ne","","",33,[[["self"],["rela"]],["bool"]]],[11,"eq","","",34,[[["self"],["rel"]],["bool"]]],[11,"ne","","",34,[[["self"],["rel"]],["bool"]]],[11,"eq","goblin::elf::reloc::reloc64","",35,[[["self"],["rela"]],["bool"]]],[11,"ne","","",35,[[["self"],["rela"]],["bool"]]],[11,"eq","","",36,[[["rel"],["self"]],["bool"]]],[11,"ne","","",36,[[["rel"],["self"]],["bool"]]],[11,"eq","goblin::elf::reloc","",32,[[["self"],["reloc"]],["bool"]]],[11,"ne","","",32,[[["self"],["reloc"]],["bool"]]],[11,"eq","goblin::pe::data_directories","",113,[[["datadirectory"],["self"]],["bool"]]],[11,"ne","","",113,[[["datadirectory"],["self"]],["bool"]]],[11,"eq","","",114,[[["self"],["datadirectories"]],["bool"]]],[11,"ne","","",114,[[["self"],["datadirectories"]],["bool"]]],[11,"eq","goblin::pe::debug","",115,[[["self"],["debugdata"]],["bool"]]],[11,"ne","","",115,[[["self"],["debugdata"]],["bool"]]],[11,"eq","","",116,[[["imagedebugdirectory"],["self"]],["bool"]]],[11,"ne","","",116,[[["imagedebugdirectory"],["self"]],["bool"]]],[11,"eq","","",117,[[["codeviewpdb70debuginfo"],["self"]],["bool"]]],[11,"ne","","",117,[[["codeviewpdb70debuginfo"],["self"]],["bool"]]],[11,"eq","goblin::pe::exception","",118,[[["runtimefunction"],["self"]],["bool"]]],[11,"ne","","",118,[[["runtimefunction"],["self"]],["bool"]]],[11,"eq","","",119,[[["register"],["self"]],["bool"]]],[11,"ne","","",119,[[["register"],["self"]],["bool"]]],[11,"eq","","",122,[[["self"],["stackframeoffset"]],["bool"]]],[11,"ne","","",122,[[["self"],["stackframeoffset"]],["bool"]]],[11,"eq","","",123,[[["self"],["unwindoperation"]],["bool"]]],[11,"ne","","",123,[[["self"],["unwindoperation"]],["bool"]]],[11,"eq","","",120,[[["unwindcode"],["self"]],["bool"]]],[11,"ne","","",120,[[["unwindcode"],["self"]],["bool"]]],[11,"eq","","",124,[[["self"],["unwindhandler"]],["bool"]]],[11,"ne","","",124,[[["self"],["unwindhandler"]],["bool"]]],[11,"eq","goblin::pe::export","",126,[[["self"],["exportdirectorytable"]],["bool"]]],[11,"ne","","",126,[[["self"],["exportdirectorytable"]],["bool"]]],[11,"eq","goblin::pe::header","",131,[[["dosheader"],["self"]],["bool"]]],[11,"ne","","",131,[[["dosheader"],["self"]],["bool"]]],[11,"eq","","",132,[[["self"],["coffheader"]],["bool"]]],[11,"ne","","",132,[[["self"],["coffheader"]],["bool"]]],[11,"eq","","",133,[[["self"],["header"]],["bool"]]],[11,"ne","","",133,[[["self"],["header"]],["bool"]]],[11,"eq","goblin::pe::optional_header","",141,[[["self"],["standardfields32"]],["bool"]]],[11,"ne","","",141,[[["self"],["standardfields32"]],["bool"]]],[11,"eq","","",142,[[["self"],["standardfields64"]],["bool"]]],[11,"ne","","",142,[[["self"],["standardfields64"]],["bool"]]],[11,"eq","","",143,[[["standardfields"],["self"]],["bool"]]],[11,"ne","","",143,[[["standardfields"],["self"]],["bool"]]],[11,"eq","","",144,[[["windowsfields32"],["self"]],["bool"]]],[11,"ne","","",144,[[["windowsfields32"],["self"]],["bool"]]],[11,"eq","","",145,[[["self"],["windowsfields64"]],["bool"]]],[11,"ne","","",145,[[["self"],["windowsfields64"]],["bool"]]],[11,"eq","","",146,[[["optionalheader"],["self"]],["bool"]]],[11,"ne","","",146,[[["optionalheader"],["self"]],["bool"]]],[11,"eq","goblin::pe::relocation","",147,[[["relocation"],["self"]],["bool"]]],[11,"ne","","",147,[[["relocation"],["self"]],["bool"]]],[11,"eq","goblin::pe::section_table","",149,[[["self"],["sectiontable"]],["bool"]]],[11,"ne","","",149,[[["self"],["sectiontable"]],["bool"]]],[11,"eq","goblin::pe::symbol","",150,[[["self"],["symbol"]],["bool"]]],[11,"ne","","",150,[[["self"],["symbol"]],["bool"]]],[11,"eq","","",151,[[["self"],["auxfunctiondefinition"]],["bool"]]],[11,"ne","","",151,[[["self"],["auxfunctiondefinition"]],["bool"]]],[11,"eq","","",152,[[["auxbeginandendfunction"],["self"]],["bool"]]],[11,"ne","","",152,[[["auxbeginandendfunction"],["self"]],["bool"]]],[11,"eq","","",153,[[["self"],["auxweakexternal"]],["bool"]]],[11,"ne","","",153,[[["self"],["auxweakexternal"]],["bool"]]],[11,"eq","","",154,[[["self"],["auxsectiondefinition"]],["bool"]]],[11,"ne","","",154,[[["self"],["auxsectiondefinition"]],["bool"]]],[11,"eq","goblin::archive","",156,[[["memberheader"],["self"]],["bool"]]],[11,"ne","","",156,[[["memberheader"],["self"]],["bool"]]],[11,"eq","","",157,[[["self"],["header"]],["bool"]]],[11,"ne","","",157,[[["self"],["header"]],["bool"]]],[11,"eq","","",158,[[["self"],["member"]],["bool"]]],[11,"ne","","",158,[[["self"],["member"]],["bool"]]],[11,"eq","","",160,[[["self"],["indextype"]],["bool"]]],[11,"partial_cmp","goblin::pe::exception","",119,[[["register"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",119,[[["register"],["self"]],["bool"]]],[11,"le","","",119,[[["register"],["self"]],["bool"]]],[11,"gt","","",119,[[["register"],["self"]],["bool"]]],[11,"ge","","",119,[[["register"],["self"]],["bool"]]],[11,"deref","goblin::mach::segment","",105,[[["self"]]]],[11,"deref_mut","","",105,[[["self"]]]],[11,"fmt","goblin::error","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","goblin::strtab","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","goblin::container","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","goblin","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","goblin::elf::compression_header::compression_header32","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","goblin::elf::compression_header::compression_header64","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","goblin::elf::compression_header","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","goblin::elf::header","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","goblin::elf::header::header32","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","goblin::elf::header::header64","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","goblin::elf::program_header","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","goblin::elf::program_header::program_header32","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","goblin::elf::program_header::program_header64","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","goblin::elf::section_header::section_header32","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","goblin::elf::section_header::section_header64","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","goblin::elf::section_header","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","goblin::elf::sym::sym32","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","goblin::elf::sym::sym64","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","goblin::elf::sym","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","goblin::elf::dynamic","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","goblin::elf::dynamic::dyn32","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","goblin::elf::dynamic::dyn64","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","goblin::elf::reloc::reloc32","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","goblin::elf::reloc::reloc64","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","goblin::elf::reloc","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",163,[[["formatter"],["self"]],["result"]]],[11,"fmt","goblin::elf::note","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","goblin::elf","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","goblin::elf32::gnu_hash","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","goblin::elf64::gnu_hash","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","goblin::mach::exports","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",51,[[["formatter"],["self"]],["result"]]],[11,"fmt","goblin::mach::fat","",52,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","goblin::mach::header","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",56,[[["formatter"],["self"]],["result"]]],[11,"fmt","goblin::mach::imports","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",58,[[["formatter"],["self"]],["result"]]],[11,"fmt","goblin::mach::load_command","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",60,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",61,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",62,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",64,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",65,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",66,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",67,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",68,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",69,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",70,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",71,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",72,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",73,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",74,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",75,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",76,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",77,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",78,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",79,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",80,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",81,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",82,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",85,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",86,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",87,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",88,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",89,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",90,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",91,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",93,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",94,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",95,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",96,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",97,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",98,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",99,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",101,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",100,[[["self"],["formatter"]],["result"]]],[11,"fmt","goblin::mach::relocation","",102,[[["formatter"],["self"]],["result"]]],[11,"fmt","goblin::mach::segment","",103,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",104,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",105,[[["self"],["formatter"]],["result"]]],[11,"fmt","goblin::mach::symbols","",106,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",107,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",108,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",109,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",110,[[["formatter"],["self"]],["result"]]],[11,"fmt","goblin::mach","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","goblin::pe::data_directories","",113,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",114,[[["self"],["formatter"]],["result"]]],[11,"fmt","goblin::pe::debug","",115,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",116,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",117,[[["self"],["formatter"]],["result"]]],[11,"fmt","goblin::pe::exception","",118,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",169,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",119,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",122,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",123,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",120,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",170,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",124,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",121,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",125,[[["formatter"],["self"]],["result"]]],[11,"fmt","goblin::pe::export","",126,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",129,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",127,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",130,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",128,[[["self"],["formatter"]],["result"]]],[11,"fmt","goblin::pe::header","",131,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",132,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",133,[[["self"],["formatter"]],["result"]]],[11,"fmt","goblin::pe::import","",134,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",139,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",135,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",136,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",137,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",138,[[["self"],["formatter"]],["result"]]],[11,"fmt","goblin::pe::optional_header","",141,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",142,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",143,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",144,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",145,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",146,[[["self"],["formatter"]],["result"]]],[11,"fmt","goblin::pe::relocation","",147,[[["self"],["formatter"]],["result"]]],[11,"fmt","goblin::pe::section_table","",149,[[["self"],["formatter"]],["result"]]],[11,"fmt","goblin::pe::symbol","",150,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",151,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",152,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",153,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",154,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",155,[[["formatter"],["self"]],["result"]]],[11,"fmt","goblin::pe","",111,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",112,[[["self"],["formatter"]],["result"]]],[11,"fmt","goblin::archive","",156,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",157,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",158,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",159,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",160,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",161,[[["self"],["formatter"]],["result"]]],[11,"fmt","goblin::error","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","goblin::mach::load_command","",59,[[["formatter"],["self"]],["result"]]],[11,"fmt","goblin::pe::exception","",119,[[["formatter"],["self"]],["result"]]],[11,"index","goblin::strtab","Gets str reference at starting at byte `offset`. NB: this…",4,[[["self"],["usize"]]]],[11,"source","goblin::error","",3,[[["self"]],[["option",["error"]],["error"]]]],[11,"from_ctx","goblin::elf::note","",38,[[["endian"]],["self"]]],[11,"from_ctx","","",39,[[["endian"]],["self"]]],[11,"from_ctx","goblin::mach::load_command","",60,[[["endian"]],["self"]]],[11,"from_ctx","","",61,[[["endian"]],["self"]]],[11,"from_ctx","","",62,[[["endian"]],["self"]]],[11,"from_ctx","","",63,[[["endian"]],["self"]]],[11,"from_ctx","","",64,[[["endian"]],["self"]]],[11,"from_ctx","","",65,[[["endian"]],["self"]]],[11,"from_ctx","","",66,[[["endian"]],["self"]]],[11,"from_ctx","","",67,[[["endian"]],["self"]]],[11,"from_ctx","","",68,[[["endian"]],["self"]]],[11,"from_ctx","","",69,[[["endian"]],["self"]]],[11,"from_ctx","","",70,[[["endian"]],["self"]]],[11,"from_ctx","","",71,[[["endian"]],["self"]]],[11,"from_ctx","","",72,[[["endian"]],["self"]]],[11,"from_ctx","","",73,[[["endian"]],["self"]]],[11,"from_ctx","","",75,[[["endian"]],["self"]]],[11,"from_ctx","","",76,[[["endian"]],["self"]]],[11,"from_ctx","","",77,[[["endian"]],["self"]]],[11,"from_ctx","","",78,[[["endian"]],["self"]]],[11,"from_ctx","","",79,[[["endian"]],["self"]]],[11,"from_ctx","","",80,[[["endian"]],["self"]]],[11,"from_ctx","","",81,[[["endian"]],["self"]]],[11,"from_ctx","","",82,[[["endian"]],["self"]]],[11,"from_ctx","","",83,[[["endian"]],["self"]]],[11,"from_ctx","","",84,[[["endian"]],["self"]]],[11,"from_ctx","","",85,[[["endian"]],["self"]]],[11,"from_ctx","","",86,[[["endian"]],["self"]]],[11,"from_ctx","","",87,[[["endian"]],["self"]]],[11,"from_ctx","","",88,[[["endian"]],["self"]]],[11,"from_ctx","","",89,[[["endian"]],["self"]]],[11,"from_ctx","","",90,[[["endian"]],["self"]]],[11,"from_ctx","","",91,[[["endian"]],["self"]]],[11,"from_ctx","","",93,[[["endian"]],["self"]]],[11,"from_ctx","","",94,[[["endian"]],["self"]]],[11,"from_ctx","","",95,[[["endian"]],["self"]]],[11,"from_ctx","","",96,[[["endian"]],["self"]]],[11,"from_ctx","","",97,[[["endian"]],["self"]]],[11,"from_ctx","","",98,[[["endian"]],["self"]]],[11,"from_ctx","","",99,[[["endian"]],["self"]]],[11,"from_ctx","goblin::mach::relocation","",102,[[["endian"]],["self"]]],[11,"from_ctx","goblin::mach::symbols","",106,[[["endian"]],["self"]]],[11,"from_ctx","","",107,[[["endian"]],["self"]]],[11,"from_ctx","goblin::pe::header","",132,[[["endian"]],["self"]]],[11,"from_ctx","goblin::pe::relocation","",147,[[["endian"]],["self"]]],[11,"from_ctx","goblin::pe::symbol","",150,[[["endian"]],["self"]]],[11,"from_ctx","","",151,[[["endian"]],["self"]]],[11,"from_ctx","","",152,[[["endian"]],["self"]]],[11,"from_ctx","","",153,[[["endian"]],["self"]]],[11,"from_ctx","","",154,[[["endian"]],["self"]]],[11,"try_from_ctx","goblin::elf::compression_header::compression_header32","",10,[[["endian"]],["result"]]],[11,"try_from_ctx","goblin::elf::compression_header::compression_header64","",11,[[["endian"]],["result"]]],[11,"try_from_ctx","goblin::elf::compression_header","",9,[[["ctx"]],["result"]]],[11,"try_from_ctx","goblin::elf::header","",12,[[["endian"]],["result"]]],[11,"try_from_ctx","goblin::elf::header::header32","",13,[[["endian"]],["result"]]],[11,"try_from_ctx","goblin::elf::header::header64","",14,[[["endian"]],["result"]]],[11,"try_from_ctx","goblin::elf::program_header","",15,[[["ctx"]],["result"]]],[11,"try_from_ctx","goblin::elf::program_header::program_header32","",16,[[["endian"]],["result"]]],[11,"try_from_ctx","goblin::elf::program_header::program_header64","",17,[[["endian"]],["result"]]],[11,"try_from_ctx","goblin::elf::section_header::section_header32","",19,[[["endian"]],["result"]]],[11,"try_from_ctx","goblin::elf::section_header::section_header64","",20,[[["endian"]],["result"]]],[11,"try_from_ctx","goblin::elf::section_header","",18,[[["ctx"]],["result"]]],[11,"try_from_ctx","goblin::elf::sym::sym32","",22,[[["endian"]],["result"]]],[11,"try_from_ctx","goblin::elf::sym::sym64","",23,[[["endian"]],["result"]]],[11,"try_from_ctx","goblin::elf::sym","",21,[[["ctx"]],["result"]]],[11,"try_from_ctx","goblin::elf::dynamic","",25,[[["ctx"]],["result"]]],[11,"try_from_ctx","goblin::elf::dynamic::dyn32","",28,[[["endian"]],["result"]]],[11,"try_from_ctx","goblin::elf::dynamic::dyn64","",30,[[["endian"]],["result"]]],[11,"try_from_ctx","goblin::elf::reloc::reloc32","",33,[[["endian"]],["result"]]],[11,"try_from_ctx","","",34,[[["endian"]],["result"]]],[11,"try_from_ctx","goblin::elf::reloc::reloc64","",35,[[["endian"]],["result"]]],[11,"try_from_ctx","","",36,[[["endian"]],["result"]]],[11,"try_from_ctx","goblin::elf::reloc","",32,[[],["result"]]],[11,"try_from_ctx","goblin::elf::note","",38,[[["endian"]],["result"]]],[11,"try_from_ctx","","",39,[[["endian"]],["result"]]],[11,"try_from_ctx","","",42,[[],["result"]]],[11,"try_from_ctx","goblin::elf","",8,[[],["result"]]],[11,"try_from_ctx","goblin::mach::fat","",52,[[["endian"]],["result"]]],[11,"try_from_ctx","","",53,[[["endian"]],["result"]]],[11,"try_from_ctx","goblin::mach::header","",54,[[["endian"]],["result"]]],[11,"try_from_ctx","","",55,[[["endian"]],["result"]]],[11,"try_from_ctx","","",56,[[["ctx"]],["result"]]],[11,"try_from_ctx","goblin::mach::load_command","",59,[[["endian"]],["result"]]],[11,"try_from_ctx","","",60,[[["endian"]],["result"]]],[11,"try_from_ctx","","",61,[[["endian"]],["result"]]],[11,"try_from_ctx","","",62,[[["endian"]],["result"]]],[11,"try_from_ctx","","",63,[[["endian"]],["result"]]],[11,"try_from_ctx","","",64,[[["endian"]],["result"]]],[11,"try_from_ctx","","",65,[[["endian"]],["result"]]],[11,"try_from_ctx","","",66,[[["endian"]],["result"]]],[11,"try_from_ctx","","",67,[[["endian"]],["result"]]],[11,"try_from_ctx","","",68,[[["endian"]],["result"]]],[11,"try_from_ctx","","",69,[[["endian"]],["result"]]],[11,"try_from_ctx","","",70,[[["endian"]],["result"]]],[11,"try_from_ctx","","",71,[[["endian"]],["result"]]],[11,"try_from_ctx","","",72,[[["endian"]],["result"]]],[11,"try_from_ctx","","",73,[[["endian"]],["result"]]],[11,"try_from_ctx","","",74,[[["endian"]],["result"]]],[11,"try_from_ctx","","",75,[[["endian"]],["result"]]],[11,"try_from_ctx","","",76,[[["endian"]],["result"]]],[11,"try_from_ctx","","",77,[[["endian"]],["result"]]],[11,"try_from_ctx","","",78,[[["endian"]],["result"]]],[11,"try_from_ctx","","",79,[[["endian"]],["result"]]],[11,"try_from_ctx","","",80,[[["endian"]],["result"]]],[11,"try_from_ctx","","",81,[[["endian"]],["result"]]],[11,"try_from_ctx","","",82,[[["endian"]],["result"]]],[11,"try_from_ctx","","",83,[[["endian"]],["result"]]],[11,"try_from_ctx","","",84,[[["endian"]],["result"]]],[11,"try_from_ctx","","",85,[[["endian"]],["result"]]],[11,"try_from_ctx","","",86,[[["endian"]],["result"]]],[11,"try_from_ctx","","",87,[[["endian"]],["result"]]],[11,"try_from_ctx","","",88,[[["endian"]],["result"]]],[11,"try_from_ctx","","",89,[[["endian"]],["result"]]],[11,"try_from_ctx","","",90,[[["endian"]],["result"]]],[11,"try_from_ctx","","",91,[[["endian"]],["result"]]],[11,"try_from_ctx","","",92,[[["endian"]],["result"]]],[11,"try_from_ctx","","",93,[[["endian"]],["result"]]],[11,"try_from_ctx","","",94,[[["endian"]],["result"]]],[11,"try_from_ctx","","",95,[[["endian"]],["result"]]],[11,"try_from_ctx","","",96,[[["endian"]],["result"]]],[11,"try_from_ctx","","",97,[[["endian"]],["result"]]],[11,"try_from_ctx","","",98,[[["endian"]],["result"]]],[11,"try_from_ctx","","",99,[[["endian"]],["result"]]],[11,"try_from_ctx","","",101,[[["endian"]],["result"]]],[11,"try_from_ctx","goblin::mach::relocation","",102,[[["endian"]],["result"]]],[11,"try_from_ctx","goblin::mach::segment","",103,[[["ctx"]],["result"]]],[11,"try_from_ctx","goblin::mach::symbols","",106,[[["endian"]],["result"]]],[11,"try_from_ctx","","",107,[[["endian"]],["result"]]],[11,"try_from_ctx","","",108,[[["ctx"]],["result"]]],[11,"try_from_ctx","","",110,[[["symbolsctx"],["t"]],["result"]]],[11,"try_from_ctx","goblin::pe::data_directories","",113,[[["endian"]],["result"]]],[11,"try_from_ctx","goblin::pe::debug","",116,[[["endian"]],["result"]]],[11,"try_from_ctx","goblin::pe::exception","",118,[[["endian"]],["result"]]],[11,"try_from_ctx","goblin::pe::export","",126,[[["endian"]],["result"]]],[11,"try_from_ctx","","",130,[[["endian"]],["result"]]],[11,"try_from_ctx","goblin::pe::header","",132,[[["endian"]],["result"]]],[11,"try_from_ctx","goblin::pe::import","",135,[[["endian"]],["result"]]],[11,"try_from_ctx","goblin::pe::optional_header","",141,[[["endian"]],["result"]]],[11,"try_from_ctx","","",142,[[["endian"]],["result"]]],[11,"try_from_ctx","","",144,[[["endian"]],["result"]]],[11,"try_from_ctx","","",145,[[["endian"]],["result"]]],[11,"try_from_ctx","","",146,[[["endian"]],["result"]]],[11,"try_from_ctx","goblin::pe::relocation","",147,[[["endian"]],["result"]]],[11,"try_from_ctx","goblin::pe::symbol","",150,[[["endian"]],["result"]]],[11,"try_from_ctx","","",151,[[["endian"]],["result"]]],[11,"try_from_ctx","","",152,[[["endian"]],["result"]]],[11,"try_from_ctx","","",153,[[["endian"]],["result"]]],[11,"try_from_ctx","","",154,[[["endian"]],["result"]]],[11,"try_from_ctx","goblin::archive","",156,[[["endian"]],["result"]]],[11,"into_ctx","goblin::elf::compression_header","",9,[[["ctx"]]]],[11,"into_ctx","goblin::elf::header","",12,[[["ctx"]]]],[11,"into_ctx","goblin::elf::section_header","",18,[[["ctx"]]]],[11,"into_ctx","goblin::elf::sym","",21,[[["ctx"]]]],[11,"into_ctx","goblin::elf::reloc","Writes the relocation into `bytes`",32,[[]]],[11,"into_ctx","goblin::elf::note","",38,[[["endian"]]]],[11,"into_ctx","","",39,[[["endian"]]]],[11,"into_ctx","goblin::mach::header","",56,[[["ctx"]]]],[11,"into_ctx","goblin::mach::load_command","",60,[[["endian"]]]],[11,"into_ctx","","",61,[[["endian"]]]],[11,"into_ctx","","",62,[[["endian"]]]],[11,"into_ctx","","",63,[[["endian"]]]],[11,"into_ctx","","",64,[[["endian"]]]],[11,"into_ctx","","",65,[[["endian"]]]],[11,"into_ctx","","",66,[[["endian"]]]],[11,"into_ctx","","",67,[[["endian"]]]],[11,"into_ctx","","",68,[[["endian"]]]],[11,"into_ctx","","",69,[[["endian"]]]],[11,"into_ctx","","",70,[[["endian"]]]],[11,"into_ctx","","",71,[[["endian"]]]],[11,"into_ctx","","",72,[[["endian"]]]],[11,"into_ctx","","",73,[[["endian"]]]],[11,"into_ctx","","",75,[[["endian"]]]],[11,"into_ctx","","",76,[[["endian"]]]],[11,"into_ctx","","",77,[[["endian"]]]],[11,"into_ctx","","",78,[[["endian"]]]],[11,"into_ctx","","",79,[[["endian"]]]],[11,"into_ctx","","",80,[[["endian"]]]],[11,"into_ctx","","",81,[[["endian"]]]],[11,"into_ctx","","",82,[[["endian"]]]],[11,"into_ctx","","",83,[[["endian"]]]],[11,"into_ctx","","",84,[[["endian"]]]],[11,"into_ctx","","",85,[[["endian"]]]],[11,"into_ctx","","",86,[[["endian"]]]],[11,"into_ctx","","",87,[[["endian"]]]],[11,"into_ctx","","",88,[[["endian"]]]],[11,"into_ctx","","",89,[[["endian"]]]],[11,"into_ctx","","",90,[[["endian"]]]],[11,"into_ctx","","",91,[[["endian"]]]],[11,"into_ctx","","",93,[[["endian"]]]],[11,"into_ctx","","",94,[[["endian"]]]],[11,"into_ctx","","",95,[[["endian"]]]],[11,"into_ctx","","",96,[[["endian"]]]],[11,"into_ctx","","",97,[[["endian"]]]],[11,"into_ctx","","",98,[[["endian"]]]],[11,"into_ctx","","",99,[[["endian"]]]],[11,"into_ctx","goblin::mach::relocation","",102,[[["endian"]]]],[11,"into_ctx","goblin::mach::segment","",103,[[["ctx"]]]],[11,"into_ctx","","",104,[[["ctx"]]]],[11,"into_ctx","goblin::mach::symbols","",106,[[["endian"]]]],[11,"into_ctx","","",107,[[["endian"]]]],[11,"into_ctx","","",108,[[["ctx"]]]],[11,"into_ctx","goblin::pe::header","",132,[[["endian"]]]],[11,"into_ctx","goblin::pe::relocation","",147,[[["endian"]]]],[11,"into_ctx","goblin::pe::section_table","",149,[[["endian"]]]],[11,"into_ctx","goblin::pe::symbol","",150,[[["endian"]]]],[11,"into_ctx","","",151,[[["endian"]]]],[11,"into_ctx","","",152,[[["endian"]]]],[11,"into_ctx","","",153,[[["endian"]]]],[11,"into_ctx","","",154,[[["endian"]]]],[11,"try_into_ctx","goblin::elf::compression_header::compression_header32","",10,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","goblin::elf::compression_header::compression_header64","",11,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","goblin::elf::compression_header","",9,[[["ctx"]],[["usize"],["result",["usize"]]]]],[11,"try_into_ctx","goblin::elf::header","",12,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","goblin::elf::header::header32","a Pwrite impl for Header: note we use the endianness value…",13,[[["endian"]],[["usize"],["result",["usize"]]]]],[11,"try_into_ctx","goblin::elf::header::header64","a Pwrite impl for Header: note we use the endianness value…",14,[[["endian"]],[["usize"],["result",["usize"]]]]],[11,"try_into_ctx","goblin::elf::program_header","",15,[[["ctx"]],[["usize"],["result",["usize"]]]]],[11,"try_into_ctx","goblin::elf::program_header::program_header32","",16,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","goblin::elf::program_header::program_header64","",17,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","goblin::elf::section_header::section_header32","",19,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","goblin::elf::section_header::section_header64","",20,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","goblin::elf::section_header","",18,[[["ctx"]],[["usize"],["result",["usize"]]]]],[11,"try_into_ctx","goblin::elf::sym::sym32","",22,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","goblin::elf::sym::sym64","",23,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","goblin::elf::sym","",21,[[["ctx"]],[["usize"],["result",["usize"]]]]],[11,"try_into_ctx","goblin::elf::dynamic","",25,[[["ctx"]],[["usize"],["result",["usize"]]]]],[11,"try_into_ctx","goblin::elf::dynamic::dyn32","",28,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","goblin::elf::dynamic::dyn64","",30,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","goblin::elf::reloc::reloc32","",33,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","","",34,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","goblin::elf::reloc::reloc64","",35,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","","",36,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","goblin::elf::reloc","Writes the relocation into `bytes`",32,[[],[["usize"],["result",["usize"]]]]],[11,"try_into_ctx","goblin::elf::note","",38,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","","",39,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","goblin::mach::fat","",52,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","","",53,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","goblin::mach::header","",54,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","","",55,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","","",56,[[["ctx"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","goblin::mach::load_command","",59,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","","",60,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","","",61,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","","",62,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","","",63,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","","",64,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","","",65,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","","",66,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","","",67,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","","",68,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","","",69,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","","",70,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","","",71,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","","",72,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","","",73,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","","",75,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","","",76,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","","",77,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","","",78,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","","",79,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","","",80,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","","",81,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","","",82,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","","",83,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","","",84,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","","",85,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","","",86,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","","",87,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","","",88,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","","",89,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","","",90,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","","",91,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","","",92,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","","",93,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","","",94,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","","",95,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","","",96,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","","",97,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","","",98,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","","",99,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","goblin::mach::relocation","",102,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","goblin::mach::segment","",103,[[["ctx"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","","",104,[[["ctx"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","goblin::mach::symbols","",106,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","","",107,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","","",108,[[["ctx"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","goblin::pe::data_directories","",113,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","goblin::pe::debug","",116,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","goblin::pe::exception","",118,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","goblin::pe::export","",126,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","goblin::pe::header","",132,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","goblin::pe::import","",135,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","goblin::pe::optional_header","",141,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","","",142,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","","",144,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","","",145,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","goblin::pe::relocation","",147,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","goblin::pe::section_table","",149,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","goblin::pe::symbol","",150,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","","",151,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","","",152,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","","",153,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","","",154,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"try_into_ctx","goblin::archive","",156,[[["endian"]],[["result",["usize"]],["usize"]]]],[11,"size_with","goblin::elf::compression_header::compression_header32","",10,[[["endian"]],["usize"]]],[11,"size_with","goblin::elf::compression_header::compression_header64","",11,[[["endian"]],["usize"]]],[11,"size_with","goblin::elf::compression_header","",9,[[["ctx"]],["usize"]]],[11,"size_with","goblin::elf::header","",12,[[["ctx"]],["usize"]]],[11,"size_with","goblin::elf::program_header","",15,[[["ctx"]],["usize"]]],[11,"size_with","goblin::elf::program_header::program_header32","",16,[[["endian"]],["usize"]]],[11,"size_with","goblin::elf::program_header::program_header64","",17,[[["endian"]],["usize"]]],[11,"size_with","goblin::elf::section_header::section_header32","",19,[[["endian"]],["usize"]]],[11,"size_with","goblin::elf::section_header::section_header64","",20,[[["endian"]],["usize"]]],[11,"size_with","goblin::elf::section_header","",18,[[["ctx"]],["usize"]]],[11,"size_with","goblin::elf::sym::sym32","",22,[[["endian"]],["usize"]]],[11,"size_with","goblin::elf::sym::sym64","",23,[[["endian"]],["usize"]]],[11,"size_with","goblin::elf::sym","",21,[[["ctx"]],["usize"]]],[11,"size_with","goblin::elf::dynamic","",25,[[["ctx"]],["usize"]]],[11,"size_with","goblin::elf::dynamic::dyn32","",28,[[["endian"]],["usize"]]],[11,"size_with","goblin::elf::dynamic::dyn64","",30,[[["endian"]],["usize"]]],[11,"size_with","goblin::elf::reloc::reloc32","",33,[[["endian"]],["usize"]]],[11,"size_with","","",34,[[["endian"]],["usize"]]],[11,"size_with","goblin::elf::reloc::reloc64","",35,[[["endian"]],["usize"]]],[11,"size_with","","",36,[[["endian"]],["usize"]]],[11,"size_with","goblin::elf::reloc","",32,[[],["usize"]]],[11,"size_with","goblin::elf::note","",38,[[["endian"]],["usize"]]],[11,"size_with","","",39,[[["endian"]],["usize"]]],[11,"size_with","goblin::mach::fat","",52,[[["endian"]],["usize"]]],[11,"size_with","","",53,[[["endian"]],["usize"]]],[11,"size_with","goblin::mach::header","",54,[[["endian"]],["usize"]]],[11,"size_with","","",55,[[["endian"]],["usize"]]],[11,"size_with","","",56,[[["ctx"]],["usize"]]],[11,"size_with","","",56,[[["container"]],["usize"]]],[11,"size_with","goblin::mach::load_command","",59,[[["endian"]],["usize"]]],[11,"size_with","","",60,[[["endian"]],["usize"]]],[11,"size_with","","",61,[[["endian"]],["usize"]]],[11,"size_with","","",62,[[["endian"]],["usize"]]],[11,"size_with","","",63,[[["endian"]],["usize"]]],[11,"size_with","","",64,[[["endian"]],["usize"]]],[11,"size_with","","",65,[[["endian"]],["usize"]]],[11,"size_with","","",66,[[["endian"]],["usize"]]],[11,"size_with","","",67,[[["endian"]],["usize"]]],[11,"size_with","","",68,[[["endian"]],["usize"]]],[11,"size_with","","",69,[[["endian"]],["usize"]]],[11,"size_with","","",70,[[["endian"]],["usize"]]],[11,"size_with","","",71,[[["endian"]],["usize"]]],[11,"size_with","","",72,[[["endian"]],["usize"]]],[11,"size_with","","",73,[[["endian"]],["usize"]]],[11,"size_with","","",75,[[["endian"]],["usize"]]],[11,"size_with","","",76,[[["endian"]],["usize"]]],[11,"size_with","","",77,[[["endian"]],["usize"]]],[11,"size_with","","",78,[[["endian"]],["usize"]]],[11,"size_with","","",79,[[["endian"]],["usize"]]],[11,"size_with","","",80,[[["endian"]],["usize"]]],[11,"size_with","","",81,[[["endian"]],["usize"]]],[11,"size_with","","",82,[[["endian"]],["usize"]]],[11,"size_with","","",83,[[["endian"]],["usize"]]],[11,"size_with","","",84,[[["endian"]],["usize"]]],[11,"size_with","","",85,[[["endian"]],["usize"]]],[11,"size_with","","",86,[[["endian"]],["usize"]]],[11,"size_with","","",87,[[["endian"]],["usize"]]],[11,"size_with","","",88,[[["endian"]],["usize"]]],[11,"size_with","","",89,[[["endian"]],["usize"]]],[11,"size_with","","",90,[[["endian"]],["usize"]]],[11,"size_with","","",91,[[["endian"]],["usize"]]],[11,"size_with","","",92,[[["endian"]],["usize"]]],[11,"size_with","","",93,[[["endian"]],["usize"]]],[11,"size_with","","",94,[[["endian"]],["usize"]]],[11,"size_with","","",95,[[["endian"]],["usize"]]],[11,"size_with","","",96,[[["endian"]],["usize"]]],[11,"size_with","","",97,[[["endian"]],["usize"]]],[11,"size_with","","",98,[[["endian"]],["usize"]]],[11,"size_with","","",99,[[["endian"]],["usize"]]],[11,"size_with","goblin::mach::relocation","",102,[[["endian"]],["usize"]]],[11,"size_with","goblin::mach::segment","",103,[[["ctx"]],["usize"]]],[11,"size_with","","",104,[[["ctx"]],["usize"]]],[11,"size_with","goblin::mach::symbols","",106,[[["endian"]],["usize"]]],[11,"size_with","","",107,[[["endian"]],["usize"]]],[11,"size_with","","",108,[[["ctx"]],["usize"]]],[11,"size_with","goblin::pe::data_directories","",113,[[["endian"]],["usize"]]],[11,"size_with","goblin::pe::debug","",116,[[["endian"]],["usize"]]],[11,"size_with","goblin::pe::header","",132,[[["endian"]],["usize"]]],[11,"size_with","goblin::pe::import","",135,[[["endian"]],["usize"]]],[11,"size_with","goblin::pe::optional_header","",141,[[["endian"]],["usize"]]],[11,"size_with","","",142,[[["endian"]],["usize"]]],[11,"size_with","","",144,[[["endian"]],["usize"]]],[11,"size_with","","",145,[[["endian"]],["usize"]]],[11,"size_with","goblin::pe::relocation","",147,[[["endian"]],["usize"]]],[11,"size_with","goblin::pe::section_table","",149,[[["endian"]],["usize"]]],[11,"size_with","goblin::pe::symbol","",150,[[["endian"]],["usize"]]],[11,"size_with","","",151,[[["endian"]],["usize"]]],[11,"size_with","","",152,[[["endian"]],["usize"]]],[11,"size_with","","",153,[[["endian"]],["usize"]]],[11,"size_with","","",154,[[["endian"]],["usize"]]],[11,"size_with","goblin::archive","",156,[[["endian"]],["usize"]]],[11,"network","goblin::container","",5,[[],["endian"]]],[11,"is_little","","",5,[[["self"]],["bool"]]]],"p":[[3,"HintData"],[4,"Hint"],[4,"Object"],[4,"Error"],[3,"Strtab"],[4,"Endian"],[3,"Ctx"],[4,"Container"],[3,"Elf"],[3,"CompressionHeader"],[3,"CompressionHeader"],[3,"CompressionHeader"],[3,"Header"],[3,"Header"],[3,"Header"],[3,"ProgramHeader"],[3,"ProgramHeader"],[3,"ProgramHeader"],[3,"SectionHeader"],[3,"SectionHeader"],[3,"SectionHeader"],[3,"Sym"],[3,"Sym"],[3,"Sym"],[3,"Symtab"],[3,"Dyn"],[3,"Dynamic"],[3,"DynamicInfo"],[3,"Dyn"],[3,"DynamicInfo"],[3,"Dyn"],[3,"DynamicInfo"],[3,"Reloc"],[3,"Rela"],[3,"Rel"],[3,"Rela"],[3,"Rel"],[3,"RelocSection"],[3,"Nhdr32"],[3,"Nhdr64"],[3,"NoteDataIterator"],[3,"NoteIterator"],[3,"Note"],[3,"GnuHash"],[3,"GnuHash"],[3,"MachO"],[3,"MultiArch"],[4,"Mach"],[3,"Export"],[4,"SymbolKind"],[4,"ExportInfo"],[3,"ExportTrie"],[3,"FatHeader"],[3,"FatArch"],[3,"Header32"],[3,"Header64"],[3,"Header"],[3,"Import"],[3,"BindInterpreter"],[3,"LoadCommandHeader"],[3,"Section32"],[3,"Section64"],[3,"SegmentCommand32"],[3,"SegmentCommand64"],[3,"Fvmlib"],[3,"FvmlibCommand"],[3,"Dylib"],[3,"DylibCommand"],[3,"SubFrameworkCommand"],[3,"SubClientCommand"],[3,"SubUmbrellaCommand"],[3,"SubLibraryCommand"],[3,"PreboundDylibCommand"],[3,"DylinkerCommand"],[3,"ThreadCommand"],[3,"RoutinesCommand32"],[3,"RoutinesCommand64"],[3,"SymtabCommand"],[3,"DysymtabCommand"],[3,"DylibTableOfContents"],[3,"DylibModule"],[3,"DylibModule64"],[3,"DylibReference"],[3,"TwolevelHintsCommand"],[3,"TwolevelHint"],[3,"PrebindCksumCommand"],[3,"UuidCommand"],[3,"RpathCommand"],[3,"LinkeditDataCommand"],[3,"EncryptionInfoCommand32"],[3,"EncryptionInfoCommand64"],[3,"VersionMinCommand"],[3,"DyldInfoCommand"],[3,"LinkerOptionCommand"],[3,"SymsegCommand"],[3,"IdentCommand"],[3,"FvmfileCommand"],[3,"EntryPointCommand"],[3,"SourceVersionCommand"],[3,"DataInCodeEntry"],[3,"LoadCommand"],[4,"CommandVariant"],[3,"RelocationInfo"],[3,"Section"],[3,"Segment"],[3,"Segments"],[3,"Nlist32"],[3,"Nlist64"],[3,"Nlist"],[3,"SymbolsCtx"],[3,"Symbols"],[3,"PE"],[3,"Coff"],[3,"DataDirectory"],[3,"DataDirectories"],[3,"DebugData"],[3,"ImageDebugDirectory"],[3,"CodeviewPDB70DebugInfo"],[3,"RuntimeFunction"],[3,"Register"],[3,"UnwindCode"],[3,"UnwindInfo"],[4,"StackFrameOffset"],[4,"UnwindOperation"],[4,"UnwindHandler"],[3,"ExceptionData"],[3,"ExportDirectoryTable"],[3,"ExportData"],[3,"Export"],[4,"ExportAddressTableEntry"],[4,"Reexport"],[3,"DosHeader"],[3,"CoffHeader"],[3,"Header"],[3,"HintNameTableEntry"],[3,"ImportDirectoryEntry"],[3,"SyntheticImportDirectoryEntry"],[3,"ImportData"],[3,"Import"],[4,"SyntheticImportLookupTableEntry"],[8,"Bitfield"],[3,"StandardFields32"],[3,"StandardFields64"],[3,"StandardFields"],[3,"WindowsFields32"],[3,"WindowsFields64"],[3,"OptionalHeader"],[3,"Relocation"],[3,"Relocations"],[3,"SectionTable"],[3,"Symbol"],[3,"AuxFunctionDefinition"],[3,"AuxBeginAndEndFunction"],[3,"AuxWeakExternal"],[3,"AuxSectionDefinition"],[3,"SymbolTable"],[3,"MemberHeader"],[3,"Header"],[3,"Member"],[3,"Index"],[4,"IndexType"],[3,"Archive"],[3,"SymIterator"],[3,"RelocIterator"],[3,"FatArchIterator"],[3,"MachOIterator"],[3,"RelocationIterator"],[3,"SectionIterator"],[3,"SymbolIterator"],[3,"RuntimeFunctionIterator"],[3,"UnwindCodeIterator"],[3,"SymbolIterator"],[6,"WindowsFields"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);